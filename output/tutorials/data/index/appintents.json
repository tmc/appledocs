{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/updates/appintents",
            "title": "App Intents updates",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/making-actions-and-content-discoverable-and-widely-available",
            "title": "Making actions and content discoverable and widely available",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/creating-your-first-app-intent",
            "title": "Creating your first app intent",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/acceleratingappinteractionswithappintents",
            "title": "Accelerating app interactions with App Intents",
            "type": "sampleCode"
          },
          {
            "title": "Siri and Apple Intelligence",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/integrating-actions-with-siri-and-apple-intelligence",
            "title": "Integrating actions with Siri and Apple Intelligence",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "System protocols",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/making-onscreen-content-available-to-siri-and-apple-intelligence",
            "title": "Making onscreen content available to Siri and Apple Intelligence",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "title": "Books",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-ebook-actions-available-to-siri-and-apple-intelligence",
                "title": "Making ebook actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Browser",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-browser-actions-available-to-siri-and-apple-intelligence",
                "title": "Making browser actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Camera",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-camera-actions-available-to-siri-and-apple-intelligence",
                "title": "Making camera actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Document reader",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-document-reader-actions-available-to-siri-and-apple-intelligence",
                "title": "Making document reader actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "File management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-file-management-actions-available-to-siri-and-apple-intelligence",
                "title": "Making file management actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Journaling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-journaling-actions-available-to-siri-and-apple-intelligence",
                "title": "Making journaling actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Email",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-email-actions-available-to-siri-and-apple-intelligence",
                "title": "Making email actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Photos and videos",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-photo-and-video-actions-available-to-siri-and-apple-intelligence",
                "title": "Making photo and video actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Presentations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-presentation-actions-available-to-siri-and-apple-intelligence",
                "title": "Making presentation actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Spreadsheets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-spreadsheet-actions-available-to-siri-and-apple-intelligence",
                "title": "Making spreadsheet actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "System and in-app search",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-in-app-search-actions-available-to-siri-and-apple-intelligence",
                "title": "Making in-app search actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Whiteboard",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-whiteboard-actions-available-to-siri-and-apple-intelligence",
                "title": "Making whiteboard actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Word processor and text editing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-word-processor-actions-available-to-siri-and-apple-intelligence",
                "title": "Making word processor actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Base protocols",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Assistant schema protocols",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Schema conformance",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Base protocols",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/appintents/assistant-schema-base-protocols",
                "title": "Assistant schema base protocols",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/app-intent-domains",
            "title": "App intent domains",
            "type": "collection"
          },
          {
            "path": "/documentation/appintents/making-your-app-s-functionality-available-to-siri",
            "title": "Making your appâ€™s functionality available to Siri",
            "type": "sampleCode"
          },
          {
            "title": "Other system experiences",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Focus filters",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/focus",
            "title": "Focus",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Responding to the Action button",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/actionbuttonarticle",
                "title": "Responding to the Action button on Apple Watch Ultra",
                "type": "article"
              }
            ],
            "path": "/documentation/appintents/actionbutton",
            "title": "Action button on iPhone and Apple Watch",
            "type": "collection"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/developing-a-widgetkit-strategy",
            "title": "Developing a WidgetKit strategy",
            "type": "article"
          },
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Actions",
                "type": "groupMarker"
              },
              {
                "title": "Controls, widgets, and Live Activities",
                "type": "groupMarker"
              },
              {
                "title": "Siri and Apple Intelligence",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/integrating-actions-with-siri-and-apple-intelligence",
                "title": "Integrating actions with Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Macros",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Books",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-ebook-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making ebook actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Browser",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-browser-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making browser actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Camera",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-camera-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making camera actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Document reader",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-document-reader-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making document reader actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "File management",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-file-management-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making file management actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Journaling",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-journaling-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making journaling actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Email",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-email-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making email actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Photos and videos",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-photo-and-video-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making photo and video actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Presentations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-presentation-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making presentation actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Spreadsheets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-spreadsheet-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making spreadsheet actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "System and in-app search",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-in-app-search-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making in-app search actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Whiteboard",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-whiteboard-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making whiteboard actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Word processor and text editing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-word-processor-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making word processor actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Base protocols",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Assistant schema protocols",
                        "type": "groupMarker"
                      },
                      {
                        "title": "Schema conformance",
                        "type": "groupMarker"
                      },
                      {
                        "title": "Base protocols",
                        "type": "groupMarker"
                      }
                    ],
                    "path": "/documentation/appintents/assistant-schema-base-protocols",
                    "title": "Assistant schema base protocols",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/app-intent-domains",
                "title": "App intent domains",
                "type": "collection"
              },
              {
                "title": "SiriKit intent migration",
                "type": "groupMarker"
              },
              {
                "title": "Dependency management",
                "type": "groupMarker"
              },
              {
                "title": "Supplementary content",
                "type": "groupMarker"
              },
              {
                "title": "Results",
                "type": "groupMarker"
              },
              {
                "title": "Extensions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/app-intents",
            "title": "App intents",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Donation management",
                "type": "groupMarker"
              },
              {
                "title": "Intent predictions",
                "type": "groupMarker"
              },
              {
                "title": "Intent relevancy",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/intent-discovery",
            "title": "Intent discovery",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "App Shortcut management",
                "type": "groupMarker"
              },
              {
                "title": "App Shortcut definition",
                "type": "groupMarker"
              },
              {
                "title": "App Shortcut options",
                "type": "groupMarker"
              },
              {
                "title": "App Shortcut parameter presentation",
                "type": "groupMarker"
              },
              {
                "title": "Buttons",
                "type": "groupMarker"
              },
              {
                "title": "Tip views",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/app-shortcuts",
            "title": "App Shortcuts",
            "type": "collection"
          },
          {
            "title": "Parameters, custom data types, and queries",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/adding-parameters-to-an-app-intent",
            "title": "Adding parameters to an app intent",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/integrating-custom-types-into-your-intents",
            "title": "Integrating custom data types into your intents",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Intent parameters",
                "type": "groupMarker"
              },
              {
                "title": "Parameter choices",
                "type": "groupMarker"
              },
              {
                "title": "Shortcuts support",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/parameter-resolution",
            "title": "Parameter resolution",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Entities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/integrating-custom-types-into-your-intents",
                "title": "Integrating custom data types into your intents",
                "type": "article"
              },
              {
                "title": "Entity identity",
                "type": "groupMarker"
              },
              {
                "title": "Entity content",
                "type": "groupMarker"
              },
              {
                "title": "Entity presentation",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/app-entities",
            "title": "App entities",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Identifier-based queries",
                "type": "groupMarker"
              },
              {
                "title": "String-based queries",
                "type": "groupMarker"
              },
              {
                "title": "Property-matched queries",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Equatable comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "title": "String comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Containment comparisons",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/appintents/property-comparators",
                "title": "Property comparators",
                "type": "collection"
              },
              {
                "title": "Unique entity queries",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/entity-queries",
            "title": "Entity queries",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Integer resolution",
                "type": "groupMarker"
              },
              {
                "title": "Floating-point resolution",
                "type": "groupMarker"
              },
              {
                "title": "String resolution",
                "type": "groupMarker"
              },
              {
                "title": "Boolean resolution",
                "type": "groupMarker"
              },
              {
                "title": "URL resolution",
                "type": "groupMarker"
              },
              {
                "title": "Custom resolution",
                "type": "groupMarker"
              },
              {
                "title": "Range validation",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/resolvers",
            "title": "Resolvers",
            "type": "collection"
          },
          {
            "title": "Utility types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Contacts",
                "type": "groupMarker"
              },
              {
                "title": "Files",
                "type": "groupMarker"
              },
              {
                "title": "Monetary types",
                "type": "groupMarker"
              },
              {
                "title": "Items and collections",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/common-data-types",
            "title": "Common types",
            "type": "collection"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Macros",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/appintents",
        "title": "App Intents",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/updates/appintents",
            "title": "App Intents updates",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/making-actions-and-content-discoverable-and-widely-available",
            "title": "Making actions and content discoverable and widely available",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/creating-your-first-app-intent",
            "title": "Creating your first app intent",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/acceleratingappinteractionswithappintents",
            "title": "Accelerating app interactions with App Intents",
            "type": "sampleCode"
          },
          {
            "title": "Siri and Apple Intelligence",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/integrating-actions-with-siri-and-apple-intelligence",
            "title": "Integrating actions with Siri and Apple Intelligence",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "System protocols",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/making-onscreen-content-available-to-siri-and-apple-intelligence",
            "title": "Making onscreen content available to Siri and Apple Intelligence",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "title": "Books",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-ebook-actions-available-to-siri-and-apple-intelligence",
                "title": "Making ebook actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Browser",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-browser-actions-available-to-siri-and-apple-intelligence",
                "title": "Making browser actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Camera",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-camera-actions-available-to-siri-and-apple-intelligence",
                "title": "Making camera actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Document reader",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-document-reader-actions-available-to-siri-and-apple-intelligence",
                "title": "Making document reader actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "File management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-file-management-actions-available-to-siri-and-apple-intelligence",
                "title": "Making file management actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Journaling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-journaling-actions-available-to-siri-and-apple-intelligence",
                "title": "Making journaling actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Email",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-email-actions-available-to-siri-and-apple-intelligence",
                "title": "Making email actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Photos and videos",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-photo-and-video-actions-available-to-siri-and-apple-intelligence",
                "title": "Making photo and video actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Presentations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-presentation-actions-available-to-siri-and-apple-intelligence",
                "title": "Making presentation actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Spreadsheets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-spreadsheet-actions-available-to-siri-and-apple-intelligence",
                "title": "Making spreadsheet actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "System and in-app search",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-in-app-search-actions-available-to-siri-and-apple-intelligence",
                "title": "Making in-app search actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Whiteboard",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-whiteboard-actions-available-to-siri-and-apple-intelligence",
                "title": "Making whiteboard actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Word processor and text editing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-word-processor-actions-available-to-siri-and-apple-intelligence",
                "title": "Making word processor actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "title": "Base protocols",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Assistant schema protocols",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Schema conformance",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Base protocols",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/appintents/assistant-schema-base-protocols",
                "title": "Assistant schema base protocols",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/app-intent-domains",
            "title": "App intent domains",
            "type": "collection"
          },
          {
            "path": "/documentation/appintents/making-your-app-s-functionality-available-to-siri",
            "title": "Making your appâ€™s functionality available to Siri",
            "type": "sampleCode"
          },
          {
            "title": "Other system experiences",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Focus filters",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/focus",
            "title": "Focus",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Responding to the Action button",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/actionbuttonarticle",
                "title": "Responding to the Action button on Apple Watch Ultra",
                "type": "article"
              }
            ],
            "path": "/documentation/appintents/actionbutton",
            "title": "Action button on iPhone and Apple Watch",
            "type": "collection"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/developing-a-widgetkit-strategy",
            "title": "Developing a WidgetKit strategy",
            "type": "article"
          },
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Actions",
                "type": "groupMarker"
              },
              {
                "title": "Controls, widgets, and Live Activities",
                "type": "groupMarker"
              },
              {
                "title": "Siri and Apple Intelligence",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/integrating-actions-with-siri-and-apple-intelligence",
                "title": "Integrating actions with Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Macros",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Books",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-ebook-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making ebook actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Browser",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-browser-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making browser actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Camera",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-camera-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making camera actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Document reader",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-document-reader-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making document reader actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "File management",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-file-management-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making file management actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Journaling",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-journaling-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making journaling actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Email",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-email-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making email actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Photos and videos",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-photo-and-video-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making photo and video actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Presentations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-presentation-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making presentation actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Spreadsheets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-spreadsheet-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making spreadsheet actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "System and in-app search",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-in-app-search-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making in-app search actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Whiteboard",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-whiteboard-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making whiteboard actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Word processor and text editing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-word-processor-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making word processor actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "title": "Base protocols",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Assistant schema protocols",
                        "type": "groupMarker"
                      },
                      {
                        "title": "Schema conformance",
                        "type": "groupMarker"
                      },
                      {
                        "title": "Base protocols",
                        "type": "groupMarker"
                      }
                    ],
                    "path": "/documentation/appintents/assistant-schema-base-protocols",
                    "title": "Assistant schema base protocols",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/app-intent-domains",
                "title": "App intent domains",
                "type": "collection"
              },
              {
                "title": "SiriKit intent migration",
                "type": "groupMarker"
              },
              {
                "title": "Dependency management",
                "type": "groupMarker"
              },
              {
                "title": "Supplementary content",
                "type": "groupMarker"
              },
              {
                "title": "Results",
                "type": "groupMarker"
              },
              {
                "title": "Extensions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/app-intents",
            "title": "App intents",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Donation management",
                "type": "groupMarker"
              },
              {
                "title": "Intent predictions",
                "type": "groupMarker"
              },
              {
                "title": "Intent relevancy",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/intent-discovery",
            "title": "Intent discovery",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "App Shortcut management",
                "type": "groupMarker"
              },
              {
                "title": "App Shortcut definition",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/cfbundleicons/cfbundleprimaryicon/nsappiconactiontintcolorname",
                "title": "NSAppIconActionTintColorName",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/cfbundleicons/cfbundleprimaryicon/nsappiconcomplementingcolornames",
                "title": "NSAppIconComplementingColorNames",
                "type": "typealias"
              },
              {
                "title": "App Shortcut options",
                "type": "groupMarker"
              },
              {
                "title": "App Shortcut parameter presentation",
                "type": "groupMarker"
              },
              {
                "title": "Buttons",
                "type": "groupMarker"
              },
              {
                "title": "Tip views",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/app-shortcuts",
            "title": "App Shortcuts",
            "type": "collection"
          },
          {
            "title": "Parameters, custom data types, and queries",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/adding-parameters-to-an-app-intent",
            "title": "Adding parameters to an app intent",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/integrating-custom-types-into-your-intents",
            "title": "Integrating custom data types into your intents",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Intent parameters",
                "type": "groupMarker"
              },
              {
                "title": "Parameter choices",
                "type": "groupMarker"
              },
              {
                "title": "Shortcuts support",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/parameter-resolution",
            "title": "Parameter resolution",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Entities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/integrating-custom-types-into-your-intents",
                "title": "Integrating custom data types into your intents",
                "type": "article"
              },
              {
                "title": "Entity identity",
                "type": "groupMarker"
              },
              {
                "title": "Entity content",
                "type": "groupMarker"
              },
              {
                "title": "Entity presentation",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/app-entities",
            "title": "App entities",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Identifier-based queries",
                "type": "groupMarker"
              },
              {
                "title": "String-based queries",
                "type": "groupMarker"
              },
              {
                "title": "Property-matched queries",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Equatable comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "title": "String comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Containment comparisons",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/appintents/property-comparators",
                "title": "Property comparators",
                "type": "collection"
              },
              {
                "title": "Unique entity queries",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/entity-queries",
            "title": "Entity queries",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Integer resolution",
                "type": "groupMarker"
              },
              {
                "title": "Floating-point resolution",
                "type": "groupMarker"
              },
              {
                "title": "String resolution",
                "type": "groupMarker"
              },
              {
                "title": "Boolean resolution",
                "type": "groupMarker"
              },
              {
                "title": "URL resolution",
                "type": "groupMarker"
              },
              {
                "title": "Custom resolution",
                "type": "groupMarker"
              },
              {
                "title": "Range validation",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/resolvers",
            "title": "Resolvers",
            "type": "collection"
          },
          {
            "title": "Utility types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Contacts",
                "type": "groupMarker"
              },
              {
                "title": "Files",
                "type": "groupMarker"
              },
              {
                "title": "Monetary types",
                "type": "groupMarker"
              },
              {
                "title": "Items and collections",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/appintents/common-data-types",
            "title": "Common types",
            "type": "collection"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Macros",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/appintents",
        "title": "App Intents",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/updates/appintents",
            "title": "App Intents updates",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/making-actions-and-content-discoverable-and-widely-available",
            "title": "Making actions and content discoverable and widely available",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/creating-your-first-app-intent",
            "title": "Creating your first app intent",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/acceleratingappinteractionswithappintents",
            "title": "Accelerating app interactions with App Intents",
            "type": "sampleCode"
          },
          {
            "title": "Siri and Apple Intelligence",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/integrating-actions-with-siri-and-apple-intelligence",
            "title": "Integrating actions with Siri and Apple Intelligence",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "System protocols",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appentityannotatable/appentityidentifier",
                    "title": "var appEntityIdentifier: EntityIdentifier?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appentityannotatable",
                "title": "AppEntityAnnotatable",
                "type": "protocol"
              }
            ],
            "path": "/documentation/appintents/making-onscreen-content-available-to-siri-and-apple-intelligence",
            "title": "Making onscreen content available to Siri and Apple Intelligence",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/assistantintent(schema:)",
                "title": "macro AssistantIntent<T>(schema: T)",
                "type": "macro"
              },
              {
                "path": "/documentation/appintents/assistantentity(schema:)",
                "title": "macro AssistantEntity<T>(schema: T)",
                "type": "macro"
              },
              {
                "path": "/documentation/appintents/assistantenum(schema:)",
                "title": "macro AssistantEnum<T>(schema: T)",
                "type": "macro"
              },
              {
                "title": "Books",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-ebook-actions-available-to-siri-and-apple-intelligence",
                "title": "Making ebook actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/navigatepage",
                    "title": "var navigatePage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/openbook",
                    "title": "var openBook: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/playaudiobook",
                    "title": "var playAudiobook: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/search",
                    "title": "var search: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/updatecharacterspacing",
                    "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/updatefontsize",
                    "title": "var updateFontSize: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/updatelinespacing",
                    "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/updatesettings",
                    "title": "var updateSettings: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksintent/updatewordspacing",
                    "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/booksintent",
                "title": "AssistantSchemas.BooksIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksentity/audiobook",
                    "title": "var audiobook: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksentity/book",
                    "title": "var book: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksentity/settings",
                    "title": "var settings: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/booksentity",
                "title": "AssistantSchemas.BooksEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/contenttype",
                    "title": "var contentType: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/font",
                    "title": "var font: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/fontsize",
                    "title": "var fontSize: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/navigationdirection",
                    "title": "var navigationDirection: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/pagenavigationsetting",
                    "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/relativecharacterspacingchange",
                    "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/relativefontchange",
                    "title": "var relativeFontChange: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/relativelinespacingchange",
                    "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/relativewordspacingchange",
                    "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/booksenum/theme",
                    "title": "var theme: some AssistantSchemas.Enum",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/booksenum",
                "title": "AssistantSchemas.BooksEnum",
                "type": "protocol"
              },
              {
                "title": "Browser",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-browser-actions-available-to-siri-and-apple-intelligence",
                "title": "Making browser actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/bookmarktab",
                    "title": "var bookmarkTab: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/bookmarkurl",
                    "title": "var bookmarkURL: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/clearhistory",
                    "title": "var clearHistory: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/closetabs",
                    "title": "var closeTabs: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/closewindows",
                    "title": "var closeWindows: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/createtab",
                    "title": "var createTab: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/createwindow",
                    "title": "var createWindow: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/deletebookmarks",
                    "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/findonpage",
                    "title": "var findOnPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/openbookmark",
                    "title": "var openBookmark: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/openurlintab",
                    "title": "var openURLInTab: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/search",
                    "title": "var search: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserintent/switchtab",
                    "title": "var switchTab: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/browserintent",
                "title": "AssistantSchemas.BrowserIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserentity/bookmark",
                    "title": "var bookmark: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserentity/tab",
                    "title": "var tab: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserentity/window",
                    "title": "var window: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/browserentity",
                "title": "AssistantSchemas.BrowserEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/browserenum/clearhistorytimeframe",
                    "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/browserenum",
                "title": "AssistantSchemas.BrowserEnum",
                "type": "protocol"
              },
              {
                "title": "Camera",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-camera-actions-available-to-siri-and-apple-intelligence",
                "title": "Making camera actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraintent/openincapturemode",
                    "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraintent/setdevice",
                    "title": "var setDevice: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraintent/startcapture",
                    "title": "var startCapture: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraintent/stopcapture",
                    "title": "var stopCapture: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraintent/switchdevice",
                    "title": "var switchDevice: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/cameraintent",
                "title": "AssistantSchemas.CameraIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraenum/capturedevice",
                    "title": "var captureDevice: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraenum/captureduration",
                    "title": "var captureDuration: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/cameraenum/capturemode",
                    "title": "var captureMode: some AssistantSchemas.Enum",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/cameraenum",
                "title": "AssistantSchemas.CameraEnum",
                "type": "protocol"
              },
              {
                "title": "Document reader",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-document-reader-actions-available-to-siri-and-apple-intelligence",
                "title": "Making document reader actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/deletepages",
                    "title": "var deletePages: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/enhancedocuments",
                    "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/insertpages",
                    "title": "var insertPages: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/opendocument",
                    "title": "var openDocument: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/openpage",
                    "title": "var openPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/resizedocuments",
                    "title": "var resizeDocuments: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/rotatedocuments",
                    "title": "var rotateDocuments: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/rotatepages",
                    "title": "var rotatePages: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerintent/searchdocuments",
                    "title": "var searchDocuments: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/readerintent",
                "title": "AssistantSchemas.ReaderIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerentity/document",
                    "title": "var document: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerentity/page",
                    "title": "var page: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/readerentity",
                "title": "AssistantSchemas.ReaderEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/readerenum/documentkind",
                    "title": "var documentKind: some AssistantSchemas.Enum",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/readerenum",
                "title": "AssistantSchemas.ReaderEnum",
                "type": "protocol"
              },
              {
                "title": "File management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-file-management-actions-available-to-siri-and-apple-intelligence",
                "title": "Making file management actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/filesintent/createfolder",
                    "title": "var createFolder: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/filesintent/deletefiles",
                    "title": "var deleteFiles: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/filesintent/movefiles",
                    "title": "var moveFiles: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/filesintent/openfile",
                    "title": "var openFile: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/filesintent/renamefile",
                    "title": "var renameFile: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/filesintent",
                "title": "AssistantSchemas.FilesIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/filesentity/file",
                    "title": "var file: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/filesentity",
                "title": "AssistantSchemas.FilesEntity",
                "type": "protocol"
              },
              {
                "title": "Journaling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-journaling-actions-available-to-siri-and-apple-intelligence",
                "title": "Making journaling actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/journalintent/createaudioentry",
                    "title": "var createAudioEntry: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/journalintent/createentry",
                    "title": "var createEntry: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/journalintent/deleteentry",
                    "title": "var deleteEntry: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/journalintent/search",
                    "title": "var search: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/journalintent/updateentry",
                    "title": "var updateEntry: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/journalintent",
                "title": "AssistantSchemas.JournalIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/journalentity/entry",
                    "title": "var entry: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/journalentity",
                "title": "AssistantSchemas.JournalEntity",
                "type": "protocol"
              },
              {
                "title": "Email",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-email-actions-available-to-siri-and-apple-intelligence",
                "title": "Making email actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/archivemail",
                    "title": "var archiveMail: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/createdraft",
                    "title": "var createDraft: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/deletedraft",
                    "title": "var deleteDraft: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/deletemail",
                    "title": "var deleteMail: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/forwardmail",
                    "title": "var forwardMail: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/replymail",
                    "title": "var replyMail: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/savedraft",
                    "title": "var saveDraft: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/senddraft",
                    "title": "var sendDraft: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/updatedraft",
                    "title": "var updateDraft: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailintent/updatemail",
                    "title": "var updateMail: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/mailintent",
                "title": "AssistantSchemas.MailIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailentity/account",
                    "title": "var account: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailentity/draft",
                    "title": "var draft: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailentity/mailbox",
                    "title": "var mailbox: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/mailentity/message",
                    "title": "var message: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/mailentity",
                "title": "AssistantSchemas.MailEntity",
                "type": "protocol"
              },
              {
                "title": "Photos and videos",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-photo-and-video-actions-available-to-siri-and-apple-intelligence",
                "title": "Making photo and video actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/addassetstoalbum",
                    "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/cleanupphoto",
                    "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/copyedits",
                    "title": "var copyEdits: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/createalbum",
                    "title": "var createAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/createassets",
                    "title": "var createAssets: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/crop",
                    "title": "var crop: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/deletealbum",
                    "title": "var deleteAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/deleteassets",
                    "title": "var deleteAssets: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/duplicateassets",
                    "title": "var duplicateAssets: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/openalbum",
                    "title": "var openAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/openasset",
                    "title": "var openAsset: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/pasteedits",
                    "title": "var pasteEdits: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/posttosharedalbum",
                    "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/removeassetsfromalbum",
                    "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/search",
                    "title": "var search: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/setdepth",
                    "title": "var setDepth: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/setexposure",
                    "title": "var setExposure: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/setfilter",
                    "title": "var setFilter: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/setrotation",
                    "title": "var setRotation: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/setsaturation",
                    "title": "var setSaturation: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/setwarmth",
                    "title": "var setWarmth: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/straighten",
                    "title": "var straighten: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/toggledepth",
                    "title": "var toggleDepth: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/togglesuggestededits",
                    "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/updatealbum",
                    "title": "var updateAlbum: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/updateasset",
                    "title": "var updateAsset: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosintent/updaterecognizedperson",
                    "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/photosintent",
                "title": "AssistantSchemas.PhotosIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosentity/album",
                    "title": "var album: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosentity/asset",
                    "title": "var asset: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosentity/recognizedperson",
                    "title": "var recognizedPerson: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/photosentity",
                "title": "AssistantSchemas.PhotosEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosenum/albumtype",
                    "title": "var albumType: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosenum/assettype",
                    "title": "var assetType: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosenum/filtertype",
                    "title": "var filterType: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/photosenum/rotationdirection",
                    "title": "var rotationDirection: some AssistantSchemas.Enum",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/photosenum",
                "title": "AssistantSchemas.PhotosEnum",
                "type": "protocol"
              },
              {
                "title": "Presentations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-presentation-actions-available-to-siri-and-apple-intelligence",
                "title": "Making presentation actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/addaudiotoslide",
                    "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/addcommenttoslide",
                    "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/addimagetoslide",
                    "title": "var addImageToSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/addtextboxtoslide",
                    "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/addvideotoslide",
                    "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/addwebvideotoslide",
                    "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/create",
                    "title": "var create: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/createslide",
                    "title": "var createSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/deleteslide",
                    "title": "var deleteSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/open",
                    "title": "var open: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/openslide",
                    "title": "var openSlide: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/setslidetitle",
                    "title": "var setSlideTitle: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/startplayback",
                    "title": "var startPlayback: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/stopplayback",
                    "title": "var stopPlayback: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationintent/update",
                    "title": "var update: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/presentationintent",
                "title": "AssistantSchemas.PresentationIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationentity/document",
                    "title": "var document: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationentity/slide",
                    "title": "var slide: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/presentationentity/template",
                    "title": "var template: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/presentationentity",
                "title": "AssistantSchemas.PresentationEntity",
                "type": "protocol"
              },
              {
                "title": "Spreadsheets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-spreadsheet-actions-available-to-siri-and-apple-intelligence",
                "title": "Making spreadsheet actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addaudiotosheet",
                    "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addcommenttosheet",
                    "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addimagetosheet",
                    "title": "var addImageToSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addtextboxtosheet",
                    "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addvideotosheet",
                    "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addwebvideotosheet",
                    "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/create",
                    "title": "var create: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/createsheet",
                    "title": "var createSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/delete",
                    "title": "var delete: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/deletesheet",
                    "title": "var deleteSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/open",
                    "title": "var open: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/opensheet",
                    "title": "var openSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/update",
                    "title": "var update: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent/updatesheet",
                    "title": "var updateSheet: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/spreadsheetintent",
                "title": "AssistantSchemas.SpreadsheetIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetentity/document",
                    "title": "var document: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetentity/sheet",
                    "title": "var sheet: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/spreadsheetentity/template",
                    "title": "var template: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/spreadsheetentity",
                "title": "AssistantSchemas.SpreadsheetEntity",
                "type": "protocol"
              },
              {
                "title": "System and in-app search",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-in-app-search-actions-available-to-siri-and-apple-intelligence",
                "title": "Making in-app search actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/systemintent/search",
                    "title": "var search: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/systemintent",
                "title": "AssistantSchemas.SystemIntent",
                "type": "protocol"
              },
              {
                "title": "Whiteboard",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-whiteboard-actions-available-to-siri-and-apple-intelligence",
                "title": "Making whiteboard actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/createboard",
                    "title": "var createBoard: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/createitem",
                    "title": "var createItem: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteboard",
                    "title": "var deleteBoard: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteitem",
                    "title": "var deleteItem: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/openboard",
                    "title": "var openBoard: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateboard",
                    "title": "var updateBoard: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateitem",
                    "title": "var updateItem: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/whiteboardintent",
                "title": "AssistantSchemas.WhiteboardIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardentity/board",
                    "title": "var board: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardentity/item",
                    "title": "var item: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/whiteboardentity",
                "title": "AssistantSchemas.WhiteboardEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardenum/color",
                    "title": "var color: some AssistantSchemas.Enum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/whiteboardenum/itemtype",
                    "title": "var itemType: some AssistantSchemas.Enum",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/whiteboardenum",
                "title": "AssistantSchemas.WhiteboardEnum",
                "type": "protocol"
              },
              {
                "title": "Word processor and text editing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/making-word-processor-actions-available-to-siri-and-apple-intelligence",
                "title": "Making word processor actions available to Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addaudiotopage",
                    "title": "var addAudioToPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addimagetopage",
                    "title": "var addImageToPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addtextboxtopage",
                    "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addvideotopage",
                    "title": "var addVideoToPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addwebvideotopage",
                    "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/create",
                    "title": "var create: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/createpage",
                    "title": "var createPage: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/open",
                    "title": "var open: some AssistantSchemas.Intent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent/openpage",
                    "title": "var openPage: some AssistantSchemas.Intent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/wordprocessorintent",
                "title": "AssistantSchemas.WordProcessorIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorentity/document",
                    "title": "var document: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorentity/page",
                    "title": "var page: some AssistantSchemas.Entity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/assistantschemas/wordprocessorentity/template",
                    "title": "var template: some AssistantSchemas.Entity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/assistantschemas/wordprocessorentity",
                "title": "AssistantSchemas.WordProcessorEntity",
                "type": "protocol"
              },
              {
                "title": "Base protocols",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Assistant schema protocols",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Protocols",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksentity/audiobook",
                            "title": "var audiobook: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksentity/book",
                            "title": "var book: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksentity/settings",
                            "title": "var settings: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/booksentity",
                        "title": "AssistantSchemas.BooksEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/contenttype",
                            "title": "var contentType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/font",
                            "title": "var font: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/fontsize",
                            "title": "var fontSize: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/navigationdirection",
                            "title": "var navigationDirection: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/pagenavigationsetting",
                            "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/relativecharacterspacingchange",
                            "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/relativefontchange",
                            "title": "var relativeFontChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/relativelinespacingchange",
                            "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/relativewordspacingchange",
                            "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksenum/theme",
                            "title": "var theme: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/booksenum",
                        "title": "AssistantSchemas.BooksEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/navigatepage",
                            "title": "var navigatePage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/openbook",
                            "title": "var openBook: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/playaudiobook",
                            "title": "var playAudiobook: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/search",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/updatecharacterspacing",
                            "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/updatefontsize",
                            "title": "var updateFontSize: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/updatelinespacing",
                            "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/updatesettings",
                            "title": "var updateSettings: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/booksintent/updatewordspacing",
                            "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/booksintent",
                        "title": "AssistantSchemas.BooksIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserentity/bookmark",
                            "title": "var bookmark: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserentity/tab",
                            "title": "var tab: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserentity/window",
                            "title": "var window: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/browserentity",
                        "title": "AssistantSchemas.BrowserEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserenum/clearhistorytimeframe",
                            "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/browserenum",
                        "title": "AssistantSchemas.BrowserEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/bookmarktab",
                            "title": "var bookmarkTab: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/bookmarkurl",
                            "title": "var bookmarkURL: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/clearhistory",
                            "title": "var clearHistory: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/closetabs",
                            "title": "var closeTabs: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/closewindows",
                            "title": "var closeWindows: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/createtab",
                            "title": "var createTab: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/createwindow",
                            "title": "var createWindow: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/deletebookmarks",
                            "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/findonpage",
                            "title": "var findOnPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/openbookmark",
                            "title": "var openBookmark: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/openurlintab",
                            "title": "var openURLInTab: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/search",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/browserintent/switchtab",
                            "title": "var switchTab: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/browserintent",
                        "title": "AssistantSchemas.BrowserIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraenum/capturedevice",
                            "title": "var captureDevice: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraenum/captureduration",
                            "title": "var captureDuration: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraenum/capturemode",
                            "title": "var captureMode: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/cameraenum",
                        "title": "AssistantSchemas.CameraEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraintent/openincapturemode",
                            "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraintent/setdevice",
                            "title": "var setDevice: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraintent/startcapture",
                            "title": "var startCapture: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraintent/stopcapture",
                            "title": "var stopCapture: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/cameraintent/switchdevice",
                            "title": "var switchDevice: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/cameraintent",
                        "title": "AssistantSchemas.CameraIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/books",
                            "title": "static var books: some AssistantSchemas.BooksEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/browser",
                            "title": "static var browser: some AssistantSchemas.BrowserEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/files",
                            "title": "static var files: some AssistantSchemas.FilesEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/journal",
                            "title": "static var journal: some AssistantSchemas.JournalEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/mail",
                            "title": "static var mail: some AssistantSchemas.MailEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/photos",
                            "title": "static var photos: some AssistantSchemas.PhotosEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/presentation",
                            "title": "static var presentation: some AssistantSchemas.PresentationEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/reader",
                            "title": "static var reader: some AssistantSchemas.ReaderEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/spreadsheet",
                            "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/whiteboard",
                            "title": "static var whiteboard: some AssistantSchemas.WhiteboardEntity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/entity/wordprocessor",
                            "title": "static var wordProcessor: some AssistantSchemas.WordProcessorEntity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/entity",
                        "title": "AssistantSchemas.Entity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/enum/books",
                            "title": "static var books: some AssistantSchemas.BooksEnum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/enum/browser",
                            "title": "static var browser: some AssistantSchemas.BrowserEnum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/enum/camera",
                            "title": "static var camera: some AssistantSchemas.CameraEnum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/enum/photos",
                            "title": "static var photos: some AssistantSchemas.PhotosEnum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/enum/reader",
                            "title": "static var reader: some AssistantSchemas.ReaderEnum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/enum/whiteboard",
                            "title": "static var whiteboard: some AssistantSchemas.WhiteboardEnum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/enum",
                        "title": "AssistantSchemas.Enum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/filesentity/file",
                            "title": "var file: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/filesentity",
                        "title": "AssistantSchemas.FilesEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/filesintent/createfolder",
                            "title": "var createFolder: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/filesintent/deletefiles",
                            "title": "var deleteFiles: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/filesintent/movefiles",
                            "title": "var moveFiles: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/filesintent/openfile",
                            "title": "var openFile: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/filesintent/renamefile",
                            "title": "var renameFile: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/filesintent",
                        "title": "AssistantSchemas.FilesIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/books",
                            "title": "static var books: some AssistantSchemas.BooksIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/browser",
                            "title": "static var browser: some AssistantSchemas.BrowserIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/camera",
                            "title": "static var camera: some AssistantSchemas.CameraIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/files",
                            "title": "static var files: some AssistantSchemas.FilesIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/journal",
                            "title": "static var journal: some AssistantSchemas.JournalIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/mail",
                            "title": "static var mail: some AssistantSchemas.MailIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/photos",
                            "title": "static var photos: some AssistantSchemas.PhotosIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/presentation",
                            "title": "static var presentation: some AssistantSchemas.PresentationIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/reader",
                            "title": "static var reader: some AssistantSchemas.ReaderIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/spreadsheet",
                            "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/system",
                            "title": "static var system: some AssistantSchemas.SystemIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/whiteboard",
                            "title": "static var whiteboard: some AssistantSchemas.WhiteboardIntent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/intent/wordprocessor",
                            "title": "static var wordProcessor: some AssistantSchemas.WordProcessorIntent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/intent",
                        "title": "AssistantSchemas.Intent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/journalentity/entry",
                            "title": "var entry: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/journalentity",
                        "title": "AssistantSchemas.JournalEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/journalintent/createaudioentry",
                            "title": "var createAudioEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/journalintent/createentry",
                            "title": "var createEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/journalintent/deleteentry",
                            "title": "var deleteEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/journalintent/search",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/journalintent/updateentry",
                            "title": "var updateEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/journalintent",
                        "title": "AssistantSchemas.JournalIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailentity/account",
                            "title": "var account: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailentity/draft",
                            "title": "var draft: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailentity/mailbox",
                            "title": "var mailbox: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailentity/message",
                            "title": "var message: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/mailentity",
                        "title": "AssistantSchemas.MailEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/archivemail",
                            "title": "var archiveMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/createdraft",
                            "title": "var createDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/deletedraft",
                            "title": "var deleteDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/deletemail",
                            "title": "var deleteMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/forwardmail",
                            "title": "var forwardMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/replymail",
                            "title": "var replyMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/savedraft",
                            "title": "var saveDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/senddraft",
                            "title": "var sendDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/updatedraft",
                            "title": "var updateDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/mailintent/updatemail",
                            "title": "var updateMail: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/mailintent",
                        "title": "AssistantSchemas.MailIntent",
                        "type": "protocol"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/model",
                        "title": "AssistantSchemas.Model",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosentity/album",
                            "title": "var album: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosentity/asset",
                            "title": "var asset: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosentity/recognizedperson",
                            "title": "var recognizedPerson: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/photosentity",
                        "title": "AssistantSchemas.PhotosEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosenum/albumtype",
                            "title": "var albumType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosenum/assettype",
                            "title": "var assetType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosenum/filtertype",
                            "title": "var filterType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosenum/rotationdirection",
                            "title": "var rotationDirection: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/photosenum",
                        "title": "AssistantSchemas.PhotosEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/addassetstoalbum",
                            "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/cleanupphoto",
                            "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/copyedits",
                            "title": "var copyEdits: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/createalbum",
                            "title": "var createAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/createassets",
                            "title": "var createAssets: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/crop",
                            "title": "var crop: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/deletealbum",
                            "title": "var deleteAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/deleteassets",
                            "title": "var deleteAssets: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/duplicateassets",
                            "title": "var duplicateAssets: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/openalbum",
                            "title": "var openAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/openasset",
                            "title": "var openAsset: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/pasteedits",
                            "title": "var pasteEdits: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/posttosharedalbum",
                            "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/removeassetsfromalbum",
                            "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/search",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/setdepth",
                            "title": "var setDepth: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/setexposure",
                            "title": "var setExposure: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/setfilter",
                            "title": "var setFilter: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/setrotation",
                            "title": "var setRotation: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/setsaturation",
                            "title": "var setSaturation: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/setwarmth",
                            "title": "var setWarmth: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/straighten",
                            "title": "var straighten: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/toggledepth",
                            "title": "var toggleDepth: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/togglesuggestededits",
                            "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/updatealbum",
                            "title": "var updateAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/updateasset",
                            "title": "var updateAsset: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/photosintent/updaterecognizedperson",
                            "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/photosintent",
                        "title": "AssistantSchemas.PhotosIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationentity/document",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationentity/slide",
                            "title": "var slide: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationentity/template",
                            "title": "var template: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/presentationentity",
                        "title": "AssistantSchemas.PresentationEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/addaudiotoslide",
                            "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/addcommenttoslide",
                            "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/addimagetoslide",
                            "title": "var addImageToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/addtextboxtoslide",
                            "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/addvideotoslide",
                            "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/addwebvideotoslide",
                            "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/create",
                            "title": "var create: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/createslide",
                            "title": "var createSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/deleteslide",
                            "title": "var deleteSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/open",
                            "title": "var open: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/openslide",
                            "title": "var openSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/setslidetitle",
                            "title": "var setSlideTitle: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/startplayback",
                            "title": "var startPlayback: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/stopplayback",
                            "title": "var stopPlayback: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/presentationintent/update",
                            "title": "var update: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/presentationintent",
                        "title": "AssistantSchemas.PresentationIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerentity/document",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerentity/page",
                            "title": "var page: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/readerentity",
                        "title": "AssistantSchemas.ReaderEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerenum/documentkind",
                            "title": "var documentKind: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/readerenum",
                        "title": "AssistantSchemas.ReaderEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/deletepages",
                            "title": "var deletePages: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/enhancedocuments",
                            "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/insertpages",
                            "title": "var insertPages: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/opendocument",
                            "title": "var openDocument: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/openpage",
                            "title": "var openPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/resizedocuments",
                            "title": "var resizeDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/rotatedocuments",
                            "title": "var rotateDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/rotatepages",
                            "title": "var rotatePages: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/readerintent/searchdocuments",
                            "title": "var searchDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/readerintent",
                        "title": "AssistantSchemas.ReaderIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetentity/document",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetentity/sheet",
                            "title": "var sheet: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetentity/template",
                            "title": "var template: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/spreadsheetentity",
                        "title": "AssistantSchemas.SpreadsheetEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addaudiotosheet",
                            "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addcommenttosheet",
                            "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addimagetosheet",
                            "title": "var addImageToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addtextboxtosheet",
                            "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addvideotosheet",
                            "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addwebvideotosheet",
                            "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/create",
                            "title": "var create: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/createsheet",
                            "title": "var createSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/delete",
                            "title": "var delete: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/deletesheet",
                            "title": "var deleteSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/open",
                            "title": "var open: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/opensheet",
                            "title": "var openSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/update",
                            "title": "var update: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent/updatesheet",
                            "title": "var updateSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent",
                        "title": "AssistantSchemas.SpreadsheetIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/systemintent/search",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/systemintent",
                        "title": "AssistantSchemas.SystemIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardentity/board",
                            "title": "var board: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardentity/item",
                            "title": "var item: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/whiteboardentity",
                        "title": "AssistantSchemas.WhiteboardEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardenum/color",
                            "title": "var color: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardenum/itemtype",
                            "title": "var itemType: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/whiteboardenum",
                        "title": "AssistantSchemas.WhiteboardEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/createboard",
                            "title": "var createBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/createitem",
                            "title": "var createItem: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteboard",
                            "title": "var deleteBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteitem",
                            "title": "var deleteItem: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/openboard",
                            "title": "var openBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateboard",
                            "title": "var updateBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateitem",
                            "title": "var updateItem: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent",
                        "title": "AssistantSchemas.WhiteboardIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorentity/document",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorentity/page",
                            "title": "var page: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorentity/template",
                            "title": "var template: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/wordprocessorentity",
                        "title": "AssistantSchemas.WordProcessorEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addaudiotopage",
                            "title": "var addAudioToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addimagetopage",
                            "title": "var addImageToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addtextboxtopage",
                            "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addvideotopage",
                            "title": "var addVideoToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addwebvideotopage",
                            "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/create",
                            "title": "var create: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/createpage",
                            "title": "var createPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/open",
                            "title": "var open: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent/openpage",
                            "title": "var openPage: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent",
                        "title": "AssistantSchemas.WordProcessorIntent",
                        "type": "protocol"
                      },
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/audiobook",
                                "title": "var audiobook: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/book",
                                "title": "var book: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/settings",
                                "title": "var settings: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/booksentity-implementations",
                            "title": "BooksEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/bookmark",
                                "title": "var bookmark: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/tab",
                                "title": "var tab: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/window",
                                "title": "var window: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/browserentity-implementations",
                            "title": "BrowserEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/books",
                                "title": "static var books: some AssistantSchemas.BooksEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/browser",
                                "title": "static var browser: some AssistantSchemas.BrowserEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/files",
                                "title": "static var files: some AssistantSchemas.FilesEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/journal",
                                "title": "static var journal: some AssistantSchemas.JournalEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/mail",
                                "title": "static var mail: some AssistantSchemas.MailEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/photos",
                                "title": "static var photos: some AssistantSchemas.PhotosEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/presentation",
                                "title": "static var presentation: some AssistantSchemas.PresentationEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/reader",
                                "title": "static var reader: some AssistantSchemas.ReaderEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/spreadsheet",
                                "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/whiteboard",
                                "title": "static var whiteboard: some AssistantSchemas.WhiteboardEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/wordprocessor",
                                "title": "static var wordProcessor: some AssistantSchemas.WordProcessorEntity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/entity-implementations",
                            "title": "Entity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/file",
                                "title": "var file: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/filesentity-implementations",
                            "title": "FilesEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/entry",
                                "title": "var entry: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/journalentity-implementations",
                            "title": "JournalEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/account",
                                "title": "var account: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/draft",
                                "title": "var draft: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/mailbox",
                                "title": "var mailbox: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/message",
                                "title": "var message: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/mailentity-implementations",
                            "title": "MailEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/album",
                                "title": "var album: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/asset",
                                "title": "var asset: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/recognizedperson",
                                "title": "var recognizedPerson: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/photosentity-implementations",
                            "title": "PhotosEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/document-9crv8",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/slide",
                                "title": "var slide: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/template-7r2rr",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/presentationentity-implementations",
                            "title": "PresentationEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/document-3fnjv",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/page-1thi5",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/readerentity-implementations",
                            "title": "ReaderEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/document-679n2",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/sheet",
                                "title": "var sheet: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/template-2h7b8",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/spreadsheetentity-implementations",
                            "title": "SpreadsheetEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/board",
                                "title": "var board: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/item",
                                "title": "var item: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/whiteboardentity-implementations",
                            "title": "WhiteboardEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/document-5ipqj",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/page-4hec8",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entityschema/template-2jw9k",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema/wordprocessorentity-implementations",
                            "title": "WordProcessorEntity Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/entityschema",
                        "title": "AssistantSchemas.EntitySchema",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/contenttype",
                                "title": "var contentType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/font",
                                "title": "var font: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/fontsize",
                                "title": "var fontSize: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/navigationdirection",
                                "title": "var navigationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/pagenavigationsetting",
                                "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/relativecharacterspacingchange",
                                "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/relativefontchange",
                                "title": "var relativeFontChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/relativelinespacingchange",
                                "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/relativewordspacingchange",
                                "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/theme",
                                "title": "var theme: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/booksenum-implementations",
                            "title": "BooksEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/clearhistorytimeframe",
                                "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/browserenum-implementations",
                            "title": "BrowserEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/capturedevice",
                                "title": "var captureDevice: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/captureduration",
                                "title": "var captureDuration: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/capturemode",
                                "title": "var captureMode: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/cameraenum-implementations",
                            "title": "CameraEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/books",
                                "title": "static var books: some AssistantSchemas.BooksEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/browser",
                                "title": "static var browser: some AssistantSchemas.BrowserEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/camera",
                                "title": "static var camera: some AssistantSchemas.CameraEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/photos",
                                "title": "static var photos: some AssistantSchemas.PhotosEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/reader",
                                "title": "static var reader: some AssistantSchemas.ReaderEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/whiteboard",
                                "title": "static var whiteboard: some AssistantSchemas.WhiteboardEnum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/enum-implementations",
                            "title": "Enum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/albumtype",
                                "title": "var albumType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/assettype",
                                "title": "var assetType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/filtertype",
                                "title": "var filterType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/rotationdirection",
                                "title": "var rotationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/photosenum-implementations",
                            "title": "PhotosEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/documentkind",
                                "title": "var documentKind: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/readerenum-implementations",
                            "title": "ReaderEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/color",
                                "title": "var color: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enumschema/itemtype",
                                "title": "var itemType: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema/whiteboardenum-implementations",
                            "title": "WhiteboardEnum Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/enumschema",
                        "title": "AssistantSchemas.EnumSchema",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/navigatepage",
                                "title": "var navigatePage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openbook",
                                "title": "var openBook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/playaudiobook",
                                "title": "var playAudiobook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/search-867mu",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatecharacterspacing",
                                "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatefontsize",
                                "title": "var updateFontSize: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatelinespacing",
                                "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatesettings",
                                "title": "var updateSettings: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatewordspacing",
                                "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/booksintent-implementations",
                            "title": "BooksIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/bookmarktab",
                                "title": "var bookmarkTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/bookmarkurl",
                                "title": "var bookmarkURL: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/clearhistory",
                                "title": "var clearHistory: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/closetabs",
                                "title": "var closeTabs: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/closewindows",
                                "title": "var closeWindows: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createtab",
                                "title": "var createTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createwindow",
                                "title": "var createWindow: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletebookmarks",
                                "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/findonpage",
                                "title": "var findOnPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openbookmark",
                                "title": "var openBookmark: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openurlintab",
                                "title": "var openURLInTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/search-4lih4",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/switchtab",
                                "title": "var switchTab: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/browserintent-implementations",
                            "title": "BrowserIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openincapturemode",
                                "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setdevice",
                                "title": "var setDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/startcapture",
                                "title": "var startCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/stopcapture",
                                "title": "var stopCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/switchdevice",
                                "title": "var switchDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/cameraintent-implementations",
                            "title": "CameraIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createfolder",
                                "title": "var createFolder: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletefiles",
                                "title": "var deleteFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/movefiles",
                                "title": "var moveFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openfile",
                                "title": "var openFile: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/renamefile",
                                "title": "var renameFile: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/filesintent-implementations",
                            "title": "FilesIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/books",
                                "title": "static var books: some AssistantSchemas.BooksIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/browser",
                                "title": "static var browser: some AssistantSchemas.BrowserIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/camera",
                                "title": "static var camera: some AssistantSchemas.CameraIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/files",
                                "title": "static var files: some AssistantSchemas.FilesIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/journal",
                                "title": "static var journal: some AssistantSchemas.JournalIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/mail",
                                "title": "static var mail: some AssistantSchemas.MailIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/photos",
                                "title": "static var photos: some AssistantSchemas.PhotosIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/presentation",
                                "title": "static var presentation: some AssistantSchemas.PresentationIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/reader",
                                "title": "static var reader: some AssistantSchemas.ReaderIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/spreadsheet",
                                "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/system",
                                "title": "static var system: some AssistantSchemas.SystemIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/whiteboard",
                                "title": "static var whiteboard: some AssistantSchemas.WhiteboardIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/wordprocessor",
                                "title": "static var wordProcessor: some AssistantSchemas.WordProcessorIntent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/intent-implementations",
                            "title": "Intent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createaudioentry",
                                "title": "var createAudioEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createentry",
                                "title": "var createEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deleteentry",
                                "title": "var deleteEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/search-8m2k3",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updateentry",
                                "title": "var updateEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/journalintent-implementations",
                            "title": "JournalIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/archivemail",
                                "title": "var archiveMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createdraft",
                                "title": "var createDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletedraft",
                                "title": "var deleteDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletemail",
                                "title": "var deleteMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/forwardmail",
                                "title": "var forwardMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/replymail",
                                "title": "var replyMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/savedraft",
                                "title": "var saveDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/senddraft",
                                "title": "var sendDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatedraft",
                                "title": "var updateDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatemail",
                                "title": "var updateMail: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/mailintent-implementations",
                            "title": "MailIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addassetstoalbum",
                                "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/cleanupphoto",
                                "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/copyedits",
                                "title": "var copyEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createalbum",
                                "title": "var createAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createassets",
                                "title": "var createAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/crop",
                                "title": "var crop: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletealbum",
                                "title": "var deleteAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deleteassets",
                                "title": "var deleteAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/duplicateassets",
                                "title": "var duplicateAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openalbum",
                                "title": "var openAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openasset",
                                "title": "var openAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/pasteedits",
                                "title": "var pasteEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/posttosharedalbum",
                                "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/removeassetsfromalbum",
                                "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/search-7tw5s",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setdepth",
                                "title": "var setDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setexposure",
                                "title": "var setExposure: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setfilter",
                                "title": "var setFilter: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setrotation",
                                "title": "var setRotation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setsaturation",
                                "title": "var setSaturation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setwarmth",
                                "title": "var setWarmth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/straighten",
                                "title": "var straighten: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/toggledepth",
                                "title": "var toggleDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/togglesuggestededits",
                                "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatealbum",
                                "title": "var updateAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updateasset",
                                "title": "var updateAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updaterecognizedperson",
                                "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/photosintent-implementations",
                            "title": "PhotosIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addaudiotoslide",
                                "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addcommenttoslide",
                                "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addimagetoslide",
                                "title": "var addImageToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addtextboxtoslide",
                                "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addvideotoslide",
                                "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addwebvideotoslide",
                                "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/create-88f0w",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createslide",
                                "title": "var createSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deleteslide",
                                "title": "var deleteSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/open-4h02a",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openslide",
                                "title": "var openSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/setslidetitle",
                                "title": "var setSlideTitle: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/startplayback",
                                "title": "var startPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/stopplayback",
                                "title": "var stopPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/update-6gano",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/presentationintent-implementations",
                            "title": "PresentationIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletepages",
                                "title": "var deletePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/enhancedocuments",
                                "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/insertpages",
                                "title": "var insertPages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/opendocument",
                                "title": "var openDocument: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openpage-33tlg",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/resizedocuments",
                                "title": "var resizeDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/rotatedocuments",
                                "title": "var rotateDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/rotatepages",
                                "title": "var rotatePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/searchdocuments",
                                "title": "var searchDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/readerintent-implementations",
                            "title": "ReaderIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addaudiotosheet",
                                "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addcommenttosheet",
                                "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addimagetosheet",
                                "title": "var addImageToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addtextboxtosheet",
                                "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addvideotosheet",
                                "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addwebvideotosheet",
                                "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/create-4t8p0",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createsheet",
                                "title": "var createSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/delete",
                                "title": "var delete: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deletesheet",
                                "title": "var deleteSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/open-8nvmk",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/opensheet",
                                "title": "var openSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/update-408k2",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updatesheet",
                                "title": "var updateSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/spreadsheetintent-implementations",
                            "title": "SpreadsheetIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/search-9yqp3",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/systemintent-implementations",
                            "title": "SystemIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createboard",
                                "title": "var createBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createitem",
                                "title": "var createItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deleteboard",
                                "title": "var deleteBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/deleteitem",
                                "title": "var deleteItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openboard",
                                "title": "var openBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updateboard",
                                "title": "var updateBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/updateitem",
                                "title": "var updateItem: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/whiteboardintent-implementations",
                            "title": "WhiteboardIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addaudiotopage",
                                "title": "var addAudioToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addimagetopage",
                                "title": "var addImageToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addtextboxtopage",
                                "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addvideotopage",
                                "title": "var addVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/addwebvideotopage",
                                "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/create-33f31",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/createpage",
                                "title": "var createPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/open-1a3in",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intentschema/openpage-2guet",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema/wordprocessorintent-implementations",
                            "title": "WordProcessorIntent Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas/intentschema",
                        "title": "AssistantSchemas.IntentSchema",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas",
                    "title": "AssistantSchemas",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/audiobook",
                                "title": "var audiobook: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/book",
                                "title": "var book: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/settings",
                                "title": "var settings: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/booksentity-implementations",
                            "title": "BooksEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/bookmark",
                                "title": "var bookmark: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/tab",
                                "title": "var tab: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/window",
                                "title": "var window: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/browserentity-implementations",
                            "title": "BrowserEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/file",
                                "title": "var file: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/filesentity-implementations",
                            "title": "FilesEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/entry",
                                "title": "var entry: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/journalentity-implementations",
                            "title": "JournalEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/account",
                                "title": "var account: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/draft",
                                "title": "var draft: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/mailbox",
                                "title": "var mailbox: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/message",
                                "title": "var message: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/mailentity-implementations",
                            "title": "MailEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/album",
                                "title": "var album: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/asset",
                                "title": "var asset: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/recognizedperson",
                                "title": "var recognizedPerson: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/photosentity-implementations",
                            "title": "PhotosEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-12swh",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/slide",
                                "title": "var slide: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/template-camo",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/presentationentity-implementations",
                            "title": "PresentationEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-6zxlc",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/page-66y9",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/readerentity-implementations",
                            "title": "ReaderEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-2bo59",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/sheet",
                                "title": "var sheet: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/template-2d6md",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/spreadsheetentity-implementations",
                            "title": "SpreadsheetEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/board",
                                "title": "var board: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/item",
                                "title": "var item: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/whiteboardentity-implementations",
                            "title": "WhiteboardEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-2nrvp",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/page-a0ua",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/template-4oqoi",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/wordprocessorentity-implementations",
                            "title": "WordProcessorEntity Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema",
                        "title": "AssistantSchema.EntitySchema",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/contenttype",
                                "title": "var contentType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/font",
                                "title": "var font: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/fontsize",
                                "title": "var fontSize: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/navigationdirection",
                                "title": "var navigationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/pagenavigationsetting",
                                "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativecharacterspacingchange",
                                "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativefontchange",
                                "title": "var relativeFontChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativelinespacingchange",
                                "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativewordspacingchange",
                                "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/theme",
                                "title": "var theme: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/booksenum-implementations",
                            "title": "BooksEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/clearhistorytimeframe",
                                "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/browserenum-implementations",
                            "title": "BrowserEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/capturedevice",
                                "title": "var captureDevice: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/captureduration",
                                "title": "var captureDuration: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/capturemode",
                                "title": "var captureMode: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/cameraenum-implementations",
                            "title": "CameraEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/albumtype",
                                "title": "var albumType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/assettype",
                                "title": "var assetType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/filtertype",
                                "title": "var filterType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/rotationdirection",
                                "title": "var rotationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/photosenum-implementations",
                            "title": "PhotosEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/documentkind",
                                "title": "var documentKind: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/readerenum-implementations",
                            "title": "ReaderEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/color",
                                "title": "var color: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/itemtype",
                                "title": "var itemType: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/whiteboardenum-implementations",
                            "title": "WhiteboardEnum Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema",
                        "title": "AssistantSchema.EnumSchema",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/navigatepage",
                                "title": "var navigatePage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openbook",
                                "title": "var openBook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/playaudiobook",
                                "title": "var playAudiobook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-7b0mn",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatecharacterspacing",
                                "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatefontsize",
                                "title": "var updateFontSize: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatelinespacing",
                                "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatesettings",
                                "title": "var updateSettings: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatewordspacing",
                                "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/booksintent-implementations",
                            "title": "BooksIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/bookmarktab",
                                "title": "var bookmarkTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/bookmarkurl",
                                "title": "var bookmarkURL: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/clearhistory",
                                "title": "var clearHistory: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/closetabs",
                                "title": "var closeTabs: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/closewindows",
                                "title": "var closeWindows: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createtab",
                                "title": "var createTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createwindow",
                                "title": "var createWindow: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletebookmarks",
                                "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/findonpage",
                                "title": "var findOnPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openbookmark",
                                "title": "var openBookmark: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openurlintab",
                                "title": "var openURLInTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-31l17",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/switchtab",
                                "title": "var switchTab: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/browserintent-implementations",
                            "title": "BrowserIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openincapturemode",
                                "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setdevice",
                                "title": "var setDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/startcapture",
                                "title": "var startCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/stopcapture",
                                "title": "var stopCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/switchdevice",
                                "title": "var switchDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/cameraintent-implementations",
                            "title": "CameraIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createfolder",
                                "title": "var createFolder: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletefiles",
                                "title": "var deleteFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/movefiles",
                                "title": "var moveFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openfile",
                                "title": "var openFile: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/renamefile",
                                "title": "var renameFile: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/filesintent-implementations",
                            "title": "FilesIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createaudioentry",
                                "title": "var createAudioEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createentry",
                                "title": "var createEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteentry",
                                "title": "var deleteEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-1pp52",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateentry",
                                "title": "var updateEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/journalintent-implementations",
                            "title": "JournalIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/archivemail",
                                "title": "var archiveMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createdraft",
                                "title": "var createDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletedraft",
                                "title": "var deleteDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletemail",
                                "title": "var deleteMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/forwardmail",
                                "title": "var forwardMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/replymail",
                                "title": "var replyMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/savedraft",
                                "title": "var saveDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/senddraft",
                                "title": "var sendDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatedraft",
                                "title": "var updateDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatemail",
                                "title": "var updateMail: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/mailintent-implementations",
                            "title": "MailIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addassetstoalbum",
                                "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/cleanupphoto",
                                "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/copyedits",
                                "title": "var copyEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createalbum",
                                "title": "var createAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createassets",
                                "title": "var createAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/crop",
                                "title": "var crop: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletealbum",
                                "title": "var deleteAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteassets",
                                "title": "var deleteAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/duplicateassets",
                                "title": "var duplicateAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openalbum",
                                "title": "var openAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openasset",
                                "title": "var openAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/pasteedits",
                                "title": "var pasteEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/posttosharedalbum",
                                "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/removeassetsfromalbum",
                                "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-57rep",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setdepth",
                                "title": "var setDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setexposure",
                                "title": "var setExposure: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setfilter",
                                "title": "var setFilter: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setrotation",
                                "title": "var setRotation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setsaturation",
                                "title": "var setSaturation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setwarmth",
                                "title": "var setWarmth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/straighten",
                                "title": "var straighten: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/toggledepth",
                                "title": "var toggleDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/togglesuggestededits",
                                "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatealbum",
                                "title": "var updateAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateasset",
                                "title": "var updateAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updaterecognizedperson",
                                "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/photosintent-implementations",
                            "title": "PhotosIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addaudiotoslide",
                                "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addcommenttoslide",
                                "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addimagetoslide",
                                "title": "var addImageToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtoslide",
                                "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addvideotoslide",
                                "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotoslide",
                                "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/create-795hv",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createslide",
                                "title": "var createSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteslide",
                                "title": "var deleteSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/open-19q5k",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openslide",
                                "title": "var openSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setslidetitle",
                                "title": "var setSlideTitle: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/startplayback",
                                "title": "var startPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/stopplayback",
                                "title": "var stopPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/update-1gbtt",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/presentationintent-implementations",
                            "title": "PresentationIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletepages",
                                "title": "var deletePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/enhancedocuments",
                                "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/insertpages",
                                "title": "var insertPages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/opendocument",
                                "title": "var openDocument: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openpage-1fzng",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/resizedocuments",
                                "title": "var resizeDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/rotatedocuments",
                                "title": "var rotateDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/rotatepages",
                                "title": "var rotatePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/searchdocuments",
                                "title": "var searchDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/readerintent-implementations",
                            "title": "ReaderIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addaudiotosheet",
                                "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addcommenttosheet",
                                "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addimagetosheet",
                                "title": "var addImageToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtosheet",
                                "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addvideotosheet",
                                "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotosheet",
                                "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/create-7wgs6",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createsheet",
                                "title": "var createSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/delete",
                                "title": "var delete: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletesheet",
                                "title": "var deleteSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/open-nkcd",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/opensheet",
                                "title": "var openSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/update-qcb8",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatesheet",
                                "title": "var updateSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/spreadsheetintent-implementations",
                            "title": "SpreadsheetIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-1hht2",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/systemintent-implementations",
                            "title": "SystemIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createboard",
                                "title": "var createBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createitem",
                                "title": "var createItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteboard",
                                "title": "var deleteBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteitem",
                                "title": "var deleteItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openboard",
                                "title": "var openBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateboard",
                                "title": "var updateBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateitem",
                                "title": "var updateItem: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/whiteboardintent-implementations",
                            "title": "WhiteboardIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addaudiotopage",
                                "title": "var addAudioToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addimagetopage",
                                "title": "var addImageToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtopage",
                                "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addvideotopage",
                                "title": "var addVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotopage",
                                "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/create-2jkab",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createpage",
                                "title": "var createPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/open-a0vk",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openpage-2zdjq",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/wordprocessorintent-implementations",
                            "title": "WordProcessorIntent Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema",
                        "title": "AssistantSchema.IntentSchema",
                        "type": "struct"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschema/init(_:)-8yk4w",
                        "title": "init(some AssistantSchemas.Entity)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/assistantschema/init(_:)-9exua",
                        "title": "init(some AssistantSchemas.Intent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/assistantschema/init(_:)-ym1l",
                        "title": "init(some AssistantSchemas.Enum)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschema",
                    "title": "AssistantSchema",
                    "type": "struct"
                  },
                  {
                    "title": "Schema conformance",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/navigatepage",
                            "title": "var navigatePage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openbook",
                            "title": "var openBook: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/playaudiobook",
                            "title": "var playAudiobook: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/search-7b0mn",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatecharacterspacing",
                            "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatefontsize",
                            "title": "var updateFontSize: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatelinespacing",
                            "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatesettings",
                            "title": "var updateSettings: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatewordspacing",
                            "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/booksintent-implementations",
                        "title": "BooksIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/bookmarktab",
                            "title": "var bookmarkTab: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/bookmarkurl",
                            "title": "var bookmarkURL: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/clearhistory",
                            "title": "var clearHistory: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/closetabs",
                            "title": "var closeTabs: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/closewindows",
                            "title": "var closeWindows: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createtab",
                            "title": "var createTab: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createwindow",
                            "title": "var createWindow: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletebookmarks",
                            "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/findonpage",
                            "title": "var findOnPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openbookmark",
                            "title": "var openBookmark: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openurlintab",
                            "title": "var openURLInTab: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/search-31l17",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/switchtab",
                            "title": "var switchTab: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/browserintent-implementations",
                        "title": "BrowserIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openincapturemode",
                            "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setdevice",
                            "title": "var setDevice: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/startcapture",
                            "title": "var startCapture: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/stopcapture",
                            "title": "var stopCapture: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/switchdevice",
                            "title": "var switchDevice: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/cameraintent-implementations",
                        "title": "CameraIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createfolder",
                            "title": "var createFolder: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletefiles",
                            "title": "var deleteFiles: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/movefiles",
                            "title": "var moveFiles: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openfile",
                            "title": "var openFile: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/renamefile",
                            "title": "var renameFile: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/filesintent-implementations",
                        "title": "FilesIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createaudioentry",
                            "title": "var createAudioEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createentry",
                            "title": "var createEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deleteentry",
                            "title": "var deleteEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/search-1pp52",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updateentry",
                            "title": "var updateEntry: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/journalintent-implementations",
                        "title": "JournalIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/archivemail",
                            "title": "var archiveMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createdraft",
                            "title": "var createDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletedraft",
                            "title": "var deleteDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletemail",
                            "title": "var deleteMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/forwardmail",
                            "title": "var forwardMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/replymail",
                            "title": "var replyMail: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/savedraft",
                            "title": "var saveDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/senddraft",
                            "title": "var sendDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatedraft",
                            "title": "var updateDraft: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatemail",
                            "title": "var updateMail: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/mailintent-implementations",
                        "title": "MailIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addassetstoalbum",
                            "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/cleanupphoto",
                            "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/copyedits",
                            "title": "var copyEdits: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createalbum",
                            "title": "var createAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createassets",
                            "title": "var createAssets: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/crop",
                            "title": "var crop: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletealbum",
                            "title": "var deleteAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deleteassets",
                            "title": "var deleteAssets: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/duplicateassets",
                            "title": "var duplicateAssets: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openalbum",
                            "title": "var openAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openasset",
                            "title": "var openAsset: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/pasteedits",
                            "title": "var pasteEdits: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/posttosharedalbum",
                            "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/removeassetsfromalbum",
                            "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/search-57rep",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setdepth",
                            "title": "var setDepth: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setexposure",
                            "title": "var setExposure: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setfilter",
                            "title": "var setFilter: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setrotation",
                            "title": "var setRotation: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setsaturation",
                            "title": "var setSaturation: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setwarmth",
                            "title": "var setWarmth: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/straighten",
                            "title": "var straighten: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/toggledepth",
                            "title": "var toggleDepth: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/togglesuggestededits",
                            "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatealbum",
                            "title": "var updateAlbum: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updateasset",
                            "title": "var updateAsset: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updaterecognizedperson",
                            "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/photosintent-implementations",
                        "title": "PhotosIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addaudiotoslide",
                            "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addcommenttoslide",
                            "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addimagetoslide",
                            "title": "var addImageToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtoslide",
                            "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addvideotoslide",
                            "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotoslide",
                            "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/create-795hv",
                            "title": "var create: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createslide",
                            "title": "var createSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deleteslide",
                            "title": "var deleteSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/open-19q5k",
                            "title": "var open: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openslide",
                            "title": "var openSlide: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/setslidetitle",
                            "title": "var setSlideTitle: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/startplayback",
                            "title": "var startPlayback: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/stopplayback",
                            "title": "var stopPlayback: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/update-1gbtt",
                            "title": "var update: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/presentationintent-implementations",
                        "title": "PresentationIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletepages",
                            "title": "var deletePages: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/enhancedocuments",
                            "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/insertpages",
                            "title": "var insertPages: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/opendocument",
                            "title": "var openDocument: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openpage-1fzng",
                            "title": "var openPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/resizedocuments",
                            "title": "var resizeDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/rotatedocuments",
                            "title": "var rotateDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/rotatepages",
                            "title": "var rotatePages: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/searchdocuments",
                            "title": "var searchDocuments: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/readerintent-implementations",
                        "title": "ReaderIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addaudiotosheet",
                            "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addcommenttosheet",
                            "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addimagetosheet",
                            "title": "var addImageToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtosheet",
                            "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addvideotosheet",
                            "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotosheet",
                            "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/create-7wgs6",
                            "title": "var create: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createsheet",
                            "title": "var createSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/delete",
                            "title": "var delete: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deletesheet",
                            "title": "var deleteSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/open-nkcd",
                            "title": "var open: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/opensheet",
                            "title": "var openSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/update-qcb8",
                            "title": "var update: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updatesheet",
                            "title": "var updateSheet: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/spreadsheetintent-implementations",
                        "title": "SpreadsheetIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/search-1hht2",
                            "title": "var search: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/systemintent-implementations",
                        "title": "SystemIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createboard",
                            "title": "var createBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createitem",
                            "title": "var createItem: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deleteboard",
                            "title": "var deleteBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/deleteitem",
                            "title": "var deleteItem: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openboard",
                            "title": "var openBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updateboard",
                            "title": "var updateBoard: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/updateitem",
                            "title": "var updateItem: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/whiteboardintent-implementations",
                        "title": "WhiteboardIntent Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addaudiotopage",
                            "title": "var addAudioToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addimagetopage",
                            "title": "var addImageToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtopage",
                            "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addvideotopage",
                            "title": "var addVideoToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotopage",
                            "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/create-2jkab",
                            "title": "var create: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/createpage",
                            "title": "var createPage: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/open-a0vk",
                            "title": "var open: some AssistantSchemas.Intent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/intentschema/openpage-2zdjq",
                            "title": "var openPage: some AssistantSchemas.Intent",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema/wordprocessorintent-implementations",
                        "title": "WordProcessorIntent Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschema/intentschema",
                    "title": "AssistantSchema.IntentSchema",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/audiobook",
                            "title": "var audiobook: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/book",
                            "title": "var book: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/settings",
                            "title": "var settings: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/booksentity-implementations",
                        "title": "BooksEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/bookmark",
                            "title": "var bookmark: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/tab",
                            "title": "var tab: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/window",
                            "title": "var window: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/browserentity-implementations",
                        "title": "BrowserEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/file",
                            "title": "var file: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/filesentity-implementations",
                        "title": "FilesEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/entry",
                            "title": "var entry: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/journalentity-implementations",
                        "title": "JournalEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/account",
                            "title": "var account: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/draft",
                            "title": "var draft: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/mailbox",
                            "title": "var mailbox: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/message",
                            "title": "var message: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/mailentity-implementations",
                        "title": "MailEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/album",
                            "title": "var album: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/asset",
                            "title": "var asset: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/recognizedperson",
                            "title": "var recognizedPerson: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/photosentity-implementations",
                        "title": "PhotosEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/document-12swh",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/slide",
                            "title": "var slide: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/template-camo",
                            "title": "var template: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/presentationentity-implementations",
                        "title": "PresentationEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/document-6zxlc",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/page-66y9",
                            "title": "var page: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/readerentity-implementations",
                        "title": "ReaderEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/document-2bo59",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/sheet",
                            "title": "var sheet: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/template-2d6md",
                            "title": "var template: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/spreadsheetentity-implementations",
                        "title": "SpreadsheetEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/board",
                            "title": "var board: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/item",
                            "title": "var item: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/whiteboardentity-implementations",
                        "title": "WhiteboardEntity Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/document-2nrvp",
                            "title": "var document: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/page-a0ua",
                            "title": "var page: some AssistantSchemas.Entity",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/entityschema/template-4oqoi",
                            "title": "var template: some AssistantSchemas.Entity",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema/wordprocessorentity-implementations",
                        "title": "WordProcessorEntity Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschema/entityschema",
                    "title": "AssistantSchema.EntitySchema",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/contenttype",
                            "title": "var contentType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/font",
                            "title": "var font: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/fontsize",
                            "title": "var fontSize: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/navigationdirection",
                            "title": "var navigationDirection: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/pagenavigationsetting",
                            "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/relativecharacterspacingchange",
                            "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/relativefontchange",
                            "title": "var relativeFontChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/relativelinespacingchange",
                            "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/relativewordspacingchange",
                            "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/theme",
                            "title": "var theme: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema/booksenum-implementations",
                        "title": "BooksEnum Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/clearhistorytimeframe",
                            "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema/browserenum-implementations",
                        "title": "BrowserEnum Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/capturedevice",
                            "title": "var captureDevice: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/captureduration",
                            "title": "var captureDuration: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/capturemode",
                            "title": "var captureMode: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema/cameraenum-implementations",
                        "title": "CameraEnum Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/albumtype",
                            "title": "var albumType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/assettype",
                            "title": "var assetType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/filtertype",
                            "title": "var filterType: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/rotationdirection",
                            "title": "var rotationDirection: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema/photosenum-implementations",
                        "title": "PhotosEnum Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/documentkind",
                            "title": "var documentKind: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema/readerenum-implementations",
                        "title": "ReaderEnum Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/color",
                            "title": "var color: some AssistantSchemas.Enum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/enumschema/itemtype",
                            "title": "var itemType: some AssistantSchemas.Enum",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema/whiteboardenum-implementations",
                        "title": "WhiteboardEnum Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschema/enumschema",
                    "title": "AssistantSchema.EnumSchema",
                    "type": "struct"
                  },
                  {
                    "title": "Base protocols",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantintent",
                    "title": "AssistantIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemaintent/isassistantonly",
                        "title": "static var isAssistantOnly: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemaintent",
                    "title": "AssistantSchemaIntent",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/appintents/assistantentity",
                    "title": "AssistantEntity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemaentity/isassistantonly",
                        "title": "static var isAssistantOnly: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemaentity",
                    "title": "AssistantSchemaEntity",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/appintents/assistantenum",
                    "title": "AssistantEnum",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemaenum/isassistantonly",
                        "title": "static var isAssistantOnly: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemaenum",
                    "title": "AssistantSchemaEnum",
                    "type": "protocol"
                  }
                ],
                "path": "/documentation/appintents/assistant-schema-base-protocols",
                "title": "Assistant schema base protocols",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/app-intent-domains",
            "title": "App intent domains",
            "type": "collection"
          },
          {
            "path": "/documentation/appintents/making-your-app-s-functionality-available-to-siri",
            "title": "Making your appâ€™s functionality available to Siri",
            "type": "sampleCode"
          },
          {
            "title": "Other system experiences",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Focus filters",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the current app configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintent/current",
                    "title": "static var current: Self",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintent/suggestedfocusfilters(for:)",
                    "title": "static func suggestedFocusFilters(for: FocusFilterSuggestionContext) async -> [Self]",
                    "type": "method"
                  },
                  {
                    "title": "Configuring app context for the Focus",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintent/appcontext",
                    "title": "var appContext: FocusFilterAppContext",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintent/invalidatefocusfilterappcontext()",
                    "title": "static func invalidateFocusFilterAppContext()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/setfocusfilterintent",
                "title": "SetFocusFilterIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/focus/defining_your_app_s_focus_filter",
                "title": "Defining your appâ€™s Focus filter",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating the app context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/focusfilterappcontext/init(notificationfilterpredicate:)",
                    "title": "init(notificationFilterPredicate: NSPredicate?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the filter predicate",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/focusfilterappcontext/notificationfilterpredicate",
                    "title": "let notificationFilterPredicate: NSPredicate?",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/focusfilterappcontext/init(notificationfilterpredicate:targetcontentidentifierprefix:)",
                    "title": "init(notificationFilterPredicate: NSPredicate?, targetContentIdentifierPrefix: String?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/focusfilterappcontext/targetcontentidentifierprefix",
                    "title": "let targetContentIdentifierPrefix: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/focusfilterappcontext",
                "title": "FocusFilterAppContext",
                "type": "struct"
              },
              {
                "path": "/documentation/appintents/focusfiltersuggestioncontext",
                "title": "FocusFilterSuggestionContext",
                "type": "struct"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintenterror/notfound",
                    "title": "case notFound",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintenterror/==(_:_:)",
                    "title": "static func == (SetFocusFilterIntentError, SetFocusFilterIntentError) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintenterror/missingparametervalue",
                    "title": "case missingParameterValue",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintenterror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setfocusfilterintenterror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/setfocusfilterintenterror/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/setfocusfilterintenterror/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/setfocusfilterintenterror/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/setfocusfilterintenterror/error-implementations",
                    "title": "Error Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/setfocusfilterintenterror/errordescription",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/setfocusfilterintenterror/failurereason",
                        "title": "var failureReason: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/setfocusfilterintenterror/helpanchor",
                        "title": "var helpAnchor: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/setfocusfilterintenterror/recoverysuggestion",
                        "title": "var recoverySuggestion: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/setfocusfilterintenterror/localizederror-implementations",
                    "title": "LocalizedError Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/setfocusfilterintenterror",
                "title": "SetFocusFilterIntentError",
                "type": "enum"
              }
            ],
            "path": "/documentation/appintents/focus",
            "title": "Focus",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Responding to the Action button",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/actionbuttonarticle",
                "title": "Responding to the Action button on Apple Watch Ultra",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating an intent",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/startworkoutintent/init(style:)",
                    "title": "init(style: Self.WorkoutStyle)",
                    "type": "init"
                  },
                  {
                    "title": "Defining supported workouts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/startworkoutintent/workoutstyle-swift.associatedtype",
                    "title": "WorkoutStyle",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/appintents/startworkoutintent/workoutstyle-swift.property",
                    "title": "var workoutStyle: Self.WorkoutStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/startworkoutintent/suggestedworkouts",
                    "title": "static var suggestedWorkouts: [Self]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/startworkoutintent/invalidatesuggestedworkouts()",
                    "title": "static func invalidateSuggestedWorkouts()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/startworkoutintent",
                "title": "StartWorkoutIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/pauseworkoutintent",
                "title": "PauseWorkoutIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/resumeworkoutintent",
                "title": "ResumeWorkoutIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/startdiveintent",
                "title": "StartDiveIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/add",
                    "title": "static var add: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/adddata",
                    "title": "static var addData: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/book",
                    "title": "static var book: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/buy",
                    "title": "static var buy: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/call",
                    "title": "static var call: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/checkin",
                    "title": "static var checkIn: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/continue",
                    "title": "static var `continue`: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/create",
                    "title": "static var create: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/do",
                    "title": "static var `do`: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/download",
                    "title": "static var download: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/filter",
                    "title": "static var filter: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/find",
                    "title": "static var find: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/get",
                    "title": "static var get: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/go",
                    "title": "static var go: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/log",
                    "title": "static var log: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/open",
                    "title": "static var open: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/order",
                    "title": "static var order: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/pay",
                    "title": "static var pay: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/play",
                    "title": "static var play: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/playsound",
                    "title": "static var playSound: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/post",
                    "title": "static var post: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/request",
                    "title": "static var request: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/run",
                    "title": "static var run: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/search",
                    "title": "static var search: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/send",
                    "title": "static var send: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/set",
                    "title": "static var set: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/share",
                    "title": "static var share: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/start",
                    "title": "static var start: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/startnavigation",
                    "title": "static var startNavigation: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/toggle",
                    "title": "static var toggle: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/turnoff",
                    "title": "static var turnOff: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/turnon",
                    "title": "static var turnOn: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/view",
                    "title": "static var view: ConfirmationActionName",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationactionname/custom(acceptlabel:acceptalternatives:denylabel:denyalternatives:destructive:)",
                    "title": "static func custom(acceptLabel: LocalizedStringResource, acceptAlternatives: [LocalizedStringResource], denyLabel: LocalizedStringResource, denyAlternatives: [LocalizedStringResource], destructive: Bool) -> ConfirmationActionName",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/confirmationactionname",
                "title": "ConfirmationActionName",
                "type": "struct"
              }
            ],
            "path": "/documentation/appintents/actionbutton",
            "title": "Action button on iPhone and Apple Watch",
            "type": "collection"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/developing-a-widgetkit-strategy",
            "title": "Developing a WidgetKit strategy",
            "type": "article"
          },
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Actions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an app intent",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Specifying the authentication policy",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/authenticationpolicy",
                    "title": "static var authenticationPolicy: IntentAuthenticationPolicy",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Authentication policies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentauthenticationpolicy/alwaysallowed",
                        "title": "case alwaysAllowed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentauthenticationpolicy/requiresauthentication",
                        "title": "case requiresAuthentication",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentauthenticationpolicy/requireslocaldeviceauthentication",
                        "title": "case requiresLocalDeviceAuthentication",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentauthenticationpolicy/==(_:_:)",
                        "title": "static func == (IntentAuthenticationPolicy, IntentAuthenticationPolicy) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentauthenticationpolicy/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentauthenticationpolicy/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentauthenticationpolicy/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentauthenticationpolicy/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentauthenticationpolicy",
                    "title": "IntentAuthenticationPolicy",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring the metadata",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/title",
                    "title": "static var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintent/description",
                    "title": "static var description: IntentDescription?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintent/openappwhenrun",
                    "title": "static var openAppWhenRun: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintent/isdiscoverable",
                    "title": "static var isDiscoverable: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Performing the action",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/perform()",
                    "title": "func perform() async throws -> Self.PerformResult",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/systemcontext",
                    "title": "var systemContext: IntentSystemContext",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintent/performresult",
                    "title": "PerformResult",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Requesting confirmation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/requestconfirmation()",
                    "title": "func requestConfirmation() async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/requestconfirmation(conditions:actionname:dialog:)",
                    "title": "func requestConfirmation(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog) async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/requestconfirmation(conditions:actionname:dialog:showdialogasprompt:content:)",
                    "title": "func requestConfirmation<Content>(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog?, showDialogAsPrompt: Bool, content: () -> Content) async throws",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appintent/requestconfirmation(result:confirmationactionname:showprompt:)",
                    "title": "func requestConfirmation<Result>(result: Result, confirmationActionName: ConfirmationActionName, showPrompt: Bool) async throws",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appintent/requestconfirmation(output:confirmationactionname:showprompt:)",
                    "title": "func requestConfirmation<Result>(output: Result, confirmationActionName: ConfirmationActionName, showPrompt: Bool) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Donating the intent to the system",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/donate()-1e60c",
                    "title": "func donate() async throws -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/donate()-jp6k",
                    "title": "func donate() -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/donate(result:)-36cia",
                    "title": "func donate(result: some IntentResult) async throws -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/donate(result:)-9b25i",
                    "title": "func donate(result: some IntentResult) -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/callasfunction(donate:)-3qvbt",
                    "title": "func callAsFunction(donate: Bool) async throws -> Self.PerformResult.Value",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appintent/callasfunction(donate:)-7v1om",
                    "title": "func callAsFunction(donate: Bool) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Summarizing the parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintent/summarycontent",
                    "title": "SummaryContent",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/appintents/appintent/parametersummary",
                    "title": "static var parameterSummary: Self.SummaryContent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintent/parametersummary-4vgic",
                    "title": "static var parameterSummary: some ParameterSummary",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarybuilder/buildblock(_:)",
                        "title": "static func buildBlock<Summary>(Summary) -> Summary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarybuilder/buildexpression(_:)",
                        "title": "static func buildExpression<Summary>(Summary) -> Summary",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/parametersummarybuilder",
                    "title": "ParameterSummaryBuilder",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/appintents/appintent/parameter",
                    "title": "AppIntent.Parameter",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appintent/case",
                    "title": "AppIntent.Case",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appintent/defaultcase",
                    "title": "AppIntent.DefaultCase",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appintent/summary",
                    "title": "AppIntent.Summary",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appintent/switch",
                    "title": "AppIntent.Switch",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appintent/when",
                    "title": "AppIntent.When",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/appintents/appintent",
                "title": "AppIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/audioplaybackintent",
                "title": "AudioPlaybackIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/audiorecordingintent",
                "title": "AudioRecordingIntent",
                "type": "protocol"
              },
              {
                "deprecated": true,
                "path": "/documentation/appintents/audiostartingintent",
                "title": "AudioStartingIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/cameracaptureintent/appcontext-swift.associatedtype",
                    "title": "AppContext",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/cameracaptureintent/appcontext-swift.type.property",
                    "title": "static var appContext: Self.AppContext?",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/cameracaptureintent/updateappcontext(_:)",
                    "title": "static func updateAppContext(Self.AppContext?) async throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/cameracaptureintent",
                "title": "CameraCaptureIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/deleteintent/entity",
                    "title": "Entity",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/deleteintent/entities",
                    "title": "var entities: [Self.Entity]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/deleteintent",
                "title": "DeleteIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/deprecatedappintent/replacementintent",
                    "title": "ReplacementIntent",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/deprecatedappintent/deprecation",
                    "title": "static var deprecation: IntentDeprecation<Self.ReplacementIntent>",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/deprecatedappintent",
                "title": "DeprecatedAppIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/foregroundcontinuableintent/needstocontinueinforegrounderror(_:continuation:)",
                    "title": "func needsToContinueInForegroundError(IntentDialog?, continuation: (() async throws -> Void)?) -> AppIntentError",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/foregroundcontinuableintent/requesttocontinueinforeground(_:continuation:)",
                    "title": "func requestToContinueInForeground<ResultValue>(IntentDialog?, continuation: () async throws -> ResultValue) async throws -> ResultValue",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/foregroundcontinuableintent",
                "title": "ForegroundContinuableIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/openintent/value",
                    "title": "Value",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/openintent/target",
                    "title": "var target: Self.Value",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/openintent",
                "title": "OpenIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/init(_:)",
                    "title": "init(URL)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/init(urlrepresentable:)-53fa0",
                    "title": "init(urlRepresentable: some URLRepresentableEnum) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/init(urlrepresentable:)-8r4bl",
                    "title": "init(urlRepresentable: some URLRepresentableEntity) async throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/$url",
                    "title": "var $url: IntentParameter<URL>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/url",
                    "title": "var url: URL",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/performresult",
                    "title": "OpenURLIntent.PerformResult",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/summarycontent",
                    "title": "OpenURLIntent.SummaryContent",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/title",
                    "title": "static var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/openurlintent/urlrepresentation",
                    "title": "static var urlRepresentation: OpenURLIntent.URLRepresentation",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/systemcontext",
                        "title": "var systemContext: IntentSystemContext",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/callasfunction(donate:)-6emik",
                        "title": "func callAsFunction(donate: Bool) async throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/callasfunction(donate:)-74ri4",
                        "title": "func callAsFunction(donate: Bool) async throws -> Self.PerformResult.Value",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/donate()-981xn",
                        "title": "func donate() -> IntentDonationIdentifier",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/donate()-d5p6",
                        "title": "func donate() async throws -> IntentDonationIdentifier",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/donate(result:)-89co",
                        "title": "func donate(result: some IntentResult) -> IntentDonationIdentifier",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/donate(result:)-pm6e",
                        "title": "func donate(result: some IntentResult) async throws -> IntentDonationIdentifier",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/requestconfirmation()",
                        "title": "func requestConfirmation() async throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/requestconfirmation(conditions:actionname:dialog:)",
                        "title": "func requestConfirmation(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog) async throws",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/openurlintent/requestconfirmation(output:confirmationactionname:showprompt:)",
                        "title": "func requestConfirmation<Result>(output: Result, confirmationActionName: ConfirmationActionName, showPrompt: Bool) async throws",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/openurlintent/requestconfirmation(result:confirmationactionname:showprompt:)",
                        "title": "func requestConfirmation<Result>(result: Result, confirmationActionName: ConfirmationActionName, showPrompt: Bool) async throws",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/case",
                        "title": "OpenURLIntent.Case",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/defaultcase",
                        "title": "OpenURLIntent.DefaultCase",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/parameter",
                        "title": "OpenURLIntent.Parameter",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/summary",
                        "title": "OpenURLIntent.Summary",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/switch",
                        "title": "OpenURLIntent.Switch",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/when",
                        "title": "OpenURLIntent.When",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/authenticationpolicy",
                        "title": "static var authenticationPolicy: IntentAuthenticationPolicy",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/description",
                        "title": "static var description: IntentDescription?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/isdiscoverable",
                        "title": "static var isDiscoverable: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/openappwhenrun",
                        "title": "static var openAppWhenRun: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/parametersummary",
                        "title": "static var parameterSummary: some ParameterSummary",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/openurlintent/appintent-implementations",
                    "title": "AppIntent Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/persistentidentifier-5h974",
                        "title": "static var persistentIdentifier: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/persistentidentifier-6w7tu",
                        "title": "static var persistentIdentifier: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/openurlintent/persistentlyidentifiable-implementations",
                    "title": "PersistentlyIdentifiable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/urlrepresentation-swift.property",
                        "title": "var urlRepresentation: URL?",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/perform()",
                        "title": "func perform() async throws -> Never",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/openurlintent/urlrepresentation-swift.typealias",
                        "title": "OpenURLIntent.URLRepresentation",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/openurlintent/urlrepresentableintent-implementations",
                    "title": "URLRepresentableIntent Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/openurlintent",
                "title": "OpenURLIntent",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/playvideointent/term",
                    "title": "var term: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/playvideointent/supportedcategories",
                    "title": "static var supportedCategories: [VideoCategory]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/playvideointent",
                "title": "PlayVideoIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/progressreportingintent/progress",
                    "title": "var progress: Progress",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/progressreportingintent",
                "title": "ProgressReportingIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/pushtotalktransmissionintent",
                "title": "PushToTalkTransmissionIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlrepresentableintent/urlrepresentation-swift.typealias",
                    "title": "URLRepresentableIntent.URLRepresentation",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlrepresentableintent/urlrepresentation-4fzwq",
                    "title": "static var urlRepresentation: Self.URLRepresentation",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/urlrepresentableintent",
                "title": "URLRepresentableIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setvalueintent/valuetype",
                    "title": "ValueType",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/setvalueintent/value",
                    "title": "var value: Self.ValueType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/setvalueintent",
                "title": "SetValueIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Scoping the search",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/showinappsearchresultsintent/searchscopes",
                    "title": "static var searchScopes: Self.Criteria.SearchScopes",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Search scopes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/freeformvideo",
                        "title": "case freeformVideo",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/general",
                        "title": "case general",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/movies",
                        "title": "case movies",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/tv",
                        "title": "case tv",
                        "type": "case"
                      },
                      {
                        "title": "Providing descriptions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/casedisplayrepresentations",
                        "title": "static var caseDisplayRepresentations: [StringSearchScope : DisplayRepresentation]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/typedisplayrepresentation",
                        "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                        "type": "property"
                      },
                      {
                        "title": "Creating a search scope",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/init(rawvalue:)",
                        "title": "init?(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/rawvalue-swift.property",
                        "title": "var rawValue: String",
                        "type": "property"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/allcases-swift.typealias",
                        "title": "StringSearchScope.AllCases",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/rawvalue-swift.typealias",
                        "title": "StringSearchScope.RawValue",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/specification",
                        "title": "StringSearchScope.Specification",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/unwrappedtype",
                        "title": "StringSearchScope.UnwrappedType",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/valuetype",
                        "title": "StringSearchScope.ValueType",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchscope/allcases-swift.type.property",
                        "title": "static var allCases: [StringSearchScope]",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchscope/defaultresolverspecification",
                            "title": "static var defaultResolverSpecification: some ResolverSpecification",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchscope/appenum-implementations",
                        "title": "AppEnum Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchscope/localizedstringresource",
                            "title": "var localizedStringResource: LocalizedStringResource",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchscope/casedisplayrepresentable-implementations",
                        "title": "CaseDisplayRepresentable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchscope/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchscope/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchscope/persistentidentifier",
                            "title": "static var persistentIdentifier: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchscope/persistentlyidentifiable-implementations",
                        "title": "PersistentlyIdentifiable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchscope/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchscope/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchscope/rawrepresentable-implementations",
                        "title": "RawRepresentable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/stringsearchscope",
                    "title": "StringSearchScope",
                    "type": "enum"
                  },
                  {
                    "title": "Defining the search criteria",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/showinappsearchresultsintent/criteria-swift.property",
                    "title": "var criteria: Self.Criteria",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Associated Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/searchcriteria/searchscopes",
                        "title": "SearchScopes",
                        "type": "associatedtype"
                      }
                    ],
                    "path": "/documentation/appintents/searchcriteria",
                    "title": "SearchCriteria",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/==(_:_:)",
                        "title": "static func == (StringSearchCriteria, StringSearchCriteria) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/init(term:)",
                        "title": "init(term: String)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/term",
                        "title": "var term: String",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/searchscopes",
                        "title": "StringSearchCriteria.SearchScopes",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/specification",
                        "title": "StringSearchCriteria.Specification",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/unwrappedtype",
                        "title": "StringSearchCriteria.UnwrappedType",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/valuetype",
                        "title": "StringSearchCriteria.ValueType",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteria/defaultresolverspecification",
                        "title": "static var defaultResolverSpecification: some ResolverSpecification",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchcriteria/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchcriteria/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/stringsearchcriteria",
                    "title": "StringSearchCriteria",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/appintents/showinappsearchresultsintent/criteria-swift.associatedtype",
                    "title": "Criteria",
                    "type": "associatedtype"
                  }
                ],
                "path": "/documentation/appintents/showinappsearchresultsintent",
                "title": "ShowInAppSearchResultsIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/systemintent",
                "title": "SystemIntent",
                "type": "protocol"
              },
              {
                "title": "Controls, widgets, and Live Activities",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/controlconfigurationintent/neverresult",
                    "title": "NeverResult",
                    "type": "associatedtype"
                  }
                ],
                "path": "/documentation/appintents/controlconfigurationintent",
                "title": "ControlConfigurationIntent",
                "type": "protocol"
              },
              {
                "deprecated": true,
                "path": "/documentation/appintents/liveactivitystartingintent",
                "title": "LiveActivityStartingIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/liveactivityintent",
                "title": "LiveActivityIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Widget families",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/==(_:_:)",
                        "title": "static func == (IntentWidgetFamily, IntentWidgetFamily) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/accessorycircular",
                        "title": "case accessoryCircular",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/accessorycorner",
                        "title": "case accessoryCorner",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/accessoryinline",
                        "title": "case accessoryInline",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/accessoryrectangular",
                        "title": "case accessoryRectangular",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/systemextralarge",
                        "title": "case systemExtraLarge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/systemlarge",
                        "title": "case systemLarge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/systemmedium",
                        "title": "case systemMedium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/systemsmall",
                        "title": "case systemSmall",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/specification",
                        "title": "IntentWidgetFamily.Specification",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/unwrappedtype",
                        "title": "IntentWidgetFamily.UnwrappedType",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/valuetype",
                        "title": "IntentWidgetFamily.ValueType",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentwidgetfamily/defaultresolverspecification",
                        "title": "static var defaultResolverSpecification: EmptyResolverSpecification<IntentWidgetFamily>",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentwidgetfamily/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentwidgetfamily/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentwidgetfamily",
                    "title": "IntentWidgetFamily",
                    "type": "enum"
                  },
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/widgetconfigurationintent/neverresult",
                    "title": "NeverResult",
                    "type": "associatedtype"
                  }
                ],
                "path": "/documentation/appintents/widgetconfigurationintent",
                "title": "WidgetConfigurationIntent",
                "type": "protocol"
              },
              {
                "title": "Siri and Apple Intelligence",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/integrating-actions-with-siri-and-apple-intelligence",
                "title": "Integrating actions with Siri and Apple Intelligence",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Macros",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/assistantintent(schema:)",
                    "title": "macro AssistantIntent<T>(schema: T)",
                    "type": "macro"
                  },
                  {
                    "path": "/documentation/appintents/assistantentity(schema:)",
                    "title": "macro AssistantEntity<T>(schema: T)",
                    "type": "macro"
                  },
                  {
                    "path": "/documentation/appintents/assistantenum(schema:)",
                    "title": "macro AssistantEnum<T>(schema: T)",
                    "type": "macro"
                  },
                  {
                    "title": "Books",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-ebook-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making ebook actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/navigatepage",
                        "title": "var navigatePage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/openbook",
                        "title": "var openBook: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/playaudiobook",
                        "title": "var playAudiobook: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/search",
                        "title": "var search: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/updatecharacterspacing",
                        "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/updatefontsize",
                        "title": "var updateFontSize: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/updatelinespacing",
                        "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/updatesettings",
                        "title": "var updateSettings: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksintent/updatewordspacing",
                        "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/booksintent",
                    "title": "AssistantSchemas.BooksIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksentity/audiobook",
                        "title": "var audiobook: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksentity/book",
                        "title": "var book: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksentity/settings",
                        "title": "var settings: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/booksentity",
                    "title": "AssistantSchemas.BooksEntity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/contenttype",
                        "title": "var contentType: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/font",
                        "title": "var font: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/fontsize",
                        "title": "var fontSize: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/navigationdirection",
                        "title": "var navigationDirection: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/pagenavigationsetting",
                        "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/relativecharacterspacingchange",
                        "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/relativefontchange",
                        "title": "var relativeFontChange: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/relativelinespacingchange",
                        "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/relativewordspacingchange",
                        "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/booksenum/theme",
                        "title": "var theme: some AssistantSchemas.Enum",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/booksenum",
                    "title": "AssistantSchemas.BooksEnum",
                    "type": "protocol"
                  },
                  {
                    "title": "Browser",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-browser-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making browser actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/bookmarktab",
                        "title": "var bookmarkTab: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/bookmarkurl",
                        "title": "var bookmarkURL: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/clearhistory",
                        "title": "var clearHistory: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/closetabs",
                        "title": "var closeTabs: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/closewindows",
                        "title": "var closeWindows: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/createtab",
                        "title": "var createTab: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/createwindow",
                        "title": "var createWindow: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/deletebookmarks",
                        "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/findonpage",
                        "title": "var findOnPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/openbookmark",
                        "title": "var openBookmark: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/openurlintab",
                        "title": "var openURLInTab: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/search",
                        "title": "var search: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserintent/switchtab",
                        "title": "var switchTab: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/browserintent",
                    "title": "AssistantSchemas.BrowserIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserentity/bookmark",
                        "title": "var bookmark: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserentity/tab",
                        "title": "var tab: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserentity/window",
                        "title": "var window: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/browserentity",
                    "title": "AssistantSchemas.BrowserEntity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/browserenum/clearhistorytimeframe",
                        "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/browserenum",
                    "title": "AssistantSchemas.BrowserEnum",
                    "type": "protocol"
                  },
                  {
                    "title": "Camera",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-camera-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making camera actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraintent/openincapturemode",
                        "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraintent/setdevice",
                        "title": "var setDevice: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraintent/startcapture",
                        "title": "var startCapture: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraintent/stopcapture",
                        "title": "var stopCapture: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraintent/switchdevice",
                        "title": "var switchDevice: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/cameraintent",
                    "title": "AssistantSchemas.CameraIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraenum/capturedevice",
                        "title": "var captureDevice: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraenum/captureduration",
                        "title": "var captureDuration: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/cameraenum/capturemode",
                        "title": "var captureMode: some AssistantSchemas.Enum",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/cameraenum",
                    "title": "AssistantSchemas.CameraEnum",
                    "type": "protocol"
                  },
                  {
                    "title": "Document reader",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-document-reader-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making document reader actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/deletepages",
                        "title": "var deletePages: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/enhancedocuments",
                        "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/insertpages",
                        "title": "var insertPages: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/opendocument",
                        "title": "var openDocument: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/openpage",
                        "title": "var openPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/resizedocuments",
                        "title": "var resizeDocuments: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/rotatedocuments",
                        "title": "var rotateDocuments: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/rotatepages",
                        "title": "var rotatePages: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerintent/searchdocuments",
                        "title": "var searchDocuments: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/readerintent",
                    "title": "AssistantSchemas.ReaderIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerentity/document",
                        "title": "var document: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerentity/page",
                        "title": "var page: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/readerentity",
                    "title": "AssistantSchemas.ReaderEntity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/readerenum/documentkind",
                        "title": "var documentKind: some AssistantSchemas.Enum",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/readerenum",
                    "title": "AssistantSchemas.ReaderEnum",
                    "type": "protocol"
                  },
                  {
                    "title": "File management",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-file-management-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making file management actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/filesintent/createfolder",
                        "title": "var createFolder: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/filesintent/deletefiles",
                        "title": "var deleteFiles: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/filesintent/movefiles",
                        "title": "var moveFiles: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/filesintent/openfile",
                        "title": "var openFile: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/filesintent/renamefile",
                        "title": "var renameFile: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/filesintent",
                    "title": "AssistantSchemas.FilesIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/filesentity/file",
                        "title": "var file: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/filesentity",
                    "title": "AssistantSchemas.FilesEntity",
                    "type": "protocol"
                  },
                  {
                    "title": "Journaling",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-journaling-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making journaling actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/journalintent/createaudioentry",
                        "title": "var createAudioEntry: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/journalintent/createentry",
                        "title": "var createEntry: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/journalintent/deleteentry",
                        "title": "var deleteEntry: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/journalintent/search",
                        "title": "var search: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/journalintent/updateentry",
                        "title": "var updateEntry: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/journalintent",
                    "title": "AssistantSchemas.JournalIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/journalentity/entry",
                        "title": "var entry: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/journalentity",
                    "title": "AssistantSchemas.JournalEntity",
                    "type": "protocol"
                  },
                  {
                    "title": "Email",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-email-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making email actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/archivemail",
                        "title": "var archiveMail: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/createdraft",
                        "title": "var createDraft: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/deletedraft",
                        "title": "var deleteDraft: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/deletemail",
                        "title": "var deleteMail: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/forwardmail",
                        "title": "var forwardMail: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/replymail",
                        "title": "var replyMail: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/savedraft",
                        "title": "var saveDraft: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/senddraft",
                        "title": "var sendDraft: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/updatedraft",
                        "title": "var updateDraft: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailintent/updatemail",
                        "title": "var updateMail: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/mailintent",
                    "title": "AssistantSchemas.MailIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailentity/account",
                        "title": "var account: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailentity/draft",
                        "title": "var draft: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailentity/mailbox",
                        "title": "var mailbox: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/mailentity/message",
                        "title": "var message: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/mailentity",
                    "title": "AssistantSchemas.MailEntity",
                    "type": "protocol"
                  },
                  {
                    "title": "Photos and videos",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-photo-and-video-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making photo and video actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/addassetstoalbum",
                        "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/cleanupphoto",
                        "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/copyedits",
                        "title": "var copyEdits: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/createalbum",
                        "title": "var createAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/createassets",
                        "title": "var createAssets: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/crop",
                        "title": "var crop: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/deletealbum",
                        "title": "var deleteAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/deleteassets",
                        "title": "var deleteAssets: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/duplicateassets",
                        "title": "var duplicateAssets: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/openalbum",
                        "title": "var openAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/openasset",
                        "title": "var openAsset: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/pasteedits",
                        "title": "var pasteEdits: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/posttosharedalbum",
                        "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/removeassetsfromalbum",
                        "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/search",
                        "title": "var search: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/setdepth",
                        "title": "var setDepth: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/setexposure",
                        "title": "var setExposure: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/setfilter",
                        "title": "var setFilter: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/setrotation",
                        "title": "var setRotation: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/setsaturation",
                        "title": "var setSaturation: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/setwarmth",
                        "title": "var setWarmth: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/straighten",
                        "title": "var straighten: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/toggledepth",
                        "title": "var toggleDepth: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/togglesuggestededits",
                        "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/updatealbum",
                        "title": "var updateAlbum: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/updateasset",
                        "title": "var updateAsset: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosintent/updaterecognizedperson",
                        "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/photosintent",
                    "title": "AssistantSchemas.PhotosIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosentity/album",
                        "title": "var album: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosentity/asset",
                        "title": "var asset: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosentity/recognizedperson",
                        "title": "var recognizedPerson: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/photosentity",
                    "title": "AssistantSchemas.PhotosEntity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosenum/albumtype",
                        "title": "var albumType: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosenum/assettype",
                        "title": "var assetType: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosenum/filtertype",
                        "title": "var filterType: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/photosenum/rotationdirection",
                        "title": "var rotationDirection: some AssistantSchemas.Enum",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/photosenum",
                    "title": "AssistantSchemas.PhotosEnum",
                    "type": "protocol"
                  },
                  {
                    "title": "Presentations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-presentation-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making presentation actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/addaudiotoslide",
                        "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/addcommenttoslide",
                        "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/addimagetoslide",
                        "title": "var addImageToSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/addtextboxtoslide",
                        "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/addvideotoslide",
                        "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/addwebvideotoslide",
                        "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/create",
                        "title": "var create: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/createslide",
                        "title": "var createSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/deleteslide",
                        "title": "var deleteSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/open",
                        "title": "var open: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/openslide",
                        "title": "var openSlide: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/setslidetitle",
                        "title": "var setSlideTitle: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/startplayback",
                        "title": "var startPlayback: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/stopplayback",
                        "title": "var stopPlayback: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationintent/update",
                        "title": "var update: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/presentationintent",
                    "title": "AssistantSchemas.PresentationIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationentity/document",
                        "title": "var document: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationentity/slide",
                        "title": "var slide: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/presentationentity/template",
                        "title": "var template: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/presentationentity",
                    "title": "AssistantSchemas.PresentationEntity",
                    "type": "protocol"
                  },
                  {
                    "title": "Spreadsheets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-spreadsheet-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making spreadsheet actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addaudiotosheet",
                        "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addcommenttosheet",
                        "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addimagetosheet",
                        "title": "var addImageToSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addtextboxtosheet",
                        "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addvideotosheet",
                        "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addwebvideotosheet",
                        "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/create",
                        "title": "var create: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/createsheet",
                        "title": "var createSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/delete",
                        "title": "var delete: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/deletesheet",
                        "title": "var deleteSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/open",
                        "title": "var open: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/opensheet",
                        "title": "var openSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/update",
                        "title": "var update: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetintent/updatesheet",
                        "title": "var updateSheet: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/spreadsheetintent",
                    "title": "AssistantSchemas.SpreadsheetIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetentity/document",
                        "title": "var document: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetentity/sheet",
                        "title": "var sheet: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/spreadsheetentity/template",
                        "title": "var template: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/spreadsheetentity",
                    "title": "AssistantSchemas.SpreadsheetEntity",
                    "type": "protocol"
                  },
                  {
                    "title": "System and in-app search",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-in-app-search-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making in-app search actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/systemintent/search",
                        "title": "var search: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/systemintent",
                    "title": "AssistantSchemas.SystemIntent",
                    "type": "protocol"
                  },
                  {
                    "title": "Whiteboard",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-whiteboard-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making whiteboard actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/createboard",
                        "title": "var createBoard: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/createitem",
                        "title": "var createItem: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteboard",
                        "title": "var deleteBoard: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteitem",
                        "title": "var deleteItem: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/openboard",
                        "title": "var openBoard: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateboard",
                        "title": "var updateBoard: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateitem",
                        "title": "var updateItem: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/whiteboardintent",
                    "title": "AssistantSchemas.WhiteboardIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardentity/board",
                        "title": "var board: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardentity/item",
                        "title": "var item: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/whiteboardentity",
                    "title": "AssistantSchemas.WhiteboardEntity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardenum/color",
                        "title": "var color: some AssistantSchemas.Enum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/whiteboardenum/itemtype",
                        "title": "var itemType: some AssistantSchemas.Enum",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/whiteboardenum",
                    "title": "AssistantSchemas.WhiteboardEnum",
                    "type": "protocol"
                  },
                  {
                    "title": "Word processor and text editing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/making-word-processor-actions-available-to-siri-and-apple-intelligence",
                    "title": "Making word processor actions available to Siri and Apple Intelligence",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addaudiotopage",
                        "title": "var addAudioToPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addimagetopage",
                        "title": "var addImageToPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addtextboxtopage",
                        "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addvideotopage",
                        "title": "var addVideoToPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addwebvideotopage",
                        "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/create",
                        "title": "var create: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/createpage",
                        "title": "var createPage: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/open",
                        "title": "var open: some AssistantSchemas.Intent",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorintent/openpage",
                        "title": "var openPage: some AssistantSchemas.Intent",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/wordprocessorintent",
                    "title": "AssistantSchemas.WordProcessorIntent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorentity/document",
                        "title": "var document: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorentity/page",
                        "title": "var page: some AssistantSchemas.Entity",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/assistantschemas/wordprocessorentity/template",
                        "title": "var template: some AssistantSchemas.Entity",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/assistantschemas/wordprocessorentity",
                    "title": "AssistantSchemas.WordProcessorEntity",
                    "type": "protocol"
                  },
                  {
                    "title": "Base protocols",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Assistant schema protocols",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Protocols",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksentity/audiobook",
                                "title": "var audiobook: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksentity/book",
                                "title": "var book: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksentity/settings",
                                "title": "var settings: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/booksentity",
                            "title": "AssistantSchemas.BooksEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/contenttype",
                                "title": "var contentType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/font",
                                "title": "var font: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/fontsize",
                                "title": "var fontSize: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/navigationdirection",
                                "title": "var navigationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/pagenavigationsetting",
                                "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/relativecharacterspacingchange",
                                "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/relativefontchange",
                                "title": "var relativeFontChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/relativelinespacingchange",
                                "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/relativewordspacingchange",
                                "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksenum/theme",
                                "title": "var theme: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/booksenum",
                            "title": "AssistantSchemas.BooksEnum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/navigatepage",
                                "title": "var navigatePage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/openbook",
                                "title": "var openBook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/playaudiobook",
                                "title": "var playAudiobook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/search",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/updatecharacterspacing",
                                "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/updatefontsize",
                                "title": "var updateFontSize: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/updatelinespacing",
                                "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/updatesettings",
                                "title": "var updateSettings: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/booksintent/updatewordspacing",
                                "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/booksintent",
                            "title": "AssistantSchemas.BooksIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserentity/bookmark",
                                "title": "var bookmark: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserentity/tab",
                                "title": "var tab: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserentity/window",
                                "title": "var window: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/browserentity",
                            "title": "AssistantSchemas.BrowserEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserenum/clearhistorytimeframe",
                                "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/browserenum",
                            "title": "AssistantSchemas.BrowserEnum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/bookmarktab",
                                "title": "var bookmarkTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/bookmarkurl",
                                "title": "var bookmarkURL: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/clearhistory",
                                "title": "var clearHistory: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/closetabs",
                                "title": "var closeTabs: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/closewindows",
                                "title": "var closeWindows: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/createtab",
                                "title": "var createTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/createwindow",
                                "title": "var createWindow: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/deletebookmarks",
                                "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/findonpage",
                                "title": "var findOnPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/openbookmark",
                                "title": "var openBookmark: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/openurlintab",
                                "title": "var openURLInTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/search",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/browserintent/switchtab",
                                "title": "var switchTab: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/browserintent",
                            "title": "AssistantSchemas.BrowserIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraenum/capturedevice",
                                "title": "var captureDevice: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraenum/captureduration",
                                "title": "var captureDuration: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraenum/capturemode",
                                "title": "var captureMode: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/cameraenum",
                            "title": "AssistantSchemas.CameraEnum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraintent/openincapturemode",
                                "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraintent/setdevice",
                                "title": "var setDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraintent/startcapture",
                                "title": "var startCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraintent/stopcapture",
                                "title": "var stopCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/cameraintent/switchdevice",
                                "title": "var switchDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/cameraintent",
                            "title": "AssistantSchemas.CameraIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/books",
                                "title": "static var books: some AssistantSchemas.BooksEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/browser",
                                "title": "static var browser: some AssistantSchemas.BrowserEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/files",
                                "title": "static var files: some AssistantSchemas.FilesEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/journal",
                                "title": "static var journal: some AssistantSchemas.JournalEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/mail",
                                "title": "static var mail: some AssistantSchemas.MailEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/photos",
                                "title": "static var photos: some AssistantSchemas.PhotosEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/presentation",
                                "title": "static var presentation: some AssistantSchemas.PresentationEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/reader",
                                "title": "static var reader: some AssistantSchemas.ReaderEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/spreadsheet",
                                "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/whiteboard",
                                "title": "static var whiteboard: some AssistantSchemas.WhiteboardEntity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/entity/wordprocessor",
                                "title": "static var wordProcessor: some AssistantSchemas.WordProcessorEntity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entity",
                            "title": "AssistantSchemas.Entity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enum/books",
                                "title": "static var books: some AssistantSchemas.BooksEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enum/browser",
                                "title": "static var browser: some AssistantSchemas.BrowserEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enum/camera",
                                "title": "static var camera: some AssistantSchemas.CameraEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enum/photos",
                                "title": "static var photos: some AssistantSchemas.PhotosEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enum/reader",
                                "title": "static var reader: some AssistantSchemas.ReaderEnum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/enum/whiteboard",
                                "title": "static var whiteboard: some AssistantSchemas.WhiteboardEnum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enum",
                            "title": "AssistantSchemas.Enum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/filesentity/file",
                                "title": "var file: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/filesentity",
                            "title": "AssistantSchemas.FilesEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/filesintent/createfolder",
                                "title": "var createFolder: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/filesintent/deletefiles",
                                "title": "var deleteFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/filesintent/movefiles",
                                "title": "var moveFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/filesintent/openfile",
                                "title": "var openFile: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/filesintent/renamefile",
                                "title": "var renameFile: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/filesintent",
                            "title": "AssistantSchemas.FilesIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/books",
                                "title": "static var books: some AssistantSchemas.BooksIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/browser",
                                "title": "static var browser: some AssistantSchemas.BrowserIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/camera",
                                "title": "static var camera: some AssistantSchemas.CameraIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/files",
                                "title": "static var files: some AssistantSchemas.FilesIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/journal",
                                "title": "static var journal: some AssistantSchemas.JournalIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/mail",
                                "title": "static var mail: some AssistantSchemas.MailIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/photos",
                                "title": "static var photos: some AssistantSchemas.PhotosIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/presentation",
                                "title": "static var presentation: some AssistantSchemas.PresentationIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/reader",
                                "title": "static var reader: some AssistantSchemas.ReaderIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/spreadsheet",
                                "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/system",
                                "title": "static var system: some AssistantSchemas.SystemIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/whiteboard",
                                "title": "static var whiteboard: some AssistantSchemas.WhiteboardIntent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/intent/wordprocessor",
                                "title": "static var wordProcessor: some AssistantSchemas.WordProcessorIntent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intent",
                            "title": "AssistantSchemas.Intent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/journalentity/entry",
                                "title": "var entry: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/journalentity",
                            "title": "AssistantSchemas.JournalEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/journalintent/createaudioentry",
                                "title": "var createAudioEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/journalintent/createentry",
                                "title": "var createEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/journalintent/deleteentry",
                                "title": "var deleteEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/journalintent/search",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/journalintent/updateentry",
                                "title": "var updateEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/journalintent",
                            "title": "AssistantSchemas.JournalIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailentity/account",
                                "title": "var account: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailentity/draft",
                                "title": "var draft: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailentity/mailbox",
                                "title": "var mailbox: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailentity/message",
                                "title": "var message: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/mailentity",
                            "title": "AssistantSchemas.MailEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/archivemail",
                                "title": "var archiveMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/createdraft",
                                "title": "var createDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/deletedraft",
                                "title": "var deleteDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/deletemail",
                                "title": "var deleteMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/forwardmail",
                                "title": "var forwardMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/replymail",
                                "title": "var replyMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/savedraft",
                                "title": "var saveDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/senddraft",
                                "title": "var sendDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/updatedraft",
                                "title": "var updateDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/mailintent/updatemail",
                                "title": "var updateMail: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/mailintent",
                            "title": "AssistantSchemas.MailIntent",
                            "type": "protocol"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemas/model",
                            "title": "AssistantSchemas.Model",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosentity/album",
                                "title": "var album: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosentity/asset",
                                "title": "var asset: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosentity/recognizedperson",
                                "title": "var recognizedPerson: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/photosentity",
                            "title": "AssistantSchemas.PhotosEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosenum/albumtype",
                                "title": "var albumType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosenum/assettype",
                                "title": "var assetType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosenum/filtertype",
                                "title": "var filterType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosenum/rotationdirection",
                                "title": "var rotationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/photosenum",
                            "title": "AssistantSchemas.PhotosEnum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/addassetstoalbum",
                                "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/cleanupphoto",
                                "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/copyedits",
                                "title": "var copyEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/createalbum",
                                "title": "var createAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/createassets",
                                "title": "var createAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/crop",
                                "title": "var crop: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/deletealbum",
                                "title": "var deleteAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/deleteassets",
                                "title": "var deleteAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/duplicateassets",
                                "title": "var duplicateAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/openalbum",
                                "title": "var openAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/openasset",
                                "title": "var openAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/pasteedits",
                                "title": "var pasteEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/posttosharedalbum",
                                "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/removeassetsfromalbum",
                                "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/search",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/setdepth",
                                "title": "var setDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/setexposure",
                                "title": "var setExposure: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/setfilter",
                                "title": "var setFilter: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/setrotation",
                                "title": "var setRotation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/setsaturation",
                                "title": "var setSaturation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/setwarmth",
                                "title": "var setWarmth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/straighten",
                                "title": "var straighten: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/toggledepth",
                                "title": "var toggleDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/togglesuggestededits",
                                "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/updatealbum",
                                "title": "var updateAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/updateasset",
                                "title": "var updateAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/photosintent/updaterecognizedperson",
                                "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/photosintent",
                            "title": "AssistantSchemas.PhotosIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationentity/document",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationentity/slide",
                                "title": "var slide: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationentity/template",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/presentationentity",
                            "title": "AssistantSchemas.PresentationEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/addaudiotoslide",
                                "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/addcommenttoslide",
                                "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/addimagetoslide",
                                "title": "var addImageToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/addtextboxtoslide",
                                "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/addvideotoslide",
                                "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/addwebvideotoslide",
                                "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/create",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/createslide",
                                "title": "var createSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/deleteslide",
                                "title": "var deleteSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/open",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/openslide",
                                "title": "var openSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/setslidetitle",
                                "title": "var setSlideTitle: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/startplayback",
                                "title": "var startPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/stopplayback",
                                "title": "var stopPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/presentationintent/update",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/presentationintent",
                            "title": "AssistantSchemas.PresentationIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerentity/document",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerentity/page",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/readerentity",
                            "title": "AssistantSchemas.ReaderEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerenum/documentkind",
                                "title": "var documentKind: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/readerenum",
                            "title": "AssistantSchemas.ReaderEnum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/deletepages",
                                "title": "var deletePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/enhancedocuments",
                                "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/insertpages",
                                "title": "var insertPages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/opendocument",
                                "title": "var openDocument: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/openpage",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/resizedocuments",
                                "title": "var resizeDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/rotatedocuments",
                                "title": "var rotateDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/rotatepages",
                                "title": "var rotatePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/readerintent/searchdocuments",
                                "title": "var searchDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/readerintent",
                            "title": "AssistantSchemas.ReaderIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetentity/document",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetentity/sheet",
                                "title": "var sheet: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetentity/template",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/spreadsheetentity",
                            "title": "AssistantSchemas.SpreadsheetEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addaudiotosheet",
                                "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addcommenttosheet",
                                "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addimagetosheet",
                                "title": "var addImageToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addtextboxtosheet",
                                "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addvideotosheet",
                                "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/addwebvideotosheet",
                                "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/create",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/createsheet",
                                "title": "var createSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/delete",
                                "title": "var delete: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/deletesheet",
                                "title": "var deleteSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/open",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/opensheet",
                                "title": "var openSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/update",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/spreadsheetintent/updatesheet",
                                "title": "var updateSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/spreadsheetintent",
                            "title": "AssistantSchemas.SpreadsheetIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/systemintent/search",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/systemintent",
                            "title": "AssistantSchemas.SystemIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardentity/board",
                                "title": "var board: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardentity/item",
                                "title": "var item: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/whiteboardentity",
                            "title": "AssistantSchemas.WhiteboardEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardenum/color",
                                "title": "var color: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardenum/itemtype",
                                "title": "var itemType: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/whiteboardenum",
                            "title": "AssistantSchemas.WhiteboardEnum",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/createboard",
                                "title": "var createBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/createitem",
                                "title": "var createItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteboard",
                                "title": "var deleteBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/deleteitem",
                                "title": "var deleteItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/openboard",
                                "title": "var openBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateboard",
                                "title": "var updateBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/whiteboardintent/updateitem",
                                "title": "var updateItem: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/whiteboardintent",
                            "title": "AssistantSchemas.WhiteboardIntent",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorentity/document",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorentity/page",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorentity/template",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/wordprocessorentity",
                            "title": "AssistantSchemas.WordProcessorEntity",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addaudiotopage",
                                "title": "var addAudioToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addimagetopage",
                                "title": "var addImageToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addtextboxtopage",
                                "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addvideotopage",
                                "title": "var addVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/addwebvideotopage",
                                "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/create",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/createpage",
                                "title": "var createPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/open",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschemas/wordprocessorintent/openpage",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/wordprocessorintent",
                            "title": "AssistantSchemas.WordProcessorIntent",
                            "type": "protocol"
                          },
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/audiobook",
                                    "title": "var audiobook: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/book",
                                    "title": "var book: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/settings",
                                    "title": "var settings: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/booksentity-implementations",
                                "title": "BooksEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/bookmark",
                                    "title": "var bookmark: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/tab",
                                    "title": "var tab: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/window",
                                    "title": "var window: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/browserentity-implementations",
                                "title": "BrowserEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/books",
                                    "title": "static var books: some AssistantSchemas.BooksEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/browser",
                                    "title": "static var browser: some AssistantSchemas.BrowserEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/files",
                                    "title": "static var files: some AssistantSchemas.FilesEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/journal",
                                    "title": "static var journal: some AssistantSchemas.JournalEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/mail",
                                    "title": "static var mail: some AssistantSchemas.MailEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/photos",
                                    "title": "static var photos: some AssistantSchemas.PhotosEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/presentation",
                                    "title": "static var presentation: some AssistantSchemas.PresentationEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/reader",
                                    "title": "static var reader: some AssistantSchemas.ReaderEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/spreadsheet",
                                    "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/whiteboard",
                                    "title": "static var whiteboard: some AssistantSchemas.WhiteboardEntity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/wordprocessor",
                                    "title": "static var wordProcessor: some AssistantSchemas.WordProcessorEntity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/entity-implementations",
                                "title": "Entity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/file",
                                    "title": "var file: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/filesentity-implementations",
                                "title": "FilesEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/entry",
                                    "title": "var entry: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/journalentity-implementations",
                                "title": "JournalEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/account",
                                    "title": "var account: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/draft",
                                    "title": "var draft: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/mailbox",
                                    "title": "var mailbox: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/message",
                                    "title": "var message: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/mailentity-implementations",
                                "title": "MailEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/album",
                                    "title": "var album: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/asset",
                                    "title": "var asset: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/recognizedperson",
                                    "title": "var recognizedPerson: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/photosentity-implementations",
                                "title": "PhotosEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/document-9crv8",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/slide",
                                    "title": "var slide: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/template-7r2rr",
                                    "title": "var template: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/presentationentity-implementations",
                                "title": "PresentationEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/document-3fnjv",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/page-1thi5",
                                    "title": "var page: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/readerentity-implementations",
                                "title": "ReaderEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/document-679n2",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/sheet",
                                    "title": "var sheet: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/template-2h7b8",
                                    "title": "var template: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/spreadsheetentity-implementations",
                                "title": "SpreadsheetEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/board",
                                    "title": "var board: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/item",
                                    "title": "var item: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/whiteboardentity-implementations",
                                "title": "WhiteboardEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/document-5ipqj",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/page-4hec8",
                                    "title": "var page: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/entityschema/template-2jw9k",
                                    "title": "var template: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/entityschema/wordprocessorentity-implementations",
                                "title": "WordProcessorEntity Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/entityschema",
                            "title": "AssistantSchemas.EntitySchema",
                            "type": "struct"
                          },
                          {
                            "children": [
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/contenttype",
                                    "title": "var contentType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/font",
                                    "title": "var font: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/fontsize",
                                    "title": "var fontSize: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/navigationdirection",
                                    "title": "var navigationDirection: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/pagenavigationsetting",
                                    "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/relativecharacterspacingchange",
                                    "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/relativefontchange",
                                    "title": "var relativeFontChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/relativelinespacingchange",
                                    "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/relativewordspacingchange",
                                    "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/theme",
                                    "title": "var theme: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/booksenum-implementations",
                                "title": "BooksEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/clearhistorytimeframe",
                                    "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/browserenum-implementations",
                                "title": "BrowserEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/capturedevice",
                                    "title": "var captureDevice: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/captureduration",
                                    "title": "var captureDuration: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/capturemode",
                                    "title": "var captureMode: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/cameraenum-implementations",
                                "title": "CameraEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/books",
                                    "title": "static var books: some AssistantSchemas.BooksEnum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/browser",
                                    "title": "static var browser: some AssistantSchemas.BrowserEnum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/camera",
                                    "title": "static var camera: some AssistantSchemas.CameraEnum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/photos",
                                    "title": "static var photos: some AssistantSchemas.PhotosEnum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/reader",
                                    "title": "static var reader: some AssistantSchemas.ReaderEnum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/whiteboard",
                                    "title": "static var whiteboard: some AssistantSchemas.WhiteboardEnum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/enum-implementations",
                                "title": "Enum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/albumtype",
                                    "title": "var albumType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/assettype",
                                    "title": "var assetType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/filtertype",
                                    "title": "var filterType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/rotationdirection",
                                    "title": "var rotationDirection: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/photosenum-implementations",
                                "title": "PhotosEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/documentkind",
                                    "title": "var documentKind: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/readerenum-implementations",
                                "title": "ReaderEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/color",
                                    "title": "var color: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/enumschema/itemtype",
                                    "title": "var itemType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/enumschema/whiteboardenum-implementations",
                                "title": "WhiteboardEnum Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/enumschema",
                            "title": "AssistantSchemas.EnumSchema",
                            "type": "struct"
                          },
                          {
                            "children": [
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/navigatepage",
                                    "title": "var navigatePage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openbook",
                                    "title": "var openBook: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/playaudiobook",
                                    "title": "var playAudiobook: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/search-867mu",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatecharacterspacing",
                                    "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatefontsize",
                                    "title": "var updateFontSize: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatelinespacing",
                                    "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatesettings",
                                    "title": "var updateSettings: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatewordspacing",
                                    "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/booksintent-implementations",
                                "title": "BooksIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/bookmarktab",
                                    "title": "var bookmarkTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/bookmarkurl",
                                    "title": "var bookmarkURL: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/clearhistory",
                                    "title": "var clearHistory: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/closetabs",
                                    "title": "var closeTabs: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/closewindows",
                                    "title": "var closeWindows: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createtab",
                                    "title": "var createTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createwindow",
                                    "title": "var createWindow: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletebookmarks",
                                    "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/findonpage",
                                    "title": "var findOnPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openbookmark",
                                    "title": "var openBookmark: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openurlintab",
                                    "title": "var openURLInTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/search-4lih4",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/switchtab",
                                    "title": "var switchTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/browserintent-implementations",
                                "title": "BrowserIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openincapturemode",
                                    "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setdevice",
                                    "title": "var setDevice: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/startcapture",
                                    "title": "var startCapture: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/stopcapture",
                                    "title": "var stopCapture: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/switchdevice",
                                    "title": "var switchDevice: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/cameraintent-implementations",
                                "title": "CameraIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createfolder",
                                    "title": "var createFolder: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletefiles",
                                    "title": "var deleteFiles: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/movefiles",
                                    "title": "var moveFiles: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openfile",
                                    "title": "var openFile: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/renamefile",
                                    "title": "var renameFile: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/filesintent-implementations",
                                "title": "FilesIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/books",
                                    "title": "static var books: some AssistantSchemas.BooksIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/browser",
                                    "title": "static var browser: some AssistantSchemas.BrowserIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/camera",
                                    "title": "static var camera: some AssistantSchemas.CameraIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/files",
                                    "title": "static var files: some AssistantSchemas.FilesIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/journal",
                                    "title": "static var journal: some AssistantSchemas.JournalIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/mail",
                                    "title": "static var mail: some AssistantSchemas.MailIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/photos",
                                    "title": "static var photos: some AssistantSchemas.PhotosIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/presentation",
                                    "title": "static var presentation: some AssistantSchemas.PresentationIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/reader",
                                    "title": "static var reader: some AssistantSchemas.ReaderIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/spreadsheet",
                                    "title": "static var spreadsheet: some AssistantSchemas.SpreadsheetIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/system",
                                    "title": "static var system: some AssistantSchemas.SystemIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/whiteboard",
                                    "title": "static var whiteboard: some AssistantSchemas.WhiteboardIntent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/wordprocessor",
                                    "title": "static var wordProcessor: some AssistantSchemas.WordProcessorIntent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/intent-implementations",
                                "title": "Intent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createaudioentry",
                                    "title": "var createAudioEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createentry",
                                    "title": "var createEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deleteentry",
                                    "title": "var deleteEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/search-8m2k3",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updateentry",
                                    "title": "var updateEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/journalintent-implementations",
                                "title": "JournalIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/archivemail",
                                    "title": "var archiveMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createdraft",
                                    "title": "var createDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletedraft",
                                    "title": "var deleteDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletemail",
                                    "title": "var deleteMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/forwardmail",
                                    "title": "var forwardMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/replymail",
                                    "title": "var replyMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/savedraft",
                                    "title": "var saveDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/senddraft",
                                    "title": "var sendDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatedraft",
                                    "title": "var updateDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatemail",
                                    "title": "var updateMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/mailintent-implementations",
                                "title": "MailIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addassetstoalbum",
                                    "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/cleanupphoto",
                                    "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/copyedits",
                                    "title": "var copyEdits: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createalbum",
                                    "title": "var createAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createassets",
                                    "title": "var createAssets: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/crop",
                                    "title": "var crop: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletealbum",
                                    "title": "var deleteAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deleteassets",
                                    "title": "var deleteAssets: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/duplicateassets",
                                    "title": "var duplicateAssets: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openalbum",
                                    "title": "var openAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openasset",
                                    "title": "var openAsset: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/pasteedits",
                                    "title": "var pasteEdits: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/posttosharedalbum",
                                    "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/removeassetsfromalbum",
                                    "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/search-7tw5s",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setdepth",
                                    "title": "var setDepth: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setexposure",
                                    "title": "var setExposure: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setfilter",
                                    "title": "var setFilter: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setrotation",
                                    "title": "var setRotation: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setsaturation",
                                    "title": "var setSaturation: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setwarmth",
                                    "title": "var setWarmth: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/straighten",
                                    "title": "var straighten: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/toggledepth",
                                    "title": "var toggleDepth: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/togglesuggestededits",
                                    "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatealbum",
                                    "title": "var updateAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updateasset",
                                    "title": "var updateAsset: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updaterecognizedperson",
                                    "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/photosintent-implementations",
                                "title": "PhotosIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addaudiotoslide",
                                    "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addcommenttoslide",
                                    "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addimagetoslide",
                                    "title": "var addImageToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addtextboxtoslide",
                                    "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addvideotoslide",
                                    "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addwebvideotoslide",
                                    "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/create-88f0w",
                                    "title": "var create: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createslide",
                                    "title": "var createSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deleteslide",
                                    "title": "var deleteSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/open-4h02a",
                                    "title": "var open: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openslide",
                                    "title": "var openSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/setslidetitle",
                                    "title": "var setSlideTitle: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/startplayback",
                                    "title": "var startPlayback: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/stopplayback",
                                    "title": "var stopPlayback: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/update-6gano",
                                    "title": "var update: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/presentationintent-implementations",
                                "title": "PresentationIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletepages",
                                    "title": "var deletePages: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/enhancedocuments",
                                    "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/insertpages",
                                    "title": "var insertPages: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/opendocument",
                                    "title": "var openDocument: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openpage-33tlg",
                                    "title": "var openPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/resizedocuments",
                                    "title": "var resizeDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/rotatedocuments",
                                    "title": "var rotateDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/rotatepages",
                                    "title": "var rotatePages: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/searchdocuments",
                                    "title": "var searchDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/readerintent-implementations",
                                "title": "ReaderIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addaudiotosheet",
                                    "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addcommenttosheet",
                                    "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addimagetosheet",
                                    "title": "var addImageToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addtextboxtosheet",
                                    "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addvideotosheet",
                                    "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addwebvideotosheet",
                                    "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/create-4t8p0",
                                    "title": "var create: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createsheet",
                                    "title": "var createSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/delete",
                                    "title": "var delete: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deletesheet",
                                    "title": "var deleteSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/open-8nvmk",
                                    "title": "var open: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/opensheet",
                                    "title": "var openSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/update-408k2",
                                    "title": "var update: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updatesheet",
                                    "title": "var updateSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/spreadsheetintent-implementations",
                                "title": "SpreadsheetIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/search-9yqp3",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/systemintent-implementations",
                                "title": "SystemIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createboard",
                                    "title": "var createBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createitem",
                                    "title": "var createItem: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deleteboard",
                                    "title": "var deleteBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/deleteitem",
                                    "title": "var deleteItem: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openboard",
                                    "title": "var openBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updateboard",
                                    "title": "var updateBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/updateitem",
                                    "title": "var updateItem: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/whiteboardintent-implementations",
                                "title": "WhiteboardIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addaudiotopage",
                                    "title": "var addAudioToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addimagetopage",
                                    "title": "var addImageToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addtextboxtopage",
                                    "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addvideotopage",
                                    "title": "var addVideoToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/addwebvideotopage",
                                    "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/create-33f31",
                                    "title": "var create: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/createpage",
                                    "title": "var createPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/open-1a3in",
                                    "title": "var open: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschemas/intentschema/openpage-2guet",
                                    "title": "var openPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschemas/intentschema/wordprocessorintent-implementations",
                                "title": "WordProcessorIntent Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschemas/intentschema",
                            "title": "AssistantSchemas.IntentSchema",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemas",
                        "title": "AssistantSchemas",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/audiobook",
                                    "title": "var audiobook: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/book",
                                    "title": "var book: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/settings",
                                    "title": "var settings: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/booksentity-implementations",
                                "title": "BooksEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/bookmark",
                                    "title": "var bookmark: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/tab",
                                    "title": "var tab: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/window",
                                    "title": "var window: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/browserentity-implementations",
                                "title": "BrowserEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/file",
                                    "title": "var file: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/filesentity-implementations",
                                "title": "FilesEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/entry",
                                    "title": "var entry: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/journalentity-implementations",
                                "title": "JournalEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/account",
                                    "title": "var account: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/draft",
                                    "title": "var draft: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/mailbox",
                                    "title": "var mailbox: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/message",
                                    "title": "var message: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/mailentity-implementations",
                                "title": "MailEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/album",
                                    "title": "var album: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/asset",
                                    "title": "var asset: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/recognizedperson",
                                    "title": "var recognizedPerson: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/photosentity-implementations",
                                "title": "PhotosEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/document-12swh",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/slide",
                                    "title": "var slide: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/template-camo",
                                    "title": "var template: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/presentationentity-implementations",
                                "title": "PresentationEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/document-6zxlc",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/page-66y9",
                                    "title": "var page: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/readerentity-implementations",
                                "title": "ReaderEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/document-2bo59",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/sheet",
                                    "title": "var sheet: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/template-2d6md",
                                    "title": "var template: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/spreadsheetentity-implementations",
                                "title": "SpreadsheetEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/board",
                                    "title": "var board: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/item",
                                    "title": "var item: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/whiteboardentity-implementations",
                                "title": "WhiteboardEntity Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/document-2nrvp",
                                    "title": "var document: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/page-a0ua",
                                    "title": "var page: some AssistantSchemas.Entity",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/entityschema/template-4oqoi",
                                    "title": "var template: some AssistantSchemas.Entity",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/entityschema/wordprocessorentity-implementations",
                                "title": "WordProcessorEntity Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema",
                            "title": "AssistantSchema.EntitySchema",
                            "type": "struct"
                          },
                          {
                            "children": [
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/contenttype",
                                    "title": "var contentType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/font",
                                    "title": "var font: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/fontsize",
                                    "title": "var fontSize: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/navigationdirection",
                                    "title": "var navigationDirection: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/pagenavigationsetting",
                                    "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/relativecharacterspacingchange",
                                    "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/relativefontchange",
                                    "title": "var relativeFontChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/relativelinespacingchange",
                                    "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/relativewordspacingchange",
                                    "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/theme",
                                    "title": "var theme: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/enumschema/booksenum-implementations",
                                "title": "BooksEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/clearhistorytimeframe",
                                    "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/enumschema/browserenum-implementations",
                                "title": "BrowserEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/capturedevice",
                                    "title": "var captureDevice: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/captureduration",
                                    "title": "var captureDuration: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/capturemode",
                                    "title": "var captureMode: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/enumschema/cameraenum-implementations",
                                "title": "CameraEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/albumtype",
                                    "title": "var albumType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/assettype",
                                    "title": "var assetType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/filtertype",
                                    "title": "var filterType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/rotationdirection",
                                    "title": "var rotationDirection: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/enumschema/photosenum-implementations",
                                "title": "PhotosEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/documentkind",
                                    "title": "var documentKind: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/enumschema/readerenum-implementations",
                                "title": "ReaderEnum Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/color",
                                    "title": "var color: some AssistantSchemas.Enum",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/enumschema/itemtype",
                                    "title": "var itemType: some AssistantSchemas.Enum",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/enumschema/whiteboardenum-implementations",
                                "title": "WhiteboardEnum Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema",
                            "title": "AssistantSchema.EnumSchema",
                            "type": "struct"
                          },
                          {
                            "children": [
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/navigatepage",
                                    "title": "var navigatePage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openbook",
                                    "title": "var openBook: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/playaudiobook",
                                    "title": "var playAudiobook: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/search-7b0mn",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatecharacterspacing",
                                    "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatefontsize",
                                    "title": "var updateFontSize: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatelinespacing",
                                    "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatesettings",
                                    "title": "var updateSettings: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatewordspacing",
                                    "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/booksintent-implementations",
                                "title": "BooksIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/bookmarktab",
                                    "title": "var bookmarkTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/bookmarkurl",
                                    "title": "var bookmarkURL: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/clearhistory",
                                    "title": "var clearHistory: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/closetabs",
                                    "title": "var closeTabs: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/closewindows",
                                    "title": "var closeWindows: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createtab",
                                    "title": "var createTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createwindow",
                                    "title": "var createWindow: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletebookmarks",
                                    "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/findonpage",
                                    "title": "var findOnPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openbookmark",
                                    "title": "var openBookmark: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openurlintab",
                                    "title": "var openURLInTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/search-31l17",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/switchtab",
                                    "title": "var switchTab: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/browserintent-implementations",
                                "title": "BrowserIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openincapturemode",
                                    "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setdevice",
                                    "title": "var setDevice: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/startcapture",
                                    "title": "var startCapture: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/stopcapture",
                                    "title": "var stopCapture: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/switchdevice",
                                    "title": "var switchDevice: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/cameraintent-implementations",
                                "title": "CameraIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createfolder",
                                    "title": "var createFolder: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletefiles",
                                    "title": "var deleteFiles: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/movefiles",
                                    "title": "var moveFiles: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openfile",
                                    "title": "var openFile: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/renamefile",
                                    "title": "var renameFile: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/filesintent-implementations",
                                "title": "FilesIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createaudioentry",
                                    "title": "var createAudioEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createentry",
                                    "title": "var createEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deleteentry",
                                    "title": "var deleteEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/search-1pp52",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updateentry",
                                    "title": "var updateEntry: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/journalintent-implementations",
                                "title": "JournalIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/archivemail",
                                    "title": "var archiveMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createdraft",
                                    "title": "var createDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletedraft",
                                    "title": "var deleteDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletemail",
                                    "title": "var deleteMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/forwardmail",
                                    "title": "var forwardMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/replymail",
                                    "title": "var replyMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/savedraft",
                                    "title": "var saveDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/senddraft",
                                    "title": "var sendDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatedraft",
                                    "title": "var updateDraft: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatemail",
                                    "title": "var updateMail: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/mailintent-implementations",
                                "title": "MailIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addassetstoalbum",
                                    "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/cleanupphoto",
                                    "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/copyedits",
                                    "title": "var copyEdits: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createalbum",
                                    "title": "var createAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createassets",
                                    "title": "var createAssets: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/crop",
                                    "title": "var crop: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletealbum",
                                    "title": "var deleteAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deleteassets",
                                    "title": "var deleteAssets: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/duplicateassets",
                                    "title": "var duplicateAssets: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openalbum",
                                    "title": "var openAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openasset",
                                    "title": "var openAsset: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/pasteedits",
                                    "title": "var pasteEdits: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/posttosharedalbum",
                                    "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/removeassetsfromalbum",
                                    "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/search-57rep",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setdepth",
                                    "title": "var setDepth: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setexposure",
                                    "title": "var setExposure: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setfilter",
                                    "title": "var setFilter: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setrotation",
                                    "title": "var setRotation: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setsaturation",
                                    "title": "var setSaturation: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setwarmth",
                                    "title": "var setWarmth: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/straighten",
                                    "title": "var straighten: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/toggledepth",
                                    "title": "var toggleDepth: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/togglesuggestededits",
                                    "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatealbum",
                                    "title": "var updateAlbum: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updateasset",
                                    "title": "var updateAsset: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updaterecognizedperson",
                                    "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/photosintent-implementations",
                                "title": "PhotosIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addaudiotoslide",
                                    "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addcommenttoslide",
                                    "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addimagetoslide",
                                    "title": "var addImageToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtoslide",
                                    "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addvideotoslide",
                                    "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotoslide",
                                    "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/create-795hv",
                                    "title": "var create: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createslide",
                                    "title": "var createSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deleteslide",
                                    "title": "var deleteSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/open-19q5k",
                                    "title": "var open: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openslide",
                                    "title": "var openSlide: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/setslidetitle",
                                    "title": "var setSlideTitle: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/startplayback",
                                    "title": "var startPlayback: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/stopplayback",
                                    "title": "var stopPlayback: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/update-1gbtt",
                                    "title": "var update: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/presentationintent-implementations",
                                "title": "PresentationIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletepages",
                                    "title": "var deletePages: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/enhancedocuments",
                                    "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/insertpages",
                                    "title": "var insertPages: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/opendocument",
                                    "title": "var openDocument: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openpage-1fzng",
                                    "title": "var openPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/resizedocuments",
                                    "title": "var resizeDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/rotatedocuments",
                                    "title": "var rotateDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/rotatepages",
                                    "title": "var rotatePages: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/searchdocuments",
                                    "title": "var searchDocuments: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/readerintent-implementations",
                                "title": "ReaderIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addaudiotosheet",
                                    "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addcommenttosheet",
                                    "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addimagetosheet",
                                    "title": "var addImageToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtosheet",
                                    "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addvideotosheet",
                                    "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotosheet",
                                    "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/create-7wgs6",
                                    "title": "var create: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createsheet",
                                    "title": "var createSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/delete",
                                    "title": "var delete: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deletesheet",
                                    "title": "var deleteSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/open-nkcd",
                                    "title": "var open: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/opensheet",
                                    "title": "var openSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/update-qcb8",
                                    "title": "var update: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updatesheet",
                                    "title": "var updateSheet: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/spreadsheetintent-implementations",
                                "title": "SpreadsheetIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/search-1hht2",
                                    "title": "var search: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/systemintent-implementations",
                                "title": "SystemIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createboard",
                                    "title": "var createBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createitem",
                                    "title": "var createItem: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deleteboard",
                                    "title": "var deleteBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/deleteitem",
                                    "title": "var deleteItem: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openboard",
                                    "title": "var openBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updateboard",
                                    "title": "var updateBoard: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/updateitem",
                                    "title": "var updateItem: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/whiteboardintent-implementations",
                                "title": "WhiteboardIntent Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addaudiotopage",
                                    "title": "var addAudioToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addimagetopage",
                                    "title": "var addImageToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtopage",
                                    "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addvideotopage",
                                    "title": "var addVideoToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotopage",
                                    "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/create-2jkab",
                                    "title": "var create: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/createpage",
                                    "title": "var createPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/open-a0vk",
                                    "title": "var open: some AssistantSchemas.Intent",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/appintents/assistantschema/intentschema/openpage-2zdjq",
                                    "title": "var openPage: some AssistantSchemas.Intent",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/assistantschema/intentschema/wordprocessorintent-implementations",
                                "title": "WordProcessorIntent Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema",
                            "title": "AssistantSchema.IntentSchema",
                            "type": "struct"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/init(_:)-8yk4w",
                            "title": "init(some AssistantSchemas.Entity)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/init(_:)-9exua",
                            "title": "init(some AssistantSchemas.Intent)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/assistantschema/init(_:)-ym1l",
                            "title": "init(some AssistantSchemas.Enum)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema",
                        "title": "AssistantSchema",
                        "type": "struct"
                      },
                      {
                        "title": "Schema conformance",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/navigatepage",
                                "title": "var navigatePage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openbook",
                                "title": "var openBook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/playaudiobook",
                                "title": "var playAudiobook: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-7b0mn",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatecharacterspacing",
                                "title": "var updateCharacterSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatefontsize",
                                "title": "var updateFontSize: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatelinespacing",
                                "title": "var updateLineSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatesettings",
                                "title": "var updateSettings: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatewordspacing",
                                "title": "var updateWordSpacing: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/booksintent-implementations",
                            "title": "BooksIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/bookmarktab",
                                "title": "var bookmarkTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/bookmarkurl",
                                "title": "var bookmarkURL: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/clearhistory",
                                "title": "var clearHistory: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/closetabs",
                                "title": "var closeTabs: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/closewindows",
                                "title": "var closeWindows: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createtab",
                                "title": "var createTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createwindow",
                                "title": "var createWindow: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletebookmarks",
                                "title": "var deleteBookmarks: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/findonpage",
                                "title": "var findOnPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openbookmark",
                                "title": "var openBookmark: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openurlintab",
                                "title": "var openURLInTab: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-31l17",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/switchtab",
                                "title": "var switchTab: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/browserintent-implementations",
                            "title": "BrowserIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openincapturemode",
                                "title": "var openInCaptureMode: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setdevice",
                                "title": "var setDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/startcapture",
                                "title": "var startCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/stopcapture",
                                "title": "var stopCapture: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/switchdevice",
                                "title": "var switchDevice: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/cameraintent-implementations",
                            "title": "CameraIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createfolder",
                                "title": "var createFolder: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletefiles",
                                "title": "var deleteFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/movefiles",
                                "title": "var moveFiles: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openfile",
                                "title": "var openFile: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/renamefile",
                                "title": "var renameFile: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/filesintent-implementations",
                            "title": "FilesIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createaudioentry",
                                "title": "var createAudioEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createentry",
                                "title": "var createEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteentry",
                                "title": "var deleteEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-1pp52",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateentry",
                                "title": "var updateEntry: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/journalintent-implementations",
                            "title": "JournalIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/archivemail",
                                "title": "var archiveMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createdraft",
                                "title": "var createDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletedraft",
                                "title": "var deleteDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletemail",
                                "title": "var deleteMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/forwardmail",
                                "title": "var forwardMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/replymail",
                                "title": "var replyMail: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/savedraft",
                                "title": "var saveDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/senddraft",
                                "title": "var sendDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatedraft",
                                "title": "var updateDraft: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatemail",
                                "title": "var updateMail: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/mailintent-implementations",
                            "title": "MailIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addassetstoalbum",
                                "title": "var addAssetsToAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/cleanupphoto",
                                "title": "var cleanupPhoto: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/copyedits",
                                "title": "var copyEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createalbum",
                                "title": "var createAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createassets",
                                "title": "var createAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/crop",
                                "title": "var crop: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletealbum",
                                "title": "var deleteAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteassets",
                                "title": "var deleteAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/duplicateassets",
                                "title": "var duplicateAssets: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openalbum",
                                "title": "var openAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openasset",
                                "title": "var openAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/pasteedits",
                                "title": "var pasteEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/posttosharedalbum",
                                "title": "var postToSharedAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/removeassetsfromalbum",
                                "title": "var removeAssetsFromAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-57rep",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setdepth",
                                "title": "var setDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setexposure",
                                "title": "var setExposure: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setfilter",
                                "title": "var setFilter: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setrotation",
                                "title": "var setRotation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setsaturation",
                                "title": "var setSaturation: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setwarmth",
                                "title": "var setWarmth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/straighten",
                                "title": "var straighten: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/toggledepth",
                                "title": "var toggleDepth: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/togglesuggestededits",
                                "title": "var toggleSuggestedEdits: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatealbum",
                                "title": "var updateAlbum: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateasset",
                                "title": "var updateAsset: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updaterecognizedperson",
                                "title": "var updateRecognizedPerson: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/photosintent-implementations",
                            "title": "PhotosIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addaudiotoslide",
                                "title": "var addAudioToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addcommenttoslide",
                                "title": "var addCommentToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addimagetoslide",
                                "title": "var addImageToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtoslide",
                                "title": "var addTextBoxToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addvideotoslide",
                                "title": "var addVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotoslide",
                                "title": "var addWebVideoToSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/create-795hv",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createslide",
                                "title": "var createSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteslide",
                                "title": "var deleteSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/open-19q5k",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openslide",
                                "title": "var openSlide: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/setslidetitle",
                                "title": "var setSlideTitle: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/startplayback",
                                "title": "var startPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/stopplayback",
                                "title": "var stopPlayback: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/update-1gbtt",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/presentationintent-implementations",
                            "title": "PresentationIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletepages",
                                "title": "var deletePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/enhancedocuments",
                                "title": "var enhanceDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/insertpages",
                                "title": "var insertPages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/opendocument",
                                "title": "var openDocument: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openpage-1fzng",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/resizedocuments",
                                "title": "var resizeDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/rotatedocuments",
                                "title": "var rotateDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/rotatepages",
                                "title": "var rotatePages: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/searchdocuments",
                                "title": "var searchDocuments: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/readerintent-implementations",
                            "title": "ReaderIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addaudiotosheet",
                                "title": "var addAudioToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addcommenttosheet",
                                "title": "var addCommentToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addimagetosheet",
                                "title": "var addImageToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtosheet",
                                "title": "var addTextBoxToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addvideotosheet",
                                "title": "var addVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotosheet",
                                "title": "var addWebVideoToSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/create-7wgs6",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createsheet",
                                "title": "var createSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/delete",
                                "title": "var delete: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deletesheet",
                                "title": "var deleteSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/open-nkcd",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/opensheet",
                                "title": "var openSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/update-qcb8",
                                "title": "var update: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updatesheet",
                                "title": "var updateSheet: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/spreadsheetintent-implementations",
                            "title": "SpreadsheetIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/search-1hht2",
                                "title": "var search: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/systemintent-implementations",
                            "title": "SystemIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createboard",
                                "title": "var createBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createitem",
                                "title": "var createItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteboard",
                                "title": "var deleteBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/deleteitem",
                                "title": "var deleteItem: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openboard",
                                "title": "var openBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateboard",
                                "title": "var updateBoard: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/updateitem",
                                "title": "var updateItem: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/whiteboardintent-implementations",
                            "title": "WhiteboardIntent Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addaudiotopage",
                                "title": "var addAudioToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addimagetopage",
                                "title": "var addImageToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addtextboxtopage",
                                "title": "var addTextBoxToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addvideotopage",
                                "title": "var addVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/addwebvideotopage",
                                "title": "var addWebVideoToPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/create-2jkab",
                                "title": "var create: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/createpage",
                                "title": "var createPage: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/open-a0vk",
                                "title": "var open: some AssistantSchemas.Intent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/intentschema/openpage-2zdjq",
                                "title": "var openPage: some AssistantSchemas.Intent",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/intentschema/wordprocessorintent-implementations",
                            "title": "WordProcessorIntent Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/intentschema",
                        "title": "AssistantSchema.IntentSchema",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/audiobook",
                                "title": "var audiobook: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/book",
                                "title": "var book: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/settings",
                                "title": "var settings: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/booksentity-implementations",
                            "title": "BooksEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/bookmark",
                                "title": "var bookmark: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/tab",
                                "title": "var tab: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/window",
                                "title": "var window: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/browserentity-implementations",
                            "title": "BrowserEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/file",
                                "title": "var file: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/filesentity-implementations",
                            "title": "FilesEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/entry",
                                "title": "var entry: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/journalentity-implementations",
                            "title": "JournalEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/account",
                                "title": "var account: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/draft",
                                "title": "var draft: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/mailbox",
                                "title": "var mailbox: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/message",
                                "title": "var message: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/mailentity-implementations",
                            "title": "MailEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/album",
                                "title": "var album: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/asset",
                                "title": "var asset: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/recognizedperson",
                                "title": "var recognizedPerson: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/photosentity-implementations",
                            "title": "PhotosEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-12swh",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/slide",
                                "title": "var slide: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/template-camo",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/presentationentity-implementations",
                            "title": "PresentationEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-6zxlc",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/page-66y9",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/readerentity-implementations",
                            "title": "ReaderEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-2bo59",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/sheet",
                                "title": "var sheet: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/template-2d6md",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/spreadsheetentity-implementations",
                            "title": "SpreadsheetEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/board",
                                "title": "var board: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/item",
                                "title": "var item: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/whiteboardentity-implementations",
                            "title": "WhiteboardEntity Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/document-2nrvp",
                                "title": "var document: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/page-a0ua",
                                "title": "var page: some AssistantSchemas.Entity",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/entityschema/template-4oqoi",
                                "title": "var template: some AssistantSchemas.Entity",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/entityschema/wordprocessorentity-implementations",
                            "title": "WordProcessorEntity Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/entityschema",
                        "title": "AssistantSchema.EntitySchema",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/contenttype",
                                "title": "var contentType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/font",
                                "title": "var font: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/fontsize",
                                "title": "var fontSize: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/navigationdirection",
                                "title": "var navigationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/pagenavigationsetting",
                                "title": "var pageNavigationSetting: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativecharacterspacingchange",
                                "title": "var relativeCharacterSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativefontchange",
                                "title": "var relativeFontChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativelinespacingchange",
                                "title": "var relativeLineSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/relativewordspacingchange",
                                "title": "var relativeWordSpacingChange: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/theme",
                                "title": "var theme: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/booksenum-implementations",
                            "title": "BooksEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/clearhistorytimeframe",
                                "title": "var clearHistoryTimeFrame: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/browserenum-implementations",
                            "title": "BrowserEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/capturedevice",
                                "title": "var captureDevice: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/captureduration",
                                "title": "var captureDuration: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/capturemode",
                                "title": "var captureMode: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/cameraenum-implementations",
                            "title": "CameraEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/albumtype",
                                "title": "var albumType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/assettype",
                                "title": "var assetType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/filtertype",
                                "title": "var filterType: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/rotationdirection",
                                "title": "var rotationDirection: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/photosenum-implementations",
                            "title": "PhotosEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/documentkind",
                                "title": "var documentKind: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/readerenum-implementations",
                            "title": "ReaderEnum Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/color",
                                "title": "var color: some AssistantSchemas.Enum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/assistantschema/enumschema/itemtype",
                                "title": "var itemType: some AssistantSchemas.Enum",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/appintents/assistantschema/enumschema/whiteboardenum-implementations",
                            "title": "WhiteboardEnum Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschema/enumschema",
                        "title": "AssistantSchema.EnumSchema",
                        "type": "struct"
                      },
                      {
                        "title": "Base protocols",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/assistantintent",
                        "title": "AssistantIntent",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemaintent/isassistantonly",
                            "title": "static var isAssistantOnly: Bool",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemaintent",
                        "title": "AssistantSchemaIntent",
                        "type": "protocol"
                      },
                      {
                        "path": "/documentation/appintents/assistantentity",
                        "title": "AssistantEntity",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemaentity/isassistantonly",
                            "title": "static var isAssistantOnly: Bool",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemaentity",
                        "title": "AssistantSchemaEntity",
                        "type": "protocol"
                      },
                      {
                        "path": "/documentation/appintents/assistantenum",
                        "title": "AssistantEnum",
                        "type": "protocol"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/assistantschemaenum/isassistantonly",
                            "title": "static var isAssistantOnly: Bool",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/assistantschemaenum",
                        "title": "AssistantSchemaEnum",
                        "type": "protocol"
                      }
                    ],
                    "path": "/documentation/appintents/assistant-schema-base-protocols",
                    "title": "Assistant schema base protocols",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/app-intent-domains",
                "title": "App intent domains",
                "type": "collection"
              },
              {
                "title": "SiriKit intent migration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying the migrated intentâ€™s class name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/customintentmigratedappintent/intentclassname",
                    "title": "static var intentClassName: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/customintentmigratedappintent",
                "title": "CustomIntentMigratedAppIntent",
                "type": "protocol"
              },
              {
                "title": "Dependency management",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appdependencymanager/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appdependencymanager/add(key:dependency:)-1hqkg",
                    "title": "func add<Dependency>(key: AnyHashable?, dependency: @autoclosure () -> () throws -> Dependency)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appdependencymanager/add(key:dependency:)-2le3x",
                    "title": "func add<Dependency>(key: AnyHashable?, dependency: @autoclosure () -> Dependency)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appdependencymanager/add(key:dependency:)-gth5",
                    "title": "func add<Dependency>(key: AnyHashable?, dependency: () async throws -> Dependency)",
                    "type": "method"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appdependencymanager/shared",
                    "title": "static var shared: AppDependencyManager",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appdependencymanager/error/failedtoloaddependency(_:_:)",
                        "title": "case failedToLoadDependency(AnyHashable, Value.Type)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/appdependencymanager/error/failedtoretrievedependency(_:_:)",
                        "title": "case failedToRetrieveDependency(AnyHashable, Value.Type)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/appdependencymanager/error/incorrectdependencytype(_:_:_:)",
                        "title": "case incorrectDependencyType(AnyHashable, Value.Type, any Any.Type)",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appdependencymanager/error/errordescription",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/appdependencymanager/error/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/appdependencymanager/error/error-implementations",
                        "title": "Error Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/appdependencymanager/error/failurereason",
                            "title": "var failureReason: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/appdependencymanager/error/helpanchor",
                            "title": "var helpAnchor: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/appdependencymanager/error/recoverysuggestion",
                            "title": "var recoverySuggestion: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/appdependencymanager/error/localizederror-implementations",
                        "title": "LocalizedError Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/appdependencymanager/error",
                    "title": "AppDependencyManager.Error",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/appdependencymanager",
                "title": "AppDependencyManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appdependency/init(key:manager:)",
                    "title": "convenience init(key: AnyHashable?, manager: AppDependencyManager)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appdependency/init(key:manager:default:)-226je",
                    "title": "convenience init(key: AnyHashable?, manager: AppDependencyManager, default: () async throws -> Value)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appdependency/init(key:manager:default:)-wvhz",
                    "title": "convenience init(key: AnyHashable?, manager: AppDependencyManager, default: @autoclosure () -> Value)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appdependency/projectedvalue",
                    "title": "var projectedValue: AppDependency<Value>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appdependency/wrappedvalue",
                    "title": "var wrappedValue: Value",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appdependency",
                "title": "AppDependency",
                "type": "class"
              },
              {
                "title": "Supplementary content",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintentspackage/includedpackages",
                    "title": "static var includedPackages: [any AppIntentsPackage.Type]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appintentspackage",
                "title": "AppIntentsPackage",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating a description",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/init(_:categoryname:searchkeywords:)",
                    "title": "init(LocalizedStringResource, categoryName: LocalizedStringResource?, searchKeywords: [LocalizedStringResource])",
                    "type": "init"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/init(_:categoryname:searchkeywords:resultvaluename:)",
                    "title": "init(LocalizedStringResource, categoryName: LocalizedStringResource?, searchKeywords: [LocalizedStringResource], resultValueName: LocalizedStringResource?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/categoryname",
                    "title": "var categoryName: LocalizedStringResource?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/descriptiontext",
                    "title": "var descriptionText: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/resultvaluename",
                    "title": "var resultValueName: LocalizedStringResource?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/searchkeywords",
                    "title": "var searchKeywords: [LocalizedStringResource]",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/extendedgraphemeclusterliteraltype",
                    "title": "IntentDescription.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/stringliteraltype",
                    "title": "IntentDescription.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentdescription/unicodescalarliteraltype",
                    "title": "IntentDescription.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentdescription/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentdescription/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentdescription/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentdescription/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentdescription",
                "title": "IntentDescription",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a dialog",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/init(_:)",
                    "title": "init(LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: String.LocalizationValue.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/init(full:supporting:)",
                    "title": "init(full: LocalizedStringResource, supporting: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/init(full:supporting:systemimagename:)",
                    "title": "init(full: LocalizedStringResource, supporting: LocalizedStringResource, systemImageName: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/init(full:systemimagename:)",
                    "title": "init(full: LocalizedStringResource, systemImageName: String)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/extendedgraphemeclusterliteraltype",
                    "title": "IntentDialog.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/stringinterpolation",
                    "title": "IntentDialog.StringInterpolation",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/stringliteraltype",
                    "title": "IntentDialog.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentdialog/unicodescalarliteraltype",
                    "title": "IntentDialog.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentdialog/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentdialog/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentdialog/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentdialog/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentdialog",
                "title": "IntentDialog",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdeprecation/init(message:)",
                    "title": "init(message: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdeprecation/init(message:replacedby:)",
                    "title": "init(message: LocalizedStringResource, replacedBy: ReplacementIntent.Type?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentdeprecation/init(replacedby:)",
                    "title": "init(replacedBy: ReplacementIntent.Type)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdeprecation/message",
                    "title": "var message: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentdeprecation/replacedby",
                    "title": "var replacedBy: ReplacementIntent.Type?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/intentdeprecation",
                "title": "IntentDeprecation",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Subscripts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentprojection/subscript(dynamicmember:)",
                    "title": "subscript<Value>(dynamicMember _: KeyPath<Intent, Value>) -> Value.UnwrappedType",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/appintents/intentprojection",
                "title": "IntentProjection",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentsystemcontext/precisetimestamp",
                    "title": "var preciseTimestamp: Date?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/intentsystemcontext",
                "title": "IntentSystemContext",
                "type": "struct"
              },
              {
                "title": "Results",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the result value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/value-swift.property",
                    "title": "var value: Self.Value?",
                    "type": "property"
                  },
                  {
                    "title": "Communicating the result to the user",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/dialog",
                    "title": "Dialog",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/opensappintent",
                    "title": "OpensAppIntent",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/snippet",
                    "title": "Snippet",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/value-swift.associatedtype",
                    "title": "Value",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result()",
                    "title": "static func result() -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(actionbuttonintent:)",
                    "title": "static func result<Intent>(actionButtonIntent: Intent) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(actionbuttonintent:activityidentifier:)",
                    "title": "static func result<Intent>(actionButtonIntent: Intent, activityIdentifier: String) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(actionbuttonintent:activityidentifier:dialog:)",
                    "title": "static func result<Intent>(actionButtonIntent: Intent, activityIdentifier: String, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(actionbuttonintent:dialog:)",
                    "title": "static func result<Intent>(actionButtonIntent: Intent, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(content:)",
                    "title": "static func result<Content>(content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(dialog:)",
                    "title": "static func result(dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(dialog:content:)",
                    "title": "static func result<Content>(dialog: IntentDialog, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(dialog:view:)",
                    "title": "static func result<Content>(dialog: IntentDialog, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:)-8t8q8",
                    "title": "static func result(opensIntent: some AppIntent) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:content:)-2h5ux",
                    "title": "static func result<OpensAppIntent, Content>(opensIntent: OpensAppIntent, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:content:)-965vk",
                    "title": "static func result<Content>(opensIntent: some AppIntent, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:dialog:)-64q5v",
                    "title": "static func result(opensIntent: some AppIntent, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:dialog:content:)-2g81m",
                    "title": "static func result<OpensAppIntent, Content>(opensIntent: OpensAppIntent, dialog: IntentDialog, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:dialog:content:)-9kg66",
                    "title": "static func result<Content>(opensIntent: some AppIntent, dialog: IntentDialog, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:dialog:view:)-1w6b6",
                    "title": "static func result<Content>(opensIntent: some AppIntent, dialog: IntentDialog, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:dialog:view:)-8wkpg",
                    "title": "static func result<OpensAppIntent, Content>(opensIntent: OpensAppIntent, dialog: IntentDialog, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:view:)-4l1d4",
                    "title": "static func result<OpensAppIntent, Content>(opensIntent: OpensAppIntent, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(opensintent:view:)-5hm2s",
                    "title": "static func result<Content>(opensIntent: some AppIntent, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:)",
                    "title": "static func result<Value>(value: Value) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:actionbuttonintent:)",
                    "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:actionbuttonintent:activityidentifier:)",
                    "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent, activityIdentifier: String) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:actionbuttonintent:activityidentifier:dialog:)",
                    "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent, activityIdentifier: String, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:actionbuttonintent:dialog:)",
                    "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:content:)",
                    "title": "static func result<Value, Content>(value: Value, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:dialog:)",
                    "title": "static func result<Value>(value: Value, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:dialog:content:)",
                    "title": "static func result<Value, Content>(value: Value, dialog: IntentDialog, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:dialog:view:)",
                    "title": "static func result<Value, Content>(value: Value, dialog: IntentDialog, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:)-8v5op",
                    "title": "static func result<Value>(value: Value, opensIntent: some AppIntent) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:content:)-2f6ht",
                    "title": "static func result<Value, Content>(value: Value, opensIntent: some AppIntent, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:content:)-95tmb",
                    "title": "static func result<Value, OpensAppIntent, Content>(value: Value, opensIntent: OpensAppIntent, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:dialog:)-1eg3x",
                    "title": "static func result<Value>(value: Value, opensIntent: some AppIntent, dialog: IntentDialog) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:dialog:content:)-4iwem",
                    "title": "static func result<Value, OpensAppIntent, Content>(value: Value, opensIntent: OpensAppIntent, dialog: IntentDialog, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:dialog:content:)-mwwf",
                    "title": "static func result<Value, Content>(value: Value, opensIntent: some AppIntent, dialog: IntentDialog, content: () -> Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:dialog:view:)-5sg4p",
                    "title": "static func result<Value, OpensAppIntent, Content>(value: Value, opensIntent: OpensAppIntent, dialog: IntentDialog, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:dialog:view:)-88j6a",
                    "title": "static func result<Value, Content>(value: Value, opensIntent: some AppIntent, dialog: IntentDialog, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:view:)-12wbo",
                    "title": "static func result<Value, Content>(value: Value, opensIntent: some AppIntent, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:opensintent:view:)-5z5t0",
                    "title": "static func result<Value, OpensAppIntent, Content>(value: Value, opensIntent: OpensAppIntent, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(value:view:)",
                    "title": "static func result<Value, Content>(value: Value, view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentresult/result(view:)",
                    "title": "static func result<Content>(view: Content) -> Self",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentresult/result(opensintent:)-6l7s5",
                        "title": "static func result<OpensAppIntent>(opensIntent: OpensAppIntent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresult/result(opensintent:dialog:)-925mk",
                        "title": "static func result<OpensAppIntent>(opensIntent: OpensAppIntent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresult/result(value:opensintent:)-1mbbt",
                        "title": "static func result<Value, OpensAppIntent>(value: Value, opensIntent: OpensAppIntent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresult/result(value:opensintent:dialog:)-2j58s",
                        "title": "static func result<Value, OpensAppIntent>(value: Value, opensIntent: OpensAppIntent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentresult/intentresult-implementations",
                    "title": "IntentResult Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentresult",
                "title": "IntentResult",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentresultcontainer/activityidentifier",
                    "title": "var activityIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentresultcontainer/dialog",
                    "title": "var dialog: IntentDialog?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentresultcontainer/opensintent",
                    "title": "var opensIntent: OpensAppIntent?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentresultcontainer/value",
                    "title": "var value: Value?",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result()",
                        "title": "static func result() -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(actionbuttonintent:)",
                        "title": "static func result<Intent>(actionButtonIntent: Intent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(actionbuttonintent:activityidentifier:)",
                        "title": "static func result<Intent>(actionButtonIntent: Intent, activityIdentifier: String) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(actionbuttonintent:activityidentifier:dialog:)",
                        "title": "static func result<Intent>(actionButtonIntent: Intent, activityIdentifier: String, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(actionbuttonintent:dialog:)",
                        "title": "static func result<Intent>(actionButtonIntent: Intent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(dialog:)",
                        "title": "static func result(dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(opensintent:)-2an32",
                        "title": "static func result<OpensAppIntent>(opensIntent: OpensAppIntent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(opensintent:)-7k5p4",
                        "title": "static func result(opensIntent: some AppIntent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(opensintent:dialog:)-4znom",
                        "title": "static func result(opensIntent: some AppIntent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(opensintent:dialog:)-6wf55",
                        "title": "static func result<OpensAppIntent>(opensIntent: OpensAppIntent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:)",
                        "title": "static func result<Value>(value: Value) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:actionbuttonintent:)",
                        "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:actionbuttonintent:activityidentifier:)",
                        "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent, activityIdentifier: String) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:actionbuttonintent:activityidentifier:dialog:)",
                        "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent, activityIdentifier: String, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:actionbuttonintent:dialog:)",
                        "title": "static func result<Value, Intent>(value: Value, actionButtonIntent: Intent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:dialog:)",
                        "title": "static func result<Value>(value: Value, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:opensintent:)-40le",
                        "title": "static func result<Value>(value: Value, opensIntent: some AppIntent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:opensintent:)-8g6rp",
                        "title": "static func result<Value, OpensAppIntent>(value: Value, opensIntent: OpensAppIntent) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:opensintent:dialog:)-6he5w",
                        "title": "static func result<Value>(value: Value, opensIntent: some AppIntent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentresultcontainer/result(value:opensintent:dialog:)-7ghvc",
                        "title": "static func result<Value, OpensAppIntent>(value: Value, opensIntent: OpensAppIntent, dialog: IntentDialog) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentresultcontainer/intentresult-implementations",
                    "title": "IntentResult Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentresultcontainer",
                "title": "IntentResultContainer",
                "type": "struct"
              },
              {
                "path": "/documentation/appintents/opensintent",
                "title": "OpensIntent",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/providesdialog",
                "title": "ProvidesDialog",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/returnsvalue",
                "title": "ReturnsValue",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/showssnippetview",
                "title": "ShowsSnippetView",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/resultscollection/result",
                    "title": "Result",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/resultscollection/items",
                    "title": "var items: [Self.Result.ValueType]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/resultscollection/promptlabel",
                    "title": "var promptLabel: LocalizedStringResource?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/resultscollection/usesindexedcollation",
                    "title": "var usesIndexedCollation: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/resultscollection/empty",
                    "title": "static var empty: Self",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/resultscollection",
                "title": "ResultsCollection",
                "type": "protocol"
              },
              {
                "title": "Extensions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/appintentsextension",
                "title": "AppIntentsExtension",
                "type": "protocol"
              }
            ],
            "path": "/documentation/appintents/app-intents",
            "title": "App intents",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Donation management",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the donation manager",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmanager/shared",
                    "title": "static var shared: IntentDonationManager",
                    "type": "property"
                  },
                  {
                    "title": "Deleting previous donations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmanager/deletedonations(matching:)",
                    "title": "func deleteDonations(matching: IntentDonationMatchingPredicate) async throws -> [IntentDonationIdentifier]",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmanager/donate(intent:)-57fg4",
                    "title": "func donate(intent: some AppIntent) -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmanager/donate(intent:)-hly2",
                    "title": "func donate(intent: some AppIntent) async throws -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmanager/donate(intent:result:)-1ltmi",
                    "title": "func donate(intent: some AppIntent, result: some IntentResult) async throws -> IntentDonationIdentifier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmanager/donate(intent:result:)-7ztce",
                    "title": "func donate(intent: some AppIntent, result: some IntentResult) -> IntentDonationIdentifier",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/intentdonationmanager",
                "title": "IntentDonationManager",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating an identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationidentifier/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Encoding the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationidentifier/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Comparing identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationidentifier/==(_:_:)",
                    "title": "static func == (IntentDonationIdentifier, IntentDonationIdentifier) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationidentifier/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationidentifier/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentdonationidentifier/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intentdonationidentifier/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentdonationidentifier",
                "title": "IntentDonationIdentifier",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a predicate",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmatchingpredicate/donationidentifier(_:)",
                    "title": "static func donationIdentifier(IntentDonationIdentifier) -> IntentDonationMatchingPredicate",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmatchingpredicate/entityidentifier(_:)",
                    "title": "static func entityIdentifier(EntityIdentifier) -> IntentDonationMatchingPredicate",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentdonationmatchingpredicate/intenttype(_:entityidentifier:)",
                    "title": "static func intentType(any AppIntent.Type, entityIdentifier: EntityIdentifier?) -> IntentDonationMatchingPredicate",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/intentdonationmatchingpredicate",
                "title": "IntentDonationMatchingPredicate",
                "type": "struct"
              },
              {
                "title": "Intent predictions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Providing predictions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/predictableintent/predictionconfiguration",
                    "title": "static var predictionConfiguration: Self.Prediction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Associated Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionconfiguration/intent",
                        "title": "Intent",
                        "type": "associatedtype"
                      }
                    ],
                    "path": "/documentation/appintents/intentpredictionconfiguration",
                    "title": "IntentPredictionConfiguration",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Building predictions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:)",
                        "title": "static func buildBlock<A0>(A0) -> A0",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:)",
                        "title": "static func buildBlock<A0, A1>(A0, A1) -> TupleIntentPrediction<A0.Intent, (A0, A1)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2>(A0, A1, A2) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/tupleintentprediction",
                        "title": "TupleIntentPrediction",
                        "type": "struct"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3>(A0, A1, A2, A3) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4>(A0, A1, A2, A3, A4) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5>(A0, A1, A2, A3, A4, A5) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6>(A0, A1, A2, A3, A4, A5, A6) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7>(A0, A1, A2, A3, A4, A5, A6, A7) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8>(A0, A1, A2, A3, A4, A5, A6, A7, A8) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10>(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11>(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12>(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13>(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14>(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -> TupleIntentPrediction<A0.Intent, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentpredictionsbuilder/buildexpression(_:)",
                        "title": "static func buildExpression<A0>(A0) -> A0",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentpredictionsbuilder",
                    "title": "IntentPredictionsBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/predictableintent/prediction",
                    "title": "Prediction",
                    "type": "associatedtype"
                  }
                ],
                "path": "/documentation/appintents/predictableintent",
                "title": "PredictableIntent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating a prediction",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(displayrepresentation:)",
                    "title": "init(displayRepresentation: () -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-1uup3",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-1zdkp",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, K10>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-2ct6i",
                    "title": "init<V0, V1, V2, V3, V4, V5, P0, P1, P2, P3, P4, P5, K0, K1, K2, K3, K4, K5>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-2lf5t",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11, K12, K13, K14>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-39wfu",
                    "title": "init<V0, V1, P0, P1, K0, K1>(parameters: T, displayRepresentation: (V0, V1) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-3wlt7",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-5f3e3",
                    "title": "init<V0, P0>(parameters: T, displayRepresentation: (V0) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-620xt",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11, K12>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-6i80a",
                    "title": "init<V0, V1, V2, V3, V4, P0, P1, P2, P3, P4, K0, K1, K2, K3, K4>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-781f1",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, P0, P1, P2, P3, P4, P5, P6, P7, K0, K1, K2, K3, K4, K5, K6, K7>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-8b851",
                    "title": "init<V0, V1, V2, P0, P1, P2, K0, K1, K2>(parameters: T, displayRepresentation: (V0, V1, V2) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-9ibp3",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, P0, P1, P2, P3, P4, P5, P6, K0, K1, K2, K3, K4, K5, K6>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-alik",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, P0, P1, P2, P3, P4, P5, P6, P7, P8, K0, K1, K2, K3, K4, K5, K6, K7, K8>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-n8dp",
                    "title": "init<V0, V1, V2, V3, P0, P1, P2, P3, K0, K1, K2, K3>(parameters: T, displayRepresentation: (V0, V1, V2, V3) -> DisplayRepresentation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentprediction/init(parameters:displayrepresentation:)-te8o",
                    "title": "init<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11, K12, K13>(parameters: T, displayRepresentation: (V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> DisplayRepresentation)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/intentprediction",
                "title": "IntentPrediction",
                "type": "struct"
              },
              {
                "title": "Intent relevancy",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/relevantintent/init(_:widgetkind:relevance:)",
                    "title": "init<IntentType>(IntentType, widgetKind: String, relevance: RelevantContext)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/relevantintent/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/relevantintent/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/relevantintent",
                "title": "RelevantIntent",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/relevantintentmanager/updaterelevantintents(_:)",
                    "title": "func updateRelevantIntents([RelevantIntent]) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/relevantintentmanager/shared",
                    "title": "static let shared: RelevantIntentManager",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/relevantintentmanager",
                "title": "RelevantIntentManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/fitnesscondition/activityringsincomplete",
                        "title": "static var activityRingsIncomplete: RelevantContext.FitnessCondition",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/fitnesscondition/workoutactive",
                        "title": "static var workoutActive: RelevantContext.FitnessCondition",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/relevantcontext/fitnesscondition",
                    "title": "RelevantContext.FitnessCondition",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/headphonescondition/connected",
                        "title": "static var connected: RelevantContext.HeadphonesCondition",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/relevantcontext/headphonescondition",
                    "title": "RelevantContext.HeadphonesCondition",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/inferredlocation/commute",
                        "title": "static var commute: RelevantContext.InferredLocation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/inferredlocation/home",
                        "title": "static var home: RelevantContext.InferredLocation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/inferredlocation/school",
                        "title": "static var school: RelevantContext.InferredLocation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/inferredlocation/work",
                        "title": "static var work: RelevantContext.InferredLocation",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/relevantcontext/inferredlocation",
                    "title": "RelevantContext.InferredLocation",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/sleepcondition/bedtime",
                        "title": "static var bedtime: RelevantContext.SleepCondition",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/relevantcontext/sleepcondition/wakeup",
                        "title": "static var wakeup: RelevantContext.SleepCondition",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/relevantcontext/sleepcondition",
                    "title": "RelevantContext.SleepCondition",
                    "type": "struct"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/date(_:)",
                    "title": "static func date(Date) -> RelevantContext",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/date(from:to:)",
                    "title": "static func date(from: Date, to: Date) -> RelevantContext",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/fitness(_:)",
                    "title": "static func fitness(RelevantContext.FitnessCondition) -> RelevantContext",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/hardware(headphones:)",
                    "title": "static func hardware(headphones: RelevantContext.HeadphonesCondition) -> RelevantContext",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/location(_:)",
                    "title": "static func location(CLRegion) -> RelevantContext",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/location(inferred:)",
                    "title": "static func location(inferred: RelevantContext.InferredLocation) -> RelevantContext",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/relevantcontext/sleep(_:)",
                    "title": "static func sleep(RelevantContext.SleepCondition) -> RelevantContext",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/relevantcontext",
                "title": "RelevantContext",
                "type": "struct"
              }
            ],
            "path": "/documentation/appintents/intent-discovery",
            "title": "Intent discovery",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "App Shortcut management",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Providing App Shortcuts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/appshortcuts",
                    "title": "static var appShortcuts: [AppShortcut]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildblock()",
                        "title": "static func buildBlock() -> [AppShortcut]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildblock(_:)-110ow",
                        "title": "static func buildBlock(AppShortcut...) -> [AppShortcut]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildblock(_:)-8xfbe",
                        "title": "static func buildBlock([AppShortcut]...) -> [AppShortcut]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildexpression(_:)-31qci",
                        "title": "static func buildExpression(AppShortcut) -> AppShortcut",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildexpression(_:)-9u47j",
                        "title": "static func buildExpression(AppShortcut) -> [AppShortcut]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildlimitedavailability(_:)",
                        "title": "static func buildLimitedAvailability([AppShortcut]) -> any _AppShortcutsContentMarker & _LimitedAvailabilityAppShortcutsContentMarker",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildoptional(_:)-3pbr9",
                        "title": "static func buildOptional((any _AppShortcutsContentEmitterMarker & _AppShortcutsContentMarker & _LimitedAvailabilityAppShortcutsContentMarker)?) -> [AppShortcut]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutsbuilder/buildoptional(_:)-4urzx",
                        "title": "static func buildOptional((any _AppShortcutsContentMarker & _LimitedAvailabilityAppShortcutsContentMarker)?) -> [AppShortcut]",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutsbuilder",
                    "title": "AppShortcutsBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring shortcut tiles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/shortcuttilecolor",
                    "title": "static var shortcutTileColor: ShortcutTileColor",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the tile colors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/blue",
                        "title": "case blue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/grape",
                        "title": "case grape",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/grayblue",
                        "title": "case grayBlue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/graybrown",
                        "title": "case grayBrown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/graygreen",
                        "title": "case grayGreen",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/lightblue",
                        "title": "case lightBlue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/lime",
                        "title": "case lime",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/navy",
                        "title": "case navy",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/orange",
                        "title": "case orange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/pink",
                        "title": "case pink",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/purple",
                        "title": "case purple",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/red",
                        "title": "case red",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/tangerine",
                        "title": "case tangerine",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/teal",
                        "title": "case teal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/yellow",
                        "title": "case yellow",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/==(_:_:)",
                        "title": "static func == (ShortcutTileColor, ShortcutTileColor) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/shortcuttilecolor/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/shortcuttilecolor/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/shortcuttilecolor",
                    "title": "ShortcutTileColor",
                    "type": "enum"
                  },
                  {
                    "title": "Updating stored parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/updateappshortcutparameters()",
                    "title": "static func updateAppShortcutParameters()",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/optionscollection",
                    "title": "AppShortcutsProvider.OptionsCollection",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/parameterpresentation",
                    "title": "AppShortcutsProvider.ParameterPresentation",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/summary",
                    "title": "AppShortcutsProvider.Summary",
                    "type": "typealias"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutsprovider/title",
                    "title": "AppShortcutsProvider.Title",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsprovider/negativephrases",
                    "title": "static var negativePhrases: NegativeAppShortcutPhrases",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appshortcutsprovider",
                "title": "AppShortcutsProvider",
                "type": "protocol"
              },
              {
                "title": "App Shortcut definition",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an app shortcut",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcut/init(intent:phrases:shorttitle:systemimagename:)-8yntq",
                    "title": "init<Intent>(intent: Intent, phrases: [AppShortcutPhrase<Intent>], shortTitle: LocalizedStringResource, systemImageName: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appshortcut/init(intent:phrases:shorttitle:systemimagename:parameterpresentation:)",
                    "title": "init<Intent, Value, Parameter, ParameterKeyPath>(intent: Intent, phrases: [AppShortcutPhrase<Intent>], shortTitle: LocalizedStringResource, systemImageName: String, parameterPresentation: AppShortcutParameterPresentation<Intent, Value, Parameter, ParameterKeyPath>)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcut/init(intent:phrases:shorttitle:systemimagename:)-2hk1x",
                    "title": "init<Intent>(intent: Intent, phrases: [AppShortcutPhrase<Intent>], shortTitle: LocalizedStringResource?, systemImageName: String?)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/appshortcut",
                "title": "AppShortcut",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a shortcut phrase",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutphrase/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutphrase/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutphrase/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: AppShortcutPhrase<Intent>.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a string interpolation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Appending values to the string",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/stringinterpolation/appendinterpolation(_:)-47gqg",
                        "title": "func appendInterpolation(AppShortcutPhraseToken)",
                        "type": "method"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/stringinterpolation/appendinterpolation(_:)-5kcab",
                        "title": "func appendInterpolation<Value, Subject>(Subject)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/stringinterpolation/stringliteraltype",
                        "title": "AppShortcutPhrase.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutphrase/stringinterpolation",
                    "title": "AppShortcutPhrase.StringInterpolation",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the tokens",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrasetoken/applicationname",
                        "title": "case applicationName",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrasetoken/==(_:_:)",
                        "title": "static func == (AppShortcutPhraseToken, AppShortcutPhraseToken) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrasetoken/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrasetoken/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/appshortcutphrasetoken/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/appshortcutphrasetoken/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutphrasetoken",
                    "title": "AppShortcutPhraseToken",
                    "type": "enum"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutphrase/extendedgraphemeclusterliteraltype",
                    "title": "AppShortcutPhrase.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutphrase/stringliteraltype",
                    "title": "AppShortcutPhrase.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutphrase/unicodescalarliteraltype",
                    "title": "AppShortcutPhrase.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutphrase/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutphrase/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutphrase/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/appshortcutphrase",
                "title": "AppShortcutPhrase",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/negativeappshortcutphrase/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/negativeappshortcutphrase/stringinterpolation/appendinterpolation(_:)",
                        "title": "func appendInterpolation(AppShortcutPhraseToken)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/negativeappshortcutphrase/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/negativeappshortcutphrase/stringinterpolation/stringliteraltype",
                        "title": "NegativeAppShortcutPhrase.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/negativeappshortcutphrase/stringinterpolation",
                    "title": "NegativeAppShortcutPhrase.StringInterpolation",
                    "type": "struct"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrase/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrase/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: NegativeAppShortcutPhrase.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrase/init(stringliteral:)",
                    "title": "init(stringLiteral: StringLiteralType)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrase/extendedgraphemeclusterliteraltype",
                    "title": "NegativeAppShortcutPhrase.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrase/stringliteraltype",
                    "title": "NegativeAppShortcutPhrase.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrase/unicodescalarliteraltype",
                    "title": "NegativeAppShortcutPhrase.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/negativeappshortcutphrase/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/negativeappshortcutphrase/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/negativeappshortcutphrase/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/negativeappshortcutphrase/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/negativeappshortcutphrase",
                "title": "NegativeAppShortcutPhrase",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/negativeappshortcutphrases/init(phrases:)",
                    "title": "init(phrases: [NegativeAppShortcutPhrase])",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/negativeappshortcutphrases",
                "title": "NegativeAppShortcutPhrases",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/cfbundleicons/cfbundleprimaryicon/nsappiconactiontintcolorname",
                "title": "NSAppIconActionTintColorName",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/cfbundleicons/cfbundleprimaryicon/nsappiconcomplementingcolornames",
                "title": "NSAppIconComplementingColorNames",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildblock()",
                    "title": "static func buildBlock() -> [AppShortcut]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildblock(_:)-110ow",
                    "title": "static func buildBlock(AppShortcut...) -> [AppShortcut]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildblock(_:)-8xfbe",
                    "title": "static func buildBlock([AppShortcut]...) -> [AppShortcut]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildexpression(_:)-31qci",
                    "title": "static func buildExpression(AppShortcut) -> AppShortcut",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildexpression(_:)-9u47j",
                    "title": "static func buildExpression(AppShortcut) -> [AppShortcut]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildlimitedavailability(_:)",
                    "title": "static func buildLimitedAvailability([AppShortcut]) -> any _AppShortcutsContentMarker & _LimitedAvailabilityAppShortcutsContentMarker",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildoptional(_:)-3pbr9",
                    "title": "static func buildOptional((any _AppShortcutsContentEmitterMarker & _AppShortcutsContentMarker & _LimitedAvailabilityAppShortcutsContentMarker)?) -> [AppShortcut]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutsbuilder/buildoptional(_:)-4urzx",
                    "title": "static func buildOptional((any _AppShortcutsContentMarker & _LimitedAvailabilityAppShortcutsContentMarker)?) -> [AppShortcut]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/appshortcutsbuilder",
                "title": "AppShortcutsBuilder",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Getting the tile colors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/blue",
                    "title": "case blue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/grape",
                    "title": "case grape",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/grayblue",
                    "title": "case grayBlue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/graybrown",
                    "title": "case grayBrown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/graygreen",
                    "title": "case grayGreen",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/lightblue",
                    "title": "case lightBlue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/lime",
                    "title": "case lime",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/navy",
                    "title": "case navy",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/orange",
                    "title": "case orange",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/pink",
                    "title": "case pink",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/purple",
                    "title": "case purple",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/red",
                    "title": "case red",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/tangerine",
                    "title": "case tangerine",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/teal",
                    "title": "case teal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/yellow",
                    "title": "case yellow",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/==(_:_:)",
                    "title": "static func == (ShortcutTileColor, ShortcutTileColor) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcuttilecolor/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/shortcuttilecolor/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/shortcuttilecolor/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/shortcuttilecolor",
                "title": "ShortcutTileColor",
                "type": "enum"
              },
              {
                "title": "App Shortcut options",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollection/init(_:title:systemimagename:)",
                    "title": "init(Provider, title: LocalizedStringResource, systemImageName: String?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollection/dynamicoptionsprovider",
                    "title": "let dynamicOptionsProvider: Provider",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollection/systemimagename",
                    "title": "let systemImageName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollection/title",
                    "title": "let title: LocalizedStringResource",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appshortcutoptionscollection",
                "title": "AppShortcutOptionsCollection",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionprotocol/provider",
                    "title": "Provider",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionprotocol/dynamicoptionsprovider",
                    "title": "var dynamicOptionsProvider: Self.Provider",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionprotocol/systemimagename",
                    "title": "var systemImageName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionprotocol/title",
                    "title": "var title: LocalizedStringResource",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appshortcutoptionscollectionprotocol",
                "title": "AppShortcutOptionsCollectionProtocol",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecification/value",
                    "title": "Value",
                    "type": "associatedtype"
                  }
                ],
                "path": "/documentation/appintents/appshortcutoptionscollectionspecification",
                "title": "AppShortcutOptionsCollectionSpecification",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:)",
                    "title": "static func buildBlock<C0>(C0) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:)",
                    "title": "static func buildBlock<C0, C1>(C0, C1) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2>(C0, C1, C2) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14) -> some AppShortcutOptionsCollectionSpecification<Value>\n",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/appshortcutoptionscollectionspecificationbuilder",
                "title": "AppShortcutOptionsCollectionSpecificationBuilder",
                "type": "enum"
              },
              {
                "title": "App Shortcut parameter presentation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentation/init(for:summary:optionscollections:)",
                    "title": "init(for: ParameterKeyPath, summary: AppShortcutParameterPresentationSummary<Intent, Value, Parameter, ParameterKeyPath>, optionsCollections: () -> some AppShortcutOptionsCollectionSpecification<Value.UnwrappedType>)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/appshortcutparameterpresentation",
                "title": "AppShortcutParameterPresentation",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummary/init(_:table:)",
                    "title": "init(AppShortcutParameterPresentationSummaryString<Intent, Value, Parameter, ParameterKeyPath>, table: StaticString?)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/appshortcutparameterpresentationsummary",
                "title": "AppShortcutParameterPresentationSummary",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/stringinterpolation/appendinterpolation(_:)",
                        "title": "func appendInterpolation(ParameterKeyPath)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/stringinterpolation/stringliteraltype",
                        "title": "AppShortcutParameterPresentationSummaryString.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/stringinterpolation",
                    "title": "AppShortcutParameterPresentationSummaryString.StringInterpolation",
                    "type": "struct"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: AppShortcutParameterPresentationSummaryString<Intent, Value, Parameter, ParameterKeyPath>.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/extendedgraphemeclusterliteraltype",
                    "title": "AppShortcutParameterPresentationSummaryString.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/stringliteraltype",
                    "title": "AppShortcutParameterPresentationSummaryString.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/unicodescalarliteraltype",
                    "title": "AppShortcutParameterPresentationSummaryString.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/appshortcutparameterpresentationsummarystring",
                "title": "AppShortcutParameterPresentationSummaryString",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitle/init(specific:generic:table:)",
                    "title": "init(specific: AppShortcutParameterPresentationTitleString<Intent, Value, Parameter, ParameterKeyPath>, generic: StaticString, table: StaticString?)",
                    "type": "init"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/appintents/appshortcutparameterpresentationtitle",
                "title": "AppShortcutParameterPresentationTitle",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/stringinterpolation/appendinterpolation(_:)",
                        "title": "func appendInterpolation(ParameterKeyPath)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/stringinterpolation/stringliteraltype",
                        "title": "AppShortcutParameterPresentationTitleString.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/stringinterpolation",
                    "title": "AppShortcutParameterPresentationTitleString.StringInterpolation",
                    "type": "struct"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: AppShortcutParameterPresentationTitleString<Intent, Value, Parameter, ParameterKeyPath>.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/extendedgraphemeclusterliteraltype",
                    "title": "AppShortcutParameterPresentationTitleString.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/stringliteraltype",
                    "title": "AppShortcutParameterPresentationTitleString.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/unicodescalarliteraltype",
                    "title": "AppShortcutParameterPresentationTitleString.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/appintents/appshortcutparameterpresentationtitlestring",
                "title": "AppShortcutParameterPresentationTitleString",
                "type": "struct"
              },
              {
                "title": "Buttons",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the button",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutsuibutton/init(style:)",
                    "title": "init(style: ShortcutsLinkStyle)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the button style",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutsuibutton/style",
                    "title": "var style: ShortcutsLinkStyle",
                    "type": "property"
                  },
                  {
                    "title": "Configuring additional actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutsuibutton/addtarget(_:action:for:)",
                    "title": "func addTarget(Any?, action: Selector, for: UIControl.Event)",
                    "type": "method"
                  },
                  {
                    "title": "Resizing the button",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutsuibutton/sizethatfits(_:)",
                    "title": "func sizeThatFits(CGSize) -> CGSize",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/shortcutsuibutton",
                "title": "ShortcutsUIButton",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslink/init(action:)",
                    "title": "init(action: () -> Void)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslink/body-swift.property",
                    "title": "var body: some View",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslink/body-swift.typealias",
                    "title": "ShortcutsLink.Body",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accentcolor(_:)",
                        "title": "func accentColor(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(activationpoint:)-4ly8n",
                        "title": "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(activationpoint:)-99nld",
                        "title": "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(addtraits:)",
                        "title": "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(hidden:)",
                        "title": "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(hint:)",
                        "title": "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(identifier:)",
                        "title": "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(inputlabels:)",
                        "title": "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(label:)",
                        "title": "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(removetraits:)",
                        "title": "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(selectionidentifier:)",
                        "title": "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(sortpriority:)",
                        "title": "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibility(value:)",
                        "title": "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(_:_:)",
                        "title": "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(_:intent:)",
                        "title": "func accessibilityAction<I>(AccessibilityActionKind, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(action:label:)",
                        "title": "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(intent:label:)",
                        "title": "func accessibilityAction<I, Label>(intent: I, label: () -> Label) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(named:_:)-4fqf2",
                        "title": "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(named:_:)-98uqi",
                        "title": "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(named:_:)-r43d",
                        "title": "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(named:intent:)-28544",
                        "title": "func accessibilityAction<S, I>(named: S, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(named:intent:)-867fa",
                        "title": "func accessibilityAction<I>(named: LocalizedStringKey, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaction(named:intent:)-8jldn",
                        "title": "func accessibilityAction<I>(named: Text, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityactions(_:)",
                        "title": "func accessibilityActions<Content>(() -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityactions(category:_:)",
                        "title": "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityactivationpoint(_:)-17i3o",
                        "title": "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityactivationpoint(_:)-2kbzb",
                        "title": "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityactivationpoint(_:isenabled:)-77832",
                        "title": "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityactivationpoint(_:isenabled:)-8nmj0",
                        "title": "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityaddtraits(_:)",
                        "title": "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityadjustableaction(_:)",
                        "title": "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitychartdescriptor(_:)",
                        "title": "func accessibilityChartDescriptor<R>(R) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitychildren(children:)",
                        "title": "func accessibilityChildren<V>(children: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-5fyx4",
                        "title": "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-71nyz",
                        "title": "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-89s4u",
                        "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-8j83c",
                        "title": "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-9grq4",
                        "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-9pmyq",
                        "title": "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-ajnf",
                        "title": "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/accessibilitycustomcontent(_:_:importance:)-vryw",
                        "title": "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydirecttouch(_:options:)",
                        "title": "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydragpoint(_:description:)-1leck",
                        "title": "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydragpoint(_:description:)-1u5m0",
                        "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydragpoint(_:description:)-54hcs",
                        "title": "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydragpoint(_:description:isenabled:)-189u3",
                        "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydragpoint(_:description:isenabled:)-5njt8",
                        "title": "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydragpoint(_:description:isenabled:)-9pt3c",
                        "title": "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydroppoint(_:description:)-3lnlt",
                        "title": "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydroppoint(_:description:)-7u8dq",
                        "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydroppoint(_:description:)-7vnvh",
                        "title": "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydroppoint(_:description:isenabled:)-34ftt",
                        "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydroppoint(_:description:isenabled:)-4x6lb",
                        "title": "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitydroppoint(_:description:isenabled:)-v0xr",
                        "title": "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityelement(children:)",
                        "title": "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityfocused(_:)",
                        "title": "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityfocused(_:equals:)",
                        "title": "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityheading(_:)",
                        "title": "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhidden(_:)",
                        "title": "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhidden(_:isenabled:)",
                        "title": "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhint(_:)-4offr",
                        "title": "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhint(_:)-61chm",
                        "title": "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhint(_:)-8b3m",
                        "title": "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhint(_:isenabled:)-5rq02",
                        "title": "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhint(_:isenabled:)-69wwy",
                        "title": "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityhint(_:isenabled:)-6qcf9",
                        "title": "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityidentifier(_:)",
                        "title": "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityidentifier(_:isenabled:)",
                        "title": "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityignoresinvertcolors(_:)",
                        "title": "func accessibilityIgnoresInvertColors(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityinputlabels(_:)-5l7xv",
                        "title": "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityinputlabels(_:)-63m6f",
                        "title": "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityinputlabels(_:)-9sprg",
                        "title": "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityinputlabels(_:isenabled:)-1d1x8",
                        "title": "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityinputlabels(_:isenabled:)-4wm57",
                        "title": "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityinputlabels(_:isenabled:)-5l8e3",
                        "title": "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(_:)-1taf3",
                        "title": "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(_:)-1xc1a",
                        "title": "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(_:)-2vnrg",
                        "title": "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(_:isenabled:)-2m77u",
                        "title": "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(_:isenabled:)-359nu",
                        "title": "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(_:isenabled:)-9sd8k",
                        "title": "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabel(content:)",
                        "title": "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylabeledpair(role:id:in:)",
                        "title": "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitylinkedgroup(id:in:)",
                        "title": "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityremovetraits(_:)",
                        "title": "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrepresentation(representation:)",
                        "title": "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrespondstouserinteraction(_:)",
                        "title": "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrespondstouserinteraction(_:isenabled:)",
                        "title": "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:)-1bbab",
                        "title": "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:)-3ztdd",
                        "title": "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:)-50h30",
                        "title": "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:)-9u08x",
                        "title": "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entryid:entrylabel:)-53k89",
                        "title": "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entryid:entrylabel:)-756rn",
                        "title": "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entryid:entrylabel:)-7bhaz",
                        "title": "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entryid:entrylabel:)-8q75m",
                        "title": "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entrylabel:)-10j83",
                        "title": "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entrylabel:)-9mth9",
                        "title": "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entrylabel:)-9qzuh",
                        "title": "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:entries:entrylabel:)-utdt",
                        "title": "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:textranges:)-2mep8",
                        "title": "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:textranges:)-5l3al",
                        "title": "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:textranges:)-8gmf2",
                        "title": "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotor(_:textranges:)-8mglc",
                        "title": "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityrotorentry(id:in:)",
                        "title": "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityscrollaction(_:)",
                        "title": "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityshowslargecontentviewer()",
                        "title": "func accessibilityShowsLargeContentViewer() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityshowslargecontentviewer(_:)",
                        "title": "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitysortpriority(_:)",
                        "title": "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilitytextcontenttype(_:)",
                        "title": "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityvalue(_:)-6jvrt",
                        "title": "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityvalue(_:)-8poju",
                        "title": "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityvalue(_:)-o1oe",
                        "title": "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityvalue(_:isenabled:)-2pg5f",
                        "title": "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityvalue(_:isenabled:)-80uvm",
                        "title": "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityvalue(_:isenabled:)-8lpmp",
                        "title": "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/accessibilityzoomaction(_:)",
                        "title": "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/actionsheet(ispresented:content:)",
                        "title": "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/actionsheet(item:content:)",
                        "title": "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:actions:)-2dqe4",
                        "title": "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:actions:)-7wqgn",
                        "title": "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:actions:)-qr13",
                        "title": "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:actions:message:)-22eqj",
                        "title": "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:actions:message:)-2yiua",
                        "title": "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:actions:message:)-7lfei",
                        "title": "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:presenting:actions:)-13mxn",
                        "title": "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:presenting:actions:)-36epo",
                        "title": "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:presenting:actions:)-81nqk",
                        "title": "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:presenting:actions:message:)-1f51p",
                        "title": "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:presenting:actions:message:)-2lob",
                        "title": "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(_:ispresented:presenting:actions:message:)-81vvt",
                        "title": "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(ispresented:content:)",
                        "title": "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(ispresented:error:actions:)",
                        "title": "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(ispresented:error:actions:message:)",
                        "title": "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alert(item:content:)",
                        "title": "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alignmentguide(_:computevalue:)-55stq",
                        "title": "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alignmentguide(_:computevalue:)-r8ti",
                        "title": "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/alloweddynamicrange(_:)",
                        "title": "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/allowshittesting(_:)",
                        "title": "func allowsHitTesting(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/allowstightening(_:)",
                        "title": "func allowsTightening(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/allowswindowactivationevents(_:)",
                        "title": "func allowsWindowActivationEvents(Bool?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/anchorpreference(key:value:transform:)",
                        "title": "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/animation(_:)",
                        "title": "func animation(Animation?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/animation(_:body:)",
                        "title": "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/animation(_:value:)",
                        "title": "func animation<V>(Animation?, value: V) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/appentityidentifier(_:)",
                        "title": "func appEntityIdentifier(EntityIdentifier?) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/appentityidentifier(forselectiontype:identifier:)",
                        "title": "func appEntityIdentifier<I>(forSelectionType: I.Type, identifier: (I) -> EntityIdentifier?) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/appentityuielements(_:)",
                        "title": "func appEntityUIElements((AppEntityUIElementsContext) -> [AppEntityUIElement]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/aspectratio(_:contentmode:)-5ybt2",
                        "title": "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/aspectratio(_:contentmode:)-xqmx",
                        "title": "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/autocapitalization(_:)",
                        "title": "func autocapitalization(UITextAutocapitalizationType) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/autocorrectiondisabled(_:)",
                        "title": "func autocorrectionDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(_:alignment:)",
                        "title": "func background<Background>(Background, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(_:ignoressafeareaedges:)",
                        "title": "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(_:in:fillstyle:)-42iz8",
                        "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(_:in:fillstyle:)-7zq0c",
                        "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(alignment:content:)",
                        "title": "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(ignoressafeareaedges:)",
                        "title": "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(in:fillstyle:)-3rged",
                        "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/background(in:fillstyle:)-94liv",
                        "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/backgroundpreferencevalue(_:_:)",
                        "title": "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/backgroundpreferencevalue(_:alignment:_:)",
                        "title": "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/backgroundstyle(_:)",
                        "title": "func backgroundStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/badge(_:)-43zjv",
                        "title": "func badge(LocalizedStringKey?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/badge(_:)-5hnb",
                        "title": "func badge(Int) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/badge(_:)-7uk2g",
                        "title": "func badge<S>(S?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/badge(_:)-9mvc6",
                        "title": "func badge(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/badgeprominence(_:)",
                        "title": "func badgeProminence(BadgeProminence) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/baselineoffset(_:)",
                        "title": "func baselineOffset(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/blendmode(_:)",
                        "title": "func blendMode(BlendMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/blur(radius:opaque:)",
                        "title": "func blur(radius: CGFloat, opaque: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/bold(_:)",
                        "title": "func bold(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/border(_:width:)",
                        "title": "func border<S>(S, width: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/brightness(_:)",
                        "title": "func brightness(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/buttonbordershape(_:)",
                        "title": "func buttonBorderShape(ButtonBorderShape) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/buttonrepeatbehavior(_:)",
                        "title": "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/buttonstyle(_:)-4zdrd",
                        "title": "func buttonStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/buttonstyle(_:)-5qmbr",
                        "title": "func buttonStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/clipshape(_:style:)",
                        "title": "func clipShape<S>(S, style: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/clipped(antialiased:)",
                        "title": "func clipped(antialiased: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/coloreffect(_:isenabled:)",
                        "title": "func colorEffect(Shader, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/colorinvert()",
                        "title": "func colorInvert() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/colormultiply(_:)",
                        "title": "func colorMultiply(Color) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/colorscheme(_:)",
                        "title": "func colorScheme(ColorScheme) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/compositinggroup()",
                        "title": "func compositingGroup() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:actions:)-2xa9k",
                        "title": "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:actions:)-540w9",
                        "title": "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:actions:)-q22q",
                        "title": "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-33psm",
                        "title": "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3gca1",
                        "title": "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-j261",
                        "title": "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1eroa",
                        "title": "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-25f3t",
                        "title": "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2vszn",
                        "title": "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1lq0n",
                        "title": "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6kt07",
                        "title": "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9ijow",
                        "title": "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containerbackground(_:for:)",
                        "title": "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containerbackground(for:alignment:content:)",
                        "title": "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containerrelativeframe(_:alignment:)",
                        "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containerrelativeframe(_:alignment:_:)",
                        "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containerrelativeframe(_:count:span:spacing:alignment:)",
                        "title": "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containershape(_:)",
                        "title": "func containerShape<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/containervalue(_:_:)",
                        "title": "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contentmargins(_:_:for:)-3g4op",
                        "title": "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contentmargins(_:_:for:)-4dp7d",
                        "title": "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contentmargins(_:for:)",
                        "title": "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contentshape(_:_:eofill:)",
                        "title": "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contentshape(_:eofill:)",
                        "title": "func contentShape<S>(S, eoFill: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/contenttoolbar(for:content:)-5ero8",
                        "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/contenttoolbar(for:content:)-6tr4t",
                        "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contenttransition(_:)",
                        "title": "func contentTransition(ContentTransition) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/contextmenu(_:)",
                        "title": "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contextmenu(forselectiontype:menu:primaryaction:)",
                        "title": "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contextmenu(menuitems:)",
                        "title": "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contextmenu(menuitems:preview:)",
                        "title": "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/contrast(_:)",
                        "title": "func contrast(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/controlgroupstyle(_:)",
                        "title": "func controlGroupStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/controlsize(_:)",
                        "title": "func controlSize(ControlSize) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/coordinatespace(_:)",
                        "title": "func coordinateSpace(NamedCoordinateSpace) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/coordinatespace(name:)",
                        "title": "func coordinateSpace<T>(name: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/cornerradius(_:antialiased:)",
                        "title": "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/datepickerstyle(_:)",
                        "title": "func datePickerStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaultadaptabletabbarplacement(_:)",
                        "title": "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaultappstorage(_:)",
                        "title": "func defaultAppStorage(UserDefaults) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaultfocus(_:_:priority:)",
                        "title": "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaulthovereffect(_:)-82imt",
                        "title": "func defaultHoverEffect(HoverEffect?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaulthovereffect(_:)-rkad",
                        "title": "func defaultHoverEffect(some CustomHoverEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaultscrollanchor(_:)",
                        "title": "func defaultScrollAnchor(UnitPoint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/defaultscrollanchor(_:for:)",
                        "title": "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/deferssystemgestures(on:)",
                        "title": "func defersSystemGestures(on: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/deletedisabled(_:)",
                        "title": "func deleteDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dialogicon(_:)",
                        "title": "func dialogIcon(Image?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dialogsuppressiontoggle(_:issuppressed:)-32772",
                        "title": "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dialogsuppressiontoggle(_:issuppressed:)-7nloy",
                        "title": "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dialogsuppressiontoggle(_:issuppressed:)-96cc4",
                        "title": "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dialogsuppressiontoggle(issuppressed:)",
                        "title": "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/disableautocorrection(_:)",
                        "title": "func disableAutocorrection(Bool?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/disabled(_:)",
                        "title": "func disabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/disclosuregroupstyle(_:)",
                        "title": "func disclosureGroupStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/distortioneffect(_:maxsampleoffset:isenabled:)",
                        "title": "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/documentbrowsercontextmenu(_:)",
                        "title": "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/draggable(_:)",
                        "title": "func draggable<T>(@autoclosure () -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/draggable(_:preview:)",
                        "title": "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/drawinggroup(opaque:colormode:)",
                        "title": "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dropdestination(for:action:istargeted:)",
                        "title": "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dynamictypesize(_:)-3r6u6",
                        "title": "func dynamicTypeSize(DynamicTypeSize) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/dynamictypesize(_:)-7xnnn",
                        "title": "func dynamicTypeSize<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/edgesignoringsafearea(_:)",
                        "title": "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/environment(_:)",
                        "title": "func environment<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/environment(_:_:)",
                        "title": "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/environmentobject(_:)",
                        "title": "func environmentObject<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogbrowseroptions(_:)",
                        "title": "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogconfirmationlabel(_:)-5act7",
                        "title": "func fileDialogConfirmationLabel(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogconfirmationlabel(_:)-6mdrq",
                        "title": "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogconfirmationlabel(_:)-7sc2z",
                        "title": "func fileDialogConfirmationLabel<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogcustomizationid(_:)",
                        "title": "func fileDialogCustomizationID(String) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogdefaultdirectory(_:)",
                        "title": "func fileDialogDefaultDirectory(URL?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogimportsunresolvedaliases(_:)",
                        "title": "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogmessage(_:)-2sh0y",
                        "title": "func fileDialogMessage(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogmessage(_:)-8eir2",
                        "title": "func fileDialogMessage<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogmessage(_:)-98muc",
                        "title": "func fileDialogMessage(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filedialogurlenabled(_:)",
                        "title": "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4l7yk",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5aiwm",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4xyn2",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6utak",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:documents:contenttype:oncompletion:)-4inyk",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:documents:contenttype:oncompletion:)-8m68r",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6urmh",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-99rsk",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                        "title": "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                        "title": "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporterfilenamelabel(_:)-27d72",
                        "title": "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporterfilenamelabel(_:)-39eov",
                        "title": "func fileExporterFilenameLabel(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileexporterfilenamelabel(_:)-9kgi8",
                        "title": "func fileExporterFilenameLabel<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                        "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                        "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                        "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filemover(ispresented:file:oncompletion:)",
                        "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filemover(ispresented:file:oncompletion:oncancellation:)",
                        "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filemover(ispresented:files:oncompletion:)",
                        "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/filemover(ispresented:files:oncompletion:oncancellation:)",
                        "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/finddisabled(_:)",
                        "title": "func findDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/findnavigator(ispresented:)",
                        "title": "func findNavigator(isPresented: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fixedsize()",
                        "title": "func fixedSize() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fixedsize(horizontal:vertical:)",
                        "title": "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/flipsforrighttoleftlayoutdirection(_:)",
                        "title": "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focuseffectdisabled(_:)",
                        "title": "func focusEffectDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusable(_:)",
                        "title": "func focusable(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusable(_:interactions:)",
                        "title": "func focusable(Bool, interactions: FocusInteractions) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focused(_:)",
                        "title": "func focused(FocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focused(_:equals:)",
                        "title": "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedobject(_:)-4daun",
                        "title": "func focusedObject<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedobject(_:)-8wa6k",
                        "title": "func focusedObject<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedsceneobject(_:)-137ih",
                        "title": "func focusedSceneObject<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedsceneobject(_:)-62y1b",
                        "title": "func focusedSceneObject<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedscenevalue(_:)",
                        "title": "func focusedSceneValue<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedscenevalue(_:_:)-6e6bm",
                        "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedscenevalue(_:_:)-atdb",
                        "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedvalue(_:)",
                        "title": "func focusedValue<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedvalue(_:_:)-2n168",
                        "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/focusedvalue(_:_:)-6wuqk",
                        "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/font(_:)",
                        "title": "func font(Font?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fontdesign(_:)",
                        "title": "func fontDesign(Font.Design?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fontweight(_:)",
                        "title": "func fontWeight(Font.Weight?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fontwidth(_:)",
                        "title": "func fontWidth(Font.Width?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/foregroundcolor(_:)",
                        "title": "func foregroundColor(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/foregroundstyle(_:)",
                        "title": "func foregroundStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/foregroundstyle(_:_:)",
                        "title": "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/foregroundstyle(_:_:_:)",
                        "title": "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/formstyle(_:)",
                        "title": "func formStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/frame()",
                        "title": "func frame() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/frame(depth:alignment:)",
                        "title": "func frame(depth: CGFloat?, alignment: DepthAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/frame(mindepth:idealdepth:maxdepth:alignment:)",
                        "title": "func frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                        "title": "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/frame(width:height:alignment:)",
                        "title": "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fullscreencover(ispresented:ondismiss:content:)",
                        "title": "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/fullscreencover(item:ondismiss:content:)",
                        "title": "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gaugestyle(_:)",
                        "title": "func gaugeStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/geometrygroup()",
                        "title": "func geometryGroup() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gesture(_:)",
                        "title": "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gesture(_:including:)",
                        "title": "func gesture<T>(T, including: GestureMask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gesture(_:isenabled:)",
                        "title": "func gesture<T>(T, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gesture(_:name:isenabled:)",
                        "title": "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/glassbackgroundeffect(_:displaymode:)",
                        "title": "func glassBackgroundEffect<S>(S, displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/glassbackgroundeffect(_:in:displaymode:)",
                        "title": "func glassBackgroundEffect<T, S>(S, in: T, displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/glassbackgroundeffect(displaymode:)",
                        "title": "func glassBackgroundEffect(displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/glassbackgroundeffect(in:displaymode:)",
                        "title": "func glassBackgroundEffect<S>(in: S, displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/grayscale(_:)",
                        "title": "func grayscale(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gridcellanchor(_:)",
                        "title": "func gridCellAnchor(UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gridcellcolumns(_:)",
                        "title": "func gridCellColumns(Int) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gridcellunsizedaxes(_:)",
                        "title": "func gridCellUnsizedAxes(Axis.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/gridcolumnalignment(_:)",
                        "title": "func gridColumnAlignment(HorizontalAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/groupboxstyle(_:)",
                        "title": "func groupBoxStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/handgestureshortcut(_:isenabled:)",
                        "title": "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/handpointerbehavior(_:)",
                        "title": "func handPointerBehavior(HandPointerBehavior?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/handlesexternalevents(preferring:allowing:)",
                        "title": "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/headerprominence(_:)",
                        "title": "func headerProminence(Prominence) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/help(_:)-3m9wt",
                        "title": "func help(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/help(_:)-807cb",
                        "title": "func help(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/help(_:)-8u2lm",
                        "title": "func help<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hidden()",
                        "title": "func hidden() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/highprioritygesture(_:including:)",
                        "title": "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/highprioritygesture(_:isenabled:)",
                        "title": "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/highprioritygesture(_:name:isenabled:)",
                        "title": "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffect(_:)",
                        "title": "func hoverEffect(HoverEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffect(_:in:isenabled:)",
                        "title": "func hoverEffect(some CustomHoverEffect, in: HoverEffectGroup?, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffect(_:isenabled:)-3l8m2",
                        "title": "func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffect(_:isenabled:)-9g8bw",
                        "title": "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffect(in:isenabled:body:)",
                        "title": "func hoverEffect(in: HoverEffectGroup?, isEnabled: Bool, body: (EmptyHoverEffectContent, Bool, GeometryProxy) -> some HoverEffectContent) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffectdisabled(_:)",
                        "title": "func hoverEffectDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffectgroup()",
                        "title": "func hoverEffectGroup() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffectgroup(_:)",
                        "title": "func hoverEffectGroup(HoverEffectGroup?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/hovereffectgroup(id:in:behavior:)",
                        "title": "func hoverEffectGroup(id: String?, in: Namespace.ID, behavior: HoverEffectGroup.Behavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/huerotation(_:)",
                        "title": "func hueRotation(Angle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/id(_:)",
                        "title": "func id<ID>(ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ignoressafearea(_:edges:)",
                        "title": "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/imagescale(_:)",
                        "title": "func imageScale(Image.Scale) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/immersiveenvironmentpicker(content:)",
                        "title": "func immersiveEnvironmentPicker<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/indexviewstyle(_:)",
                        "title": "func indexViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/inspector(ispresented:content:)",
                        "title": "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/inspectorcolumnwidth(_:)",
                        "title": "func inspectorColumnWidth(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/inspectorcolumnwidth(min:ideal:max:)",
                        "title": "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/interactionactivitytrackingtag(_:)",
                        "title": "func interactionActivityTrackingTag(String) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/interactivedismissdisabled(_:)",
                        "title": "func interactiveDismissDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/invalidatablecontent(_:)",
                        "title": "func invalidatableContent(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/italic(_:)",
                        "title": "func italic(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/itemprovider(_:)",
                        "title": "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/kerning(_:)",
                        "title": "func kerning(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyboardshortcut(_:)-1sld",
                        "title": "func keyboardShortcut(KeyboardShortcut?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyboardshortcut(_:)-po3s",
                        "title": "func keyboardShortcut(KeyboardShortcut) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyboardshortcut(_:modifiers:)",
                        "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyboardshortcut(_:modifiers:localization:)",
                        "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyboardtype(_:)",
                        "title": "func keyboardType(UIKeyboardType) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                        "title": "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                        "title": "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/labelstyle(_:)",
                        "title": "func labelStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/labeledcontentstyle(_:)",
                        "title": "func labeledContentStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/labelshidden()",
                        "title": "func labelsHidden() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/labelsvisibility(_:)",
                        "title": "func labelsVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/layereffect(_:maxsampleoffset:isenabled:)",
                        "title": "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/layoutdirectionbehavior(_:)",
                        "title": "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/layoutpriority(_:)",
                        "title": "func layoutPriority(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/layoutvalue(key:value:)",
                        "title": "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/linelimit(_:)-4cfsc",
                        "title": "func lineLimit(PartialRangeThrough<Int>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/linelimit(_:)-4jmf9",
                        "title": "func lineLimit(ClosedRange<Int>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/linelimit(_:)-7ebhg",
                        "title": "func lineLimit(Int?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/linelimit(_:)-7g99k",
                        "title": "func lineLimit(PartialRangeFrom<Int>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/linelimit(_:reservesspace:)",
                        "title": "func lineLimit(Int, reservesSpace: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/linespacing(_:)",
                        "title": "func lineSpacing(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listitemtint(_:)-5n9fv",
                        "title": "func listItemTint(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listitemtint(_:)-7glxq",
                        "title": "func listItemTint(ListItemTint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowbackground(_:)",
                        "title": "func listRowBackground<V>(V?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowhovereffect(_:)",
                        "title": "func listRowHoverEffect(HoverEffect?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowhovereffectdisabled(_:)",
                        "title": "func listRowHoverEffectDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowinsets(_:)",
                        "title": "func listRowInsets(EdgeInsets?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowseparator(_:edges:)",
                        "title": "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowseparatortint(_:edges:)",
                        "title": "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listrowspacing(_:)",
                        "title": "func listRowSpacing(CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listsectionseparator(_:edges:)",
                        "title": "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listsectionseparatortint(_:edges:)",
                        "title": "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listsectionspacing(_:)-20vex",
                        "title": "func listSectionSpacing(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/listsectionspacing(_:)-4agg7",
                        "title": "func listSectionSpacing(ListSectionSpacing) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/liststyle(_:)",
                        "title": "func listStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/luminancetoalpha()",
                        "title": "func luminanceToAlpha() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/mask(_:)",
                        "title": "func mask<Mask>(Mask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/mask(alignment:_:)",
                        "title": "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                        "title": "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/matchedtransitionsource(id:in:)",
                        "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/matchedtransitionsource(id:in:configuration:)",
                        "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/materialactiveappearance(_:)",
                        "title": "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/menuactiondismissbehavior(_:)",
                        "title": "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/menuindicator(_:)",
                        "title": "func menuIndicator(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/menuorder(_:)",
                        "title": "func menuOrder(MenuOrder) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/menustyle(_:)",
                        "title": "func menuStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/minimumscalefactor(_:)",
                        "title": "func minimumScaleFactor(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/modifier(_:)",
                        "title": "func modifier<T>(T) -> ModifiedContent<Self, T>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/monospaced(_:)",
                        "title": "func monospaced(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/monospaceddigit()",
                        "title": "func monospacedDigit() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/movedisabled(_:)",
                        "title": "func moveDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/multilinetextalignment(_:)",
                        "title": "func multilineTextAlignment(TextAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbarbackbuttonhidden(_:)",
                        "title": "func navigationBarBackButtonHidden(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbarhidden(_:)",
                        "title": "func navigationBarHidden(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbaritems(leading:)",
                        "title": "func navigationBarItems<L>(leading: L) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbaritems(leading:trailing:)",
                        "title": "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbaritems(trailing:)",
                        "title": "func navigationBarItems<T>(trailing: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbartitle(_:)-1e70n",
                        "title": "func navigationBarTitle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbartitle(_:)-7nncu",
                        "title": "func navigationBarTitle(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbartitle(_:)-7o2yr",
                        "title": "func navigationBarTitle(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/navigationbartitle(_:displaymode:)-58k2c",
                        "title": "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/navigationbartitle(_:displaymode:)-93ls3",
                        "title": "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/navigationbartitle(_:displaymode:)-9oqo6",
                        "title": "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationbartitledisplaymode(_:)",
                        "title": "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdestination(for:destination:)",
                        "title": "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdestination(ispresented:destination:)",
                        "title": "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdestination(item:destination:)",
                        "title": "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdocument(_:)-14bum",
                        "title": "func navigationDocument(URL) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdocument(_:)-9no2r",
                        "title": "func navigationDocument<D>(D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdocument(_:preview:)-4f45p",
                        "title": "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdocument(_:preview:)-7dya8",
                        "title": "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdocument(_:preview:)-88h4",
                        "title": "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationdocument(_:preview:)-92z3x",
                        "title": "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationsplitviewcolumnwidth(_:)",
                        "title": "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationsplitviewcolumnwidth(min:ideal:max:)",
                        "title": "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationsplitviewstyle(_:)",
                        "title": "func navigationSplitViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationsubtitle(_:)-1829l",
                        "title": "func navigationSubtitle(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationsubtitle(_:)-4r25d",
                        "title": "func navigationSubtitle(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationsubtitle(_:)-7na9z",
                        "title": "func navigationSubtitle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationtitle(_:)-2acge",
                        "title": "func navigationTitle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationtitle(_:)-4gj5y",
                        "title": "func navigationTitle(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationtitle(_:)-7s101",
                        "title": "func navigationTitle(Binding<String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationtitle(_:)-hbeh",
                        "title": "func navigationTitle<V>(() -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationtitle(_:)-rylp",
                        "title": "func navigationTitle(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationtransition(_:)",
                        "title": "func navigationTransition(some NavigationTransition) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/navigationviewstyle(_:)",
                        "title": "func navigationViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/offset(_:)",
                        "title": "func offset(CGSize) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/offset(x:y:)",
                        "title": "func offset(x: CGFloat, y: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/offset(z:)",
                        "title": "func offset(z: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onappear(perform:)",
                        "title": "func onAppear(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onchange(of:initial:_:)-1e0we",
                        "title": "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onchange(of:initial:_:)-7c77b",
                        "title": "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/onchange(of:perform:)",
                        "title": "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/oncontinueuseractivity(_:perform:)",
                        "title": "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/oncontinuoushover(coordinatespace:perform:)",
                        "title": "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ondisappear(perform:)",
                        "title": "func onDisappear(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ondrag(_:)",
                        "title": "func onDrag(() -> NSItemProvider) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ondrag(_:preview:)",
                        "title": "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ondrop(of:delegate:)-1avh7",
                        "title": "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/ondrop(of:delegate:)-fehu",
                        "title": "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/ondrop(of:istargeted:perform:)-1cxi1",
                        "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/ondrop(of:istargeted:perform:)-236pu",
                        "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ondrop(of:istargeted:perform:)-7jjcb",
                        "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ondrop(of:istargeted:perform:)-9n9jj",
                        "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ongeometrychange(for:of:action:)-3naw6",
                        "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ongeometrychange(for:of:action:)-84iqq",
                        "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ongeometrychange3d(for:of:action:)-2oocu",
                        "title": "func onGeometryChange3D<T>(for: T.Type, of: (GeometryProxy3D) -> T, action: (T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ongeometrychange3d(for:of:action:)-73eng",
                        "title": "func onGeometryChange3D<T>(for: T.Type, of: (GeometryProxy3D) -> T, action: (T, T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onhover(perform:)",
                        "title": "func onHover(perform: (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onimmersionchange(initial:_:)",
                        "title": "func onImmersionChange(initial: Bool, (ImmersionChangeContext, ImmersionChangeContext) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onkeypress(_:action:)",
                        "title": "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onkeypress(_:phases:action:)",
                        "title": "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onkeypress(characters:phases:action:)",
                        "title": "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onkeypress(keys:phases:action:)",
                        "title": "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onkeypress(phases:action:)",
                        "title": "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onlongpressgesture(minimumduration:pressing:perform:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onopenurl(perform:)",
                        "title": "func onOpenURL(perform: (URL) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onpencildoubletap(perform:)",
                        "title": "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onpencilsqueeze(perform:)",
                        "title": "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onpreferencechange(_:perform:)",
                        "title": "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onreceive(_:perform:)",
                        "title": "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onscrollgeometrychange(for:of:action:)",
                        "title": "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onscrollphasechange(_:)-8bojk",
                        "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onscrollphasechange(_:)-9umqa",
                        "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                        "title": "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onscrollvisibilitychange(threshold:_:)",
                        "title": "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onsubmit(of:_:)",
                        "title": "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/ontapgesture(count:coordinatespace:perform:)",
                        "title": "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ontapgesture(count:perform:)",
                        "title": "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/onvolumeviewpointchange(updatestrategy:initial:_:)",
                        "title": "func onVolumeViewpointChange(updateStrategy: VolumeViewpointUpdateStrategy, initial: Bool, (Viewpoint3D, Viewpoint3D) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/opacity(_:)",
                        "title": "func opacity(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/ornament(visibility:attachmentanchor:contentalignment:ornament:)",
                        "title": "func ornament<Content>(visibility: Visibility, attachmentAnchor: OrnamentAttachmentAnchor, contentAlignment: Alignment, ornament: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/overlay(_:alignment:)",
                        "title": "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/overlay(_:ignoressafeareaedges:)",
                        "title": "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/overlay(_:in:fillstyle:)",
                        "title": "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/overlay(alignment:content:)",
                        "title": "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/overlaypreferencevalue(_:_:)",
                        "title": "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/overlaypreferencevalue(_:alignment:_:)",
                        "title": "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/padding(_:)-48yxg",
                        "title": "func padding(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/padding(_:)-5ydfq",
                        "title": "func padding(EdgeInsets) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/padding(_:_:)",
                        "title": "func padding(Edge.Set, CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/padding3d(_:)-4xflc",
                        "title": "func padding3D(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/padding3d(_:)-940i2",
                        "title": "func padding3D(EdgeInsets3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/padding3d(_:_:)",
                        "title": "func padding3D(Edge3D.Set, CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/paletteselectioneffect(_:)",
                        "title": "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/persistentsystemoverlays(_:)",
                        "title": "func persistentSystemOverlays(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/perspectiverotationeffect(_:axis:anchor:anchorz:perspective:)",
                        "title": "func perspectiveRotationEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/phaseanimator(_:content:animation:)",
                        "title": "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/phaseanimator(_:trigger:content:animation:)",
                        "title": "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/pickerstyle(_:)",
                        "title": "func pickerStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/pointerstyle(_:)",
                        "title": "func pointerStyle(PointerStyle?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/popover(ispresented:attachmentanchor:arrowedge:content:)",
                        "title": "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/popover(item:attachmentanchor:arrowedge:content:)",
                        "title": "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/position(_:)",
                        "title": "func position(CGPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/position(x:y:)",
                        "title": "func position(x: CGFloat, y: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/preference(key:value:)",
                        "title": "func preference<K>(key: K.Type, value: K.Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/preferredcolorscheme(_:)",
                        "title": "func preferredColorScheme(ColorScheme?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/preferredsurroundingseffect(_:)",
                        "title": "func preferredSurroundingsEffect(SurroundingsEffect?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationbackground(_:)",
                        "title": "func presentationBackground<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationbackground(alignment:content:)",
                        "title": "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationbackgroundinteraction(_:)",
                        "title": "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationcompactadaptation(_:)",
                        "title": "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationcompactadaptation(horizontal:vertical:)",
                        "title": "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationcontentinteraction(_:)",
                        "title": "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationcornerradius(_:)",
                        "title": "func presentationCornerRadius(CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationdetents(_:)",
                        "title": "func presentationDetents(Set<PresentationDetent>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationdetents(_:selection:)",
                        "title": "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationdragindicator(_:)",
                        "title": "func presentationDragIndicator(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/presentationsizing(_:)",
                        "title": "func presentationSizing(some PresentationSizing) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/previewcontext(_:)",
                        "title": "func previewContext<C>(C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/previewdevice(_:)",
                        "title": "func previewDevice(PreviewDevice?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/previewdisplayname(_:)",
                        "title": "func previewDisplayName(String?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/previewinterfaceorientation(_:)",
                        "title": "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/previewlayout(_:)",
                        "title": "func previewLayout(PreviewLayout) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/privacysensitive(_:)",
                        "title": "func privacySensitive(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/progressviewstyle(_:)",
                        "title": "func progressViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/projectioneffect(_:)",
                        "title": "func projectionEffect(ProjectionTransform) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/redacted(reason:)",
                        "title": "func redacted(reason: RedactionReasons) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/refreshable(action:)",
                        "title": "func refreshable(action: () async -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/renameaction(_:)-3tes8",
                        "title": "func renameAction(FocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/renameaction(_:)-72t9",
                        "title": "func renameAction(() -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/replacedisabled(_:)",
                        "title": "func replaceDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/rotation3deffect(_:anchor:)",
                        "title": "func rotation3DEffect(Rotation3D, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/rotation3deffect(_:axis:anchor:)-20vol",
                        "title": "func rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> ModifiedContent<Self, _Rotation3DEffectAngleAxis>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/rotation3deffect(_:axis:anchor:)-3h1u6",
                        "title": "func rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/rotation3deffect(_:axis:anchor:)-7otsf",
                        "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                        "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/rotationeffect(_:anchor:)",
                        "title": "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/safeareainset(edge:alignment:spacing:content:)-75000",
                        "title": "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/safeareainset(edge:alignment:spacing:content:)-9g4qs",
                        "title": "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/safeareapadding(_:)-246i2",
                        "title": "func safeAreaPadding(EdgeInsets) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/safeareapadding(_:)-8p65q",
                        "title": "func safeAreaPadding(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/safeareapadding(_:_:)",
                        "title": "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/saturation(_:)",
                        "title": "func saturation(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(_:anchor:)-1jou8",
                        "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> ModifiedContent<Self, _UniformScaleEffect>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(_:anchor:)-1xcxp",
                        "title": "func scaleEffect(Size3D, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(_:anchor:)-1yzmo",
                        "title": "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(_:anchor:)-6t3ck",
                        "title": "func scaleEffect(CGFloat, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(_:anchor:)-k4jy",
                        "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(x:y:anchor:)",
                        "title": "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaleeffect(x:y:z:anchor:)",
                        "title": "func scaleEffect(x: CGFloat, y: CGFloat, z: CGFloat, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaledtofill()",
                        "title": "func scaledToFill() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scaledtofit()",
                        "title": "func scaledToFit() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scenepadding(_:)",
                        "title": "func scenePadding(Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scenepadding(_:edges:)",
                        "title": "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollbouncebehavior(_:axes:)",
                        "title": "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollclipdisabled(_:)",
                        "title": "func scrollClipDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollcontentbackground(_:)",
                        "title": "func scrollContentBackground(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrolldisabled(_:)",
                        "title": "func scrollDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrolldismisseskeyboard(_:)",
                        "title": "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollindicators(_:axes:)",
                        "title": "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollindicatorsflash(onappear:)",
                        "title": "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollindicatorsflash(trigger:)",
                        "title": "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollinputbehavior(_:for:)",
                        "title": "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollposition(_:anchor:)",
                        "title": "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrollposition(id:anchor:)",
                        "title": "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrolltargetbehavior(_:)",
                        "title": "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrolltargetlayout(isenabled:)",
                        "title": "func scrollTargetLayout(isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrolltransition(_:axis:transition:)",
                        "title": "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                        "title": "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchcompletion(_:)-5n903",
                        "title": "func searchCompletion(String) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchcompletion(_:)-6nwe9",
                        "title": "func searchCompletion<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchdictationbehavior(_:)",
                        "title": "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchfocused(_:)",
                        "title": "func searchFocused(FocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchfocused(_:equals:)",
                        "title": "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchpresentationtoolbarbehavior(_:)",
                        "title": "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchscopes(_:activation:_:)",
                        "title": "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchscopes(_:scopes:)",
                        "title": "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchsuggestions(_:)",
                        "title": "func searchSuggestions<S>(() -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchsuggestions(_:for:)",
                        "title": "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1neod",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4jcl9",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9es06",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:editabletokens:placement:prompt:token:)-2duxb",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:editabletokens:placement:prompt:token:)-3k0zl",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:editabletokens:placement:prompt:token:)-xf4n",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:ispresented:placement:prompt:)-1dnc7",
                        "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:ispresented:placement:prompt:)-8hj5",
                        "title": "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:ispresented:placement:prompt:)-9cf6",
                        "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:placement:prompt:)-31st3",
                        "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:placement:prompt:)-7uayx",
                        "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:placement:prompt:)-wu2x",
                        "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:placement:prompt:suggestions:)-7h41d",
                        "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:placement:prompt:suggestions:)-932nr",
                        "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:placement:prompt:suggestions:)-rijc",
                        "title": "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:ispresented:placement:prompt:token:)-1ev2h",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:ispresented:placement:prompt:token:)-44lnk",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:ispresented:placement:prompt:token:)-xw71",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:placement:prompt:token:)-1nlm8",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:placement:prompt:token:)-2flqz",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:placement:prompt:token:)-36bu2",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1jw9n",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6juq0",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-80mta",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3yglt",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4v6zu",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-59z0d",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/sectionactions(content:)",
                        "title": "func sectionActions<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/selectiondisabled(_:)",
                        "title": "func selectionDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/sensoryfeedback(_:trigger:)",
                        "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/sensoryfeedback(_:trigger:condition:)",
                        "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/sensoryfeedback(trigger:_:)",
                        "title": "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/shadow(color:radius:x:y:)",
                        "title": "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/sheet(ispresented:ondismiss:content:)",
                        "title": "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/sheet(item:ondismiss:content:)",
                        "title": "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/shortcutslinkstyle(_:)",
                        "title": "func shortcutsLinkStyle(ShortcutsLinkStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/simultaneousgesture(_:including:)",
                        "title": "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/simultaneousgesture(_:isenabled:)",
                        "title": "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/simultaneousgesture(_:name:isenabled:)",
                        "title": "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/siritipviewstyle(_:)",
                        "title": "func siriTipViewStyle(SiriTipViewStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/speechadjustedpitch(_:)",
                        "title": "func speechAdjustedPitch(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/speechalwaysincludespunctuation(_:)",
                        "title": "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/speechannouncementsqueued(_:)",
                        "title": "func speechAnnouncementsQueued(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/speechspellsoutcharacters(_:)",
                        "title": "func speechSpellsOutCharacters(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/springloadingbehavior(_:)",
                        "title": "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/shortcutslink/statusbar(hidden:)",
                        "title": "func statusBar(hidden: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/statusbarhidden(_:)",
                        "title": "func statusBarHidden(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/strikethrough(_:pattern:color:)",
                        "title": "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/submitlabel(_:)",
                        "title": "func submitLabel(SubmitLabel) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/submitscope(_:)",
                        "title": "func submitScope(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/supportedvolumeviewpoints(_:)",
                        "title": "func supportedVolumeViewpoints(SquareAzimuth.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/swipeactions(edge:allowsfullswipe:content:)",
                        "title": "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/symboleffect(_:options:isactive:)",
                        "title": "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/symboleffect(_:options:value:)",
                        "title": "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/symboleffectsremoved(_:)",
                        "title": "func symbolEffectsRemoved(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/symbolrenderingmode(_:)",
                        "title": "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/symbolvariant(_:)",
                        "title": "func symbolVariant(SymbolVariants) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tabitem(_:)",
                        "title": "func tabItem<V>(() -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tabviewcustomization(_:)",
                        "title": "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tabviewsidebarbottombar(content:)",
                        "title": "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tabviewsidebarfooter(content:)",
                        "title": "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tabviewsidebarheader(content:)",
                        "title": "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tabviewstyle(_:)",
                        "title": "func tabViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tablecolumnheaders(_:)",
                        "title": "func tableColumnHeaders(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tablestyle(_:)",
                        "title": "func tableStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tag(_:includeoptional:)",
                        "title": "func tag<V>(V, includeOptional: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/task(id:priority:_:)",
                        "title": "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/task(priority:_:)",
                        "title": "func task(priority: TaskPriority, () async -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textcase(_:)",
                        "title": "func textCase(Text.Case?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textcontenttype(_:)",
                        "title": "func textContentType(UITextContentType?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/texteditorstyle(_:)",
                        "title": "func textEditorStyle(some TextEditorStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textfieldstyle(_:)",
                        "title": "func textFieldStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textinputautocapitalization(_:)",
                        "title": "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textrenderer(_:)",
                        "title": "func textRenderer<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textscale(_:isenabled:)",
                        "title": "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textselection(_:)",
                        "title": "func textSelection<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/textselectionaffinity(_:)",
                        "title": "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tint(_:)",
                        "title": "func tint(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/togglestyle(_:)",
                        "title": "func toggleStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbar(_:for:)",
                        "title": "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbar(content:)-69fd",
                        "title": "func toolbar<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbar(content:)-9fw5h",
                        "title": "func toolbar<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbar(id:content:)",
                        "title": "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbar(removing:)",
                        "title": "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarbackground(_:for:)-18pda",
                        "title": "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarbackground(_:for:)-6rm7m",
                        "title": "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarbackgroundvisibility(_:for:)",
                        "title": "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarcolorscheme(_:for:)",
                        "title": "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarforegroundstyle(_:for:)",
                        "title": "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarrole(_:)",
                        "title": "func toolbarRole(ToolbarRole) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbartitledisplaymode(_:)",
                        "title": "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbartitlemenu(content:)",
                        "title": "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/toolbarvisibility(_:for:)",
                        "title": "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/tracking(_:)",
                        "title": "func tracking(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transaction(_:)",
                        "title": "func transaction((inout Transaction) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transaction(_:body:)",
                        "title": "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transaction(value:_:)",
                        "title": "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transform3deffect(_:)",
                        "title": "func transform3DEffect(AffineTransform3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transformanchorpreference(key:value:transform:)",
                        "title": "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transformeffect(_:)",
                        "title": "func transformEffect(CGAffineTransform) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transformenvironment(_:transform:)",
                        "title": "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transformpreference(_:_:)",
                        "title": "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transition(_:)-1tubp",
                        "title": "func transition<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/transition(_:)-liit",
                        "title": "func transition(AnyTransition) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/truncationmode(_:)",
                        "title": "func truncationMode(Text.TruncationMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/typeselectequivalent(_:)-4sxmv",
                        "title": "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/typeselectequivalent(_:)-70bjn",
                        "title": "func typeSelectEquivalent(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/typeselectequivalent(_:)-9yj03",
                        "title": "func typeSelectEquivalent<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/typesettinglanguage(_:isenabled:)-3jeo9",
                        "title": "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/typesettinglanguage(_:isenabled:)-6wwem",
                        "title": "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/underline(_:pattern:color:)",
                        "title": "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/unredacted()",
                        "title": "func unredacted() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/upperlimbvisibility(_:)",
                        "title": "func upperLimbVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/useractivity(_:element:_:)",
                        "title": "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/useractivity(_:isactive:_:)",
                        "title": "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/visualeffect(_:)",
                        "title": "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/visualeffect3d(_:)",
                        "title": "func visualEffect3D((EmptyVisualEffect, GeometryProxy3D) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/volumebaseplatevisibility(_:)",
                        "title": "func volumeBaseplateVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/windowtoolbarfullscreenvisibility(_:)",
                        "title": "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/shortcutslink/writingtoolsaffordancevisibility(_:)",
                        "title": "func writingToolsAffordanceVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/writingtoolsbehavior(_:)",
                        "title": "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/shortcutslink/zindex(_:)",
                        "title": "func zIndex(Double) -> some View",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/shortcutslink/view-implementations",
                    "title": "View Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/shortcutslink",
                "title": "ShortcutsLink",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the styles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslinkstyle/automatic",
                    "title": "static let automatic: ShortcutsLinkStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslinkstyle/automaticoutline",
                    "title": "static let automaticOutline: ShortcutsLinkStyle",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslinkstyle/dark",
                    "title": "static let dark: ShortcutsLinkStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslinkstyle/darkoutline",
                    "title": "static let darkOutline: ShortcutsLinkStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslinkstyle/light",
                    "title": "static let light: ShortcutsLinkStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/shortcutslinkstyle/lightoutline",
                    "title": "static let lightOutline: ShortcutsLinkStyle",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/shortcutslinkstyle",
                "title": "ShortcutsLinkStyle",
                "type": "struct"
              },
              {
                "title": "Tip views",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a tip view",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/init(style:)",
                    "title": "init(style: SiriTipViewStyle)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the view style",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/style",
                    "title": "var style: SiriTipViewStyle",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the styles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/siritipviewstyle/automatic",
                        "title": "static let automatic: SiriTipViewStyle",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/siritipviewstyle/dark",
                        "title": "static let dark: SiriTipViewStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/siritipviewstyle/light",
                        "title": "static let light: SiriTipViewStyle",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/siritipviewstyle",
                    "title": "SiriTipViewStyle",
                    "type": "struct"
                  },
                  {
                    "title": "Getting the viewâ€™s configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/allowsdismissal",
                    "title": "var allowsDismissal: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/ispresented",
                    "title": "var isPresented: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/intrinsiccontentsize",
                    "title": "var intrinsicContentSize: CGSize",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/didmovetowindow()",
                    "title": "func didMoveToWindow()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/setintent(intent:)",
                    "title": "func setIntent<Intent>(intent: Intent)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/siritipuiview/sizethatfits(_:)",
                    "title": "func sizeThatFits(CGSize) -> CGSize",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/siritipuiview",
                "title": "SiriTipUIView",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the view",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipview/init(intent:isvisible:)",
                    "title": "init<Intent>(intent: Intent, isVisible: Binding<Bool>?)",
                    "type": "init"
                  },
                  {
                    "title": "Implementing the view",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipview/body-swift.property",
                    "title": "var body: some View",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/siritipview/body-swift.typealias",
                    "title": "SiriTipView.Body",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accentcolor(_:)",
                        "title": "func accentColor(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(activationpoint:)-7f98w",
                        "title": "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(activationpoint:)-95479",
                        "title": "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(addtraits:)",
                        "title": "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(hidden:)",
                        "title": "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(hint:)",
                        "title": "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(identifier:)",
                        "title": "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(inputlabels:)",
                        "title": "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(label:)",
                        "title": "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(removetraits:)",
                        "title": "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(selectionidentifier:)",
                        "title": "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(sortpriority:)",
                        "title": "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibility(value:)",
                        "title": "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(_:_:)",
                        "title": "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(_:intent:)",
                        "title": "func accessibilityAction<I>(AccessibilityActionKind, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(action:label:)",
                        "title": "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(intent:label:)",
                        "title": "func accessibilityAction<I, Label>(intent: I, label: () -> Label) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(named:_:)-2mq8z",
                        "title": "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(named:_:)-3kw1p",
                        "title": "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(named:_:)-4stzv",
                        "title": "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(named:intent:)-114ch",
                        "title": "func accessibilityAction<I>(named: Text, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(named:intent:)-5e2cw",
                        "title": "func accessibilityAction<I>(named: LocalizedStringKey, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaction(named:intent:)-mwow",
                        "title": "func accessibilityAction<S, I>(named: S, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityactions(_:)",
                        "title": "func accessibilityActions<Content>(() -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityactions(category:_:)",
                        "title": "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityactivationpoint(_:)-6cwas",
                        "title": "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityactivationpoint(_:)-zvzv",
                        "title": "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityactivationpoint(_:isenabled:)-3riw1",
                        "title": "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityactivationpoint(_:isenabled:)-4quwl",
                        "title": "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityaddtraits(_:)",
                        "title": "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityadjustableaction(_:)",
                        "title": "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitychartdescriptor(_:)",
                        "title": "func accessibilityChartDescriptor<R>(R) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitychildren(children:)",
                        "title": "func accessibilityChildren<V>(children: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-141ra",
                        "title": "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-1z6jd",
                        "title": "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-3vtie",
                        "title": "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-57vxv",
                        "title": "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-6ywvd",
                        "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-7vu95",
                        "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-8qjak",
                        "title": "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/accessibilitycustomcontent(_:_:importance:)-9quxh",
                        "title": "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydirecttouch(_:options:)",
                        "title": "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydragpoint(_:description:)-6vify",
                        "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydragpoint(_:description:)-8luls",
                        "title": "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydragpoint(_:description:)-9fkh3",
                        "title": "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydragpoint(_:description:isenabled:)-43t7t",
                        "title": "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydragpoint(_:description:isenabled:)-66aar",
                        "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydragpoint(_:description:isenabled:)-6hdke",
                        "title": "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydroppoint(_:description:)-2m7tx",
                        "title": "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydroppoint(_:description:)-4hnam",
                        "title": "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydroppoint(_:description:)-7guvg",
                        "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydroppoint(_:description:isenabled:)-13xd",
                        "title": "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydroppoint(_:description:isenabled:)-5as3a",
                        "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitydroppoint(_:description:isenabled:)-7qh82",
                        "title": "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityelement(children:)",
                        "title": "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityfocused(_:)",
                        "title": "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityfocused(_:equals:)",
                        "title": "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityheading(_:)",
                        "title": "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhidden(_:)",
                        "title": "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhidden(_:isenabled:)",
                        "title": "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhint(_:)-62h47",
                        "title": "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhint(_:)-7j3ri",
                        "title": "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhint(_:)-9fgnd",
                        "title": "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhint(_:isenabled:)-2ehy5",
                        "title": "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhint(_:isenabled:)-5g6j0",
                        "title": "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityhint(_:isenabled:)-8la4n",
                        "title": "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityidentifier(_:)",
                        "title": "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityidentifier(_:isenabled:)",
                        "title": "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityignoresinvertcolors(_:)",
                        "title": "func accessibilityIgnoresInvertColors(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityinputlabels(_:)-33gj8",
                        "title": "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityinputlabels(_:)-3vx6l",
                        "title": "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityinputlabels(_:)-90kuk",
                        "title": "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityinputlabels(_:isenabled:)-8b2hn",
                        "title": "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityinputlabels(_:isenabled:)-8vsbg",
                        "title": "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityinputlabels(_:isenabled:)-8xqxq",
                        "title": "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(_:)-107ju",
                        "title": "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(_:)-2eyy8",
                        "title": "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(_:)-54g4w",
                        "title": "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(_:isenabled:)-1vk32",
                        "title": "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(_:isenabled:)-5v0d7",
                        "title": "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(_:isenabled:)-8hb28",
                        "title": "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabel(content:)",
                        "title": "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylabeledpair(role:id:in:)",
                        "title": "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitylinkedgroup(id:in:)",
                        "title": "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityquickaction(style:content:)",
                        "title": "func accessibilityQuickAction<Style, Content>(style: Style, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityquickaction(style:isactive:content:)",
                        "title": "func accessibilityQuickAction<Style, Content>(style: Style, isActive: Binding<Bool>, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityremovetraits(_:)",
                        "title": "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrepresentation(representation:)",
                        "title": "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrespondstouserinteraction(_:)",
                        "title": "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrespondstouserinteraction(_:isenabled:)",
                        "title": "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:)-2skge",
                        "title": "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:)-5q90i",
                        "title": "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:)-9lowc",
                        "title": "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:)-9t7w2",
                        "title": "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entryid:entrylabel:)-466yn",
                        "title": "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entryid:entrylabel:)-4wt07",
                        "title": "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entryid:entrylabel:)-5l6m6",
                        "title": "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entryid:entrylabel:)-ak55",
                        "title": "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entrylabel:)-6nzyt",
                        "title": "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entrylabel:)-8ifmf",
                        "title": "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entrylabel:)-kjdz",
                        "title": "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:entries:entrylabel:)-ql9s",
                        "title": "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:textranges:)-4xhgi",
                        "title": "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:textranges:)-7rste",
                        "title": "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:textranges:)-9b6sr",
                        "title": "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotor(_:textranges:)-9q4bz",
                        "title": "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityrotorentry(id:in:)",
                        "title": "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityscrollaction(_:)",
                        "title": "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityshowslargecontentviewer()",
                        "title": "func accessibilityShowsLargeContentViewer() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityshowslargecontentviewer(_:)",
                        "title": "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitysortpriority(_:)",
                        "title": "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilitytextcontenttype(_:)",
                        "title": "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityvalue(_:)-5c688",
                        "title": "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityvalue(_:)-7q8e3",
                        "title": "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityvalue(_:)-9jdm6",
                        "title": "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityvalue(_:isenabled:)-13v4x",
                        "title": "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityvalue(_:isenabled:)-2nva2",
                        "title": "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityvalue(_:isenabled:)-7o07o",
                        "title": "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/accessibilityzoomaction(_:)",
                        "title": "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/actionsheet(ispresented:content:)",
                        "title": "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/actionsheet(item:content:)",
                        "title": "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:actions:)-20lth",
                        "title": "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:actions:)-3oguc",
                        "title": "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:actions:)-9c045",
                        "title": "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:actions:message:)-16d9n",
                        "title": "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:actions:message:)-30x1y",
                        "title": "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:actions:message:)-808xq",
                        "title": "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:presenting:actions:)-4rvfo",
                        "title": "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:presenting:actions:)-5etqn",
                        "title": "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:presenting:actions:)-6dfrx",
                        "title": "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:presenting:actions:message:)-3bjjl",
                        "title": "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:presenting:actions:message:)-4trld",
                        "title": "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(_:ispresented:presenting:actions:message:)-8huc8",
                        "title": "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(ispresented:content:)",
                        "title": "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(ispresented:error:actions:)",
                        "title": "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(ispresented:error:actions:message:)",
                        "title": "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alert(item:content:)",
                        "title": "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alignmentguide(_:computevalue:)-2n08h",
                        "title": "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alignmentguide(_:computevalue:)-8t3go",
                        "title": "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/alloweddynamicrange(_:)",
                        "title": "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/allowshittesting(_:)",
                        "title": "func allowsHitTesting(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/allowstightening(_:)",
                        "title": "func allowsTightening(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/allowswindowactivationevents(_:)",
                        "title": "func allowsWindowActivationEvents(Bool?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/anchorpreference(key:value:transform:)",
                        "title": "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/animation(_:)",
                        "title": "func animation(Animation?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/animation(_:body:)",
                        "title": "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/animation(_:value:)",
                        "title": "func animation<V>(Animation?, value: V) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/appentityidentifier(_:)",
                        "title": "func appEntityIdentifier(EntityIdentifier?) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/appentityidentifier(forselectiontype:identifier:)",
                        "title": "func appEntityIdentifier<I>(forSelectionType: I.Type, identifier: (I) -> EntityIdentifier?) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/appentityuielements(_:)",
                        "title": "func appEntityUIElements((AppEntityUIElementsContext) -> [AppEntityUIElement]) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/aspectratio(_:contentmode:)-2u06r",
                        "title": "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/aspectratio(_:contentmode:)-67dtt",
                        "title": "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/autocapitalization(_:)",
                        "title": "func autocapitalization(UITextAutocapitalizationType) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/autocorrectiondisabled(_:)",
                        "title": "func autocorrectionDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(_:alignment:)",
                        "title": "func background<Background>(Background, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(_:ignoressafeareaedges:)",
                        "title": "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(_:in:fillstyle:)-2r0dw",
                        "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(_:in:fillstyle:)-4u3h2",
                        "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(alignment:content:)",
                        "title": "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(ignoressafeareaedges:)",
                        "title": "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(in:fillstyle:)-17tap",
                        "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/background(in:fillstyle:)-75he2",
                        "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/backgroundpreferencevalue(_:_:)",
                        "title": "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/backgroundpreferencevalue(_:alignment:_:)",
                        "title": "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/backgroundstyle(_:)",
                        "title": "func backgroundStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/badge(_:)-2aa2h",
                        "title": "func badge(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/badge(_:)-4h3nf",
                        "title": "func badge(LocalizedStringKey?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/badge(_:)-7ly4w",
                        "title": "func badge<S>(S?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/badge(_:)-bv2x",
                        "title": "func badge(Int) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/badgeprominence(_:)",
                        "title": "func badgeProminence(BadgeProminence) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/baselineoffset(_:)",
                        "title": "func baselineOffset(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/blendmode(_:)",
                        "title": "func blendMode(BlendMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/blur(radius:opaque:)",
                        "title": "func blur(radius: CGFloat, opaque: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/bold(_:)",
                        "title": "func bold(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/border(_:width:)",
                        "title": "func border<S>(S, width: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/brightness(_:)",
                        "title": "func brightness(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/buttonbordershape(_:)",
                        "title": "func buttonBorderShape(ButtonBorderShape) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/buttonrepeatbehavior(_:)",
                        "title": "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/buttonstyle(_:)-6t2ea",
                        "title": "func buttonStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/buttonstyle(_:)-9vo9l",
                        "title": "func buttonStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/clipshape(_:style:)",
                        "title": "func clipShape<S>(S, style: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/clipped(antialiased:)",
                        "title": "func clipped(antialiased: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/coloreffect(_:isenabled:)",
                        "title": "func colorEffect(Shader, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/colorinvert()",
                        "title": "func colorInvert() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/colormultiply(_:)",
                        "title": "func colorMultiply(Color) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/colorscheme(_:)",
                        "title": "func colorScheme(ColorScheme) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/compositinggroup()",
                        "title": "func compositingGroup() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:actions:)-1l8gu",
                        "title": "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:actions:)-8se8i",
                        "title": "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:actions:)-tl6n",
                        "title": "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-34k2p",
                        "title": "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4ozw6",
                        "title": "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6sbqa",
                        "title": "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-22vlt",
                        "title": "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8p3ib",
                        "title": "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9wv8c",
                        "title": "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8bm5y",
                        "title": "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-93jnn",
                        "title": "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-pbef",
                        "title": "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containerbackground(_:for:)",
                        "title": "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containerbackground(for:alignment:content:)",
                        "title": "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containerrelativeframe(_:alignment:)",
                        "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containerrelativeframe(_:alignment:_:)",
                        "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containerrelativeframe(_:count:span:spacing:alignment:)",
                        "title": "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containershape(_:)",
                        "title": "func containerShape<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/containervalue(_:_:)",
                        "title": "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contentmargins(_:_:for:)-3bsmi",
                        "title": "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contentmargins(_:_:for:)-90ro2",
                        "title": "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contentmargins(_:for:)",
                        "title": "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contentshape(_:_:eofill:)",
                        "title": "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contentshape(_:eofill:)",
                        "title": "func contentShape<S>(S, eoFill: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/contenttoolbar(for:content:)-60ero",
                        "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/contenttoolbar(for:content:)-7lgnn",
                        "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contenttransition(_:)",
                        "title": "func contentTransition(ContentTransition) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/contextmenu(_:)",
                        "title": "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contextmenu(forselectiontype:menu:primaryaction:)",
                        "title": "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contextmenu(menuitems:)",
                        "title": "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contextmenu(menuitems:preview:)",
                        "title": "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/contrast(_:)",
                        "title": "func contrast(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/controlgroupstyle(_:)",
                        "title": "func controlGroupStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/controlsize(_:)",
                        "title": "func controlSize(ControlSize) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/coordinatespace(_:)",
                        "title": "func coordinateSpace(NamedCoordinateSpace) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/coordinatespace(name:)",
                        "title": "func coordinateSpace<T>(name: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/cornerradius(_:antialiased:)",
                        "title": "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/datepickerstyle(_:)",
                        "title": "func datePickerStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaultadaptabletabbarplacement(_:)",
                        "title": "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaultappstorage(_:)",
                        "title": "func defaultAppStorage(UserDefaults) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaultfocus(_:_:priority:)",
                        "title": "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaulthovereffect(_:)-2j2xr",
                        "title": "func defaultHoverEffect(some CustomHoverEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaulthovereffect(_:)-5km3z",
                        "title": "func defaultHoverEffect(HoverEffect?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaultscrollanchor(_:)",
                        "title": "func defaultScrollAnchor(UnitPoint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaultscrollanchor(_:for:)",
                        "title": "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/defaultwheelpickeritemheight(_:)",
                        "title": "func defaultWheelPickerItemHeight(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/deferssystemgestures(on:)",
                        "title": "func defersSystemGestures(on: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/deletedisabled(_:)",
                        "title": "func deleteDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dialogicon(_:)",
                        "title": "func dialogIcon(Image?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dialogseverity(_:)",
                        "title": "func dialogSeverity(DialogSeverity) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dialogsuppressiontoggle(_:issuppressed:)-2gg4o",
                        "title": "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dialogsuppressiontoggle(_:issuppressed:)-4bnyh",
                        "title": "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dialogsuppressiontoggle(_:issuppressed:)-4i59d",
                        "title": "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dialogsuppressiontoggle(issuppressed:)",
                        "title": "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownaccessory(_:)",
                        "title": "func digitalCrownAccessory(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownaccessory(content:)",
                        "title": "func digitalCrownAccessory<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownrotation(_:)",
                        "title": "func digitalCrownRotation<V>(Binding<V>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownrotation(_:from:through:by:sensitivity:iscontinuous:ishapticfeedbackenabled:)",
                        "title": "func digitalCrownRotation<V>(Binding<V>, from: V, through: V, by: V.Stride?, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownrotation(_:from:through:sensitivity:iscontinuous:ishapticfeedbackenabled:onchange:onidle:)",
                        "title": "func digitalCrownRotation<V>(Binding<V>, from: V, through: V, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownrotation(_:onchange:onidle:)",
                        "title": "func digitalCrownRotation<V>(Binding<V>, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownrotation(detent:from:through:by:sensitivity:iscontinuous:ishapticfeedbackenabled:onchange:onidle:)-71qx8",
                        "title": "func digitalCrownRotation<V>(detent: Binding<V>, from: V, through: V, by: V.Stride, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/digitalcrownrotation(detent:from:through:by:sensitivity:iscontinuous:ishapticfeedbackenabled:onchange:onidle:)-9le29",
                        "title": "func digitalCrownRotation<V>(detent: Binding<V>, from: V, through: V, by: V.Stride, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/disableautocorrection(_:)",
                        "title": "func disableAutocorrection(Bool?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/disabled(_:)",
                        "title": "func disabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/disclosuregroupstyle(_:)",
                        "title": "func disclosureGroupStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/distortioneffect(_:maxsampleoffset:isenabled:)",
                        "title": "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/documentbrowsercontextmenu(_:)",
                        "title": "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/draggable(_:)",
                        "title": "func draggable<T>(@autoclosure () -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/draggable(_:preview:)",
                        "title": "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/drawinggroup(opaque:colormode:)",
                        "title": "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dropdestination(for:action:istargeted:)",
                        "title": "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dynamictypesize(_:)-35npg",
                        "title": "func dynamicTypeSize(DynamicTypeSize) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/dynamictypesize(_:)-6fwc8",
                        "title": "func dynamicTypeSize<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/edgesignoringsafearea(_:)",
                        "title": "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/environment(_:)",
                        "title": "func environment<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/environment(_:_:)",
                        "title": "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/environmentobject(_:)",
                        "title": "func environmentObject<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogbrowseroptions(_:)",
                        "title": "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogconfirmationlabel(_:)-1f9gu",
                        "title": "func fileDialogConfirmationLabel<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogconfirmationlabel(_:)-5p8j2",
                        "title": "func fileDialogConfirmationLabel(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogconfirmationlabel(_:)-6qedt",
                        "title": "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogcustomizationid(_:)",
                        "title": "func fileDialogCustomizationID(String) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogdefaultdirectory(_:)",
                        "title": "func fileDialogDefaultDirectory(URL?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogimportsunresolvedaliases(_:)",
                        "title": "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogmessage(_:)-10j3f",
                        "title": "func fileDialogMessage(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogmessage(_:)-6ma35",
                        "title": "func fileDialogMessage<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogmessage(_:)-7onfd",
                        "title": "func fileDialogMessage(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filedialogurlenabled(_:)",
                        "title": "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-17kco",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9hppr",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7law4",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-cd06",
                        "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:documents:contenttype:oncompletion:)-21pqy",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:documents:contenttype:oncompletion:)-2w4d5",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-78sdk",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-81d3y",
                        "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                        "title": "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                        "title": "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporterfilenamelabel(_:)-87zfp",
                        "title": "func fileExporterFilenameLabel(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporterfilenamelabel(_:)-9wqmq",
                        "title": "func fileExporterFilenameLabel<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileexporterfilenamelabel(_:)-upny",
                        "title": "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                        "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                        "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                        "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filemover(ispresented:file:oncompletion:)",
                        "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filemover(ispresented:file:oncompletion:oncancellation:)",
                        "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filemover(ispresented:files:oncompletion:)",
                        "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/filemover(ispresented:files:oncompletion:oncancellation:)",
                        "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/finddisabled(_:)",
                        "title": "func findDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/findnavigator(ispresented:)",
                        "title": "func findNavigator(isPresented: Binding<Bool>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fixedsize()",
                        "title": "func fixedSize() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fixedsize(horizontal:vertical:)",
                        "title": "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/flipsforrighttoleftlayoutdirection(_:)",
                        "title": "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focuseffectdisabled(_:)",
                        "title": "func focusEffectDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusscope(_:)",
                        "title": "func focusScope(Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focussection()",
                        "title": "func focusSection() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusable(_:)",
                        "title": "func focusable(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusable(_:interactions:)",
                        "title": "func focusable(Bool, interactions: FocusInteractions) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/focusable(_:onfocuschange:)",
                        "title": "func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focused(_:)",
                        "title": "func focused(FocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focused(_:equals:)",
                        "title": "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedobject(_:)-5ystg",
                        "title": "func focusedObject<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedobject(_:)-904vr",
                        "title": "func focusedObject<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedsceneobject(_:)-1dhe7",
                        "title": "func focusedSceneObject<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedsceneobject(_:)-1rgta",
                        "title": "func focusedSceneObject<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedscenevalue(_:)",
                        "title": "func focusedSceneValue<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedscenevalue(_:_:)-9tmzi",
                        "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedscenevalue(_:_:)-nzj",
                        "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedvalue(_:)",
                        "title": "func focusedValue<T>(T?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedvalue(_:_:)-26gc7",
                        "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/focusedvalue(_:_:)-70qff",
                        "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/font(_:)",
                        "title": "func font(Font?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fontdesign(_:)",
                        "title": "func fontDesign(Font.Design?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fontweight(_:)",
                        "title": "func fontWeight(Font.Weight?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fontwidth(_:)",
                        "title": "func fontWidth(Font.Width?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/foregroundcolor(_:)",
                        "title": "func foregroundColor(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/foregroundstyle(_:)",
                        "title": "func foregroundStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/foregroundstyle(_:_:)",
                        "title": "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/foregroundstyle(_:_:_:)",
                        "title": "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/formstyle(_:)",
                        "title": "func formStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/frame()",
                        "title": "func frame() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/frame(depth:alignment:)",
                        "title": "func frame(depth: CGFloat?, alignment: DepthAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/frame(mindepth:idealdepth:maxdepth:alignment:)",
                        "title": "func frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                        "title": "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/frame(width:height:alignment:)",
                        "title": "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fullscreencover(ispresented:ondismiss:content:)",
                        "title": "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/fullscreencover(item:ondismiss:content:)",
                        "title": "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gaugestyle(_:)",
                        "title": "func gaugeStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/geometrygroup()",
                        "title": "func geometryGroup() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gesture(_:)",
                        "title": "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gesture(_:including:)",
                        "title": "func gesture<T>(T, including: GestureMask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gesture(_:isenabled:)",
                        "title": "func gesture<T>(T, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gesture(_:name:isenabled:)",
                        "title": "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/glassbackgroundeffect(_:displaymode:)",
                        "title": "func glassBackgroundEffect<S>(S, displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/glassbackgroundeffect(_:in:displaymode:)",
                        "title": "func glassBackgroundEffect<T, S>(S, in: T, displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/glassbackgroundeffect(displaymode:)",
                        "title": "func glassBackgroundEffect(displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/glassbackgroundeffect(in:displaymode:)",
                        "title": "func glassBackgroundEffect<S>(in: S, displayMode: GlassBackgroundDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/grayscale(_:)",
                        "title": "func grayscale(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gridcellanchor(_:)",
                        "title": "func gridCellAnchor(UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gridcellcolumns(_:)",
                        "title": "func gridCellColumns(Int) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gridcellunsizedaxes(_:)",
                        "title": "func gridCellUnsizedAxes(Axis.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/gridcolumnalignment(_:)",
                        "title": "func gridColumnAlignment(HorizontalAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/groupboxstyle(_:)",
                        "title": "func groupBoxStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/handgestureshortcut(_:isenabled:)",
                        "title": "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/handpointerbehavior(_:)",
                        "title": "func handPointerBehavior(HandPointerBehavior?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/handlesexternalevents(preferring:allowing:)",
                        "title": "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/headerprominence(_:)",
                        "title": "func headerProminence(Prominence) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/help(_:)-4nmvc",
                        "title": "func help(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/help(_:)-7jlf4",
                        "title": "func help<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/help(_:)-kk5m",
                        "title": "func help(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hidden()",
                        "title": "func hidden() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/highprioritygesture(_:including:)",
                        "title": "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/highprioritygesture(_:isenabled:)",
                        "title": "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/highprioritygesture(_:name:isenabled:)",
                        "title": "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffect(_:)",
                        "title": "func hoverEffect(HoverEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffect(_:in:isenabled:)",
                        "title": "func hoverEffect(some CustomHoverEffect, in: HoverEffectGroup?, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffect(_:isenabled:)-4olq1",
                        "title": "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffect(_:isenabled:)-5s9e4",
                        "title": "func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffect(in:isenabled:body:)",
                        "title": "func hoverEffect(in: HoverEffectGroup?, isEnabled: Bool, body: (EmptyHoverEffectContent, Bool, GeometryProxy) -> some HoverEffectContent) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffectdisabled(_:)",
                        "title": "func hoverEffectDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffectgroup()",
                        "title": "func hoverEffectGroup() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffectgroup(_:)",
                        "title": "func hoverEffectGroup(HoverEffectGroup?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/hovereffectgroup(id:in:behavior:)",
                        "title": "func hoverEffectGroup(id: String?, in: Namespace.ID, behavior: HoverEffectGroup.Behavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/huerotation(_:)",
                        "title": "func hueRotation(Angle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/id(_:)",
                        "title": "func id<ID>(ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ignoressafearea(_:edges:)",
                        "title": "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/imagescale(_:)",
                        "title": "func imageScale(Image.Scale) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/immersiveenvironmentpicker(content:)",
                        "title": "func immersiveEnvironmentPicker<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/indexviewstyle(_:)",
                        "title": "func indexViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/inspector(ispresented:content:)",
                        "title": "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/inspectorcolumnwidth(_:)",
                        "title": "func inspectorColumnWidth(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/inspectorcolumnwidth(min:ideal:max:)",
                        "title": "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/interactionactivitytrackingtag(_:)",
                        "title": "func interactionActivityTrackingTag(String) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/interactivedismissdisabled(_:)",
                        "title": "func interactiveDismissDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/invalidatablecontent(_:)",
                        "title": "func invalidatableContent(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/italic(_:)",
                        "title": "func italic(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/itemprovider(_:)",
                        "title": "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/kerning(_:)",
                        "title": "func kerning(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyboardshortcut(_:)-15l70",
                        "title": "func keyboardShortcut(KeyboardShortcut?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyboardshortcut(_:)-1b89i",
                        "title": "func keyboardShortcut(KeyboardShortcut) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyboardshortcut(_:modifiers:)",
                        "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyboardshortcut(_:modifiers:localization:)",
                        "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyboardtype(_:)",
                        "title": "func keyboardType(UIKeyboardType) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                        "title": "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                        "title": "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/labelstyle(_:)",
                        "title": "func labelStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/labeledcontentstyle(_:)",
                        "title": "func labeledContentStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/labelshidden()",
                        "title": "func labelsHidden() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/labelsvisibility(_:)",
                        "title": "func labelsVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/layereffect(_:maxsampleoffset:isenabled:)",
                        "title": "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/layoutdirectionbehavior(_:)",
                        "title": "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/layoutpriority(_:)",
                        "title": "func layoutPriority(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/layoutvalue(key:value:)",
                        "title": "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/linelimit(_:)-403n",
                        "title": "func lineLimit(PartialRangeFrom<Int>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/linelimit(_:)-6kgqe",
                        "title": "func lineLimit(Int?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/linelimit(_:)-9bloz",
                        "title": "func lineLimit(ClosedRange<Int>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/linelimit(_:)-9ksll",
                        "title": "func lineLimit(PartialRangeThrough<Int>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/linelimit(_:reservesspace:)",
                        "title": "func lineLimit(Int, reservesSpace: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/linespacing(_:)",
                        "title": "func lineSpacing(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listitemtint(_:)-6ws7n",
                        "title": "func listItemTint(ListItemTint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listitemtint(_:)-92gz",
                        "title": "func listItemTint(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowbackground(_:)",
                        "title": "func listRowBackground<V>(V?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowhovereffect(_:)",
                        "title": "func listRowHoverEffect(HoverEffect?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowhovereffectdisabled(_:)",
                        "title": "func listRowHoverEffectDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowinsets(_:)",
                        "title": "func listRowInsets(EdgeInsets?) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/listrowplattercolor(_:)",
                        "title": "func listRowPlatterColor(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowseparator(_:edges:)",
                        "title": "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowseparatortint(_:edges:)",
                        "title": "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listrowspacing(_:)",
                        "title": "func listRowSpacing(CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listsectionseparator(_:edges:)",
                        "title": "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listsectionseparatortint(_:edges:)",
                        "title": "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listsectionspacing(_:)-18ydr",
                        "title": "func listSectionSpacing(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/listsectionspacing(_:)-ggpd",
                        "title": "func listSectionSpacing(ListSectionSpacing) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/liststyle(_:)",
                        "title": "func listStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/luminancetoalpha()",
                        "title": "func luminanceToAlpha() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/mask(_:)",
                        "title": "func mask<Mask>(Mask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/mask(alignment:_:)",
                        "title": "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                        "title": "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/matchedtransitionsource(id:in:)",
                        "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/matchedtransitionsource(id:in:configuration:)",
                        "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/materialactiveappearance(_:)",
                        "title": "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/menuactiondismissbehavior(_:)",
                        "title": "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/menuindicator(_:)",
                        "title": "func menuIndicator(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/menuorder(_:)",
                        "title": "func menuOrder(MenuOrder) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/menustyle(_:)",
                        "title": "func menuStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/minimumscalefactor(_:)",
                        "title": "func minimumScaleFactor(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/modifier(_:)",
                        "title": "func modifier<T>(T) -> ModifiedContent<Self, T>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/monospaced(_:)",
                        "title": "func monospaced(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/monospaceddigit()",
                        "title": "func monospacedDigit() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/movedisabled(_:)",
                        "title": "func moveDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/multilinetextalignment(_:)",
                        "title": "func multilineTextAlignment(TextAlignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbarbackbuttonhidden(_:)",
                        "title": "func navigationBarBackButtonHidden(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbarhidden(_:)",
                        "title": "func navigationBarHidden(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbaritems(leading:)",
                        "title": "func navigationBarItems<L>(leading: L) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbaritems(leading:trailing:)",
                        "title": "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbaritems(trailing:)",
                        "title": "func navigationBarItems<T>(trailing: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbartitle(_:)-1dovc",
                        "title": "func navigationBarTitle(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbartitle(_:)-89c2e",
                        "title": "func navigationBarTitle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbartitle(_:)-a4mx",
                        "title": "func navigationBarTitle(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/navigationbartitle(_:displaymode:)-6z4in",
                        "title": "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/navigationbartitle(_:displaymode:)-6zfhs",
                        "title": "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/navigationbartitle(_:displaymode:)-a4gh",
                        "title": "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationbartitledisplaymode(_:)",
                        "title": "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdestination(for:destination:)",
                        "title": "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdestination(ispresented:destination:)",
                        "title": "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdestination(item:destination:)",
                        "title": "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdocument(_:)-18adw",
                        "title": "func navigationDocument<D>(D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdocument(_:)-1ecr1",
                        "title": "func navigationDocument(URL) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdocument(_:preview:)-1ghmc",
                        "title": "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdocument(_:preview:)-3jmo4",
                        "title": "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdocument(_:preview:)-60ku2",
                        "title": "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationdocument(_:preview:)-850xe",
                        "title": "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationsplitviewcolumnwidth(_:)",
                        "title": "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationsplitviewcolumnwidth(min:ideal:max:)",
                        "title": "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationsplitviewstyle(_:)",
                        "title": "func navigationSplitViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationtitle(_:)-177pz",
                        "title": "func navigationTitle(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationtitle(_:)-49aqv",
                        "title": "func navigationTitle(Text) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationtitle(_:)-8glz7",
                        "title": "func navigationTitle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationtitle(_:)-9gysv",
                        "title": "func navigationTitle(Binding<String>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationtitle(_:)-f89w",
                        "title": "func navigationTitle<V>(() -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationtransition(_:)",
                        "title": "func navigationTransition(some NavigationTransition) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/navigationviewstyle(_:)",
                        "title": "func navigationViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/offset(_:)",
                        "title": "func offset(CGSize) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/offset(x:y:)",
                        "title": "func offset(x: CGFloat, y: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/offset(z:)",
                        "title": "func offset(z: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onappear(perform:)",
                        "title": "func onAppear(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onchange(of:initial:_:)-18r0d",
                        "title": "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onchange(of:initial:_:)-8lkyg",
                        "title": "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/onchange(of:perform:)",
                        "title": "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/oncontinueuseractivity(_:perform:)",
                        "title": "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/oncontinuoushover(coordinatespace:perform:)",
                        "title": "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondeletecommand(perform:)",
                        "title": "func onDeleteCommand(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondisappear(perform:)",
                        "title": "func onDisappear(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondrag(_:)",
                        "title": "func onDrag(() -> NSItemProvider) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondrag(_:preview:)",
                        "title": "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondrop(of:delegate:)-25ttd",
                        "title": "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/ondrop(of:delegate:)-3pbby",
                        "title": "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondrop(of:istargeted:perform:)-4zb0x",
                        "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ondrop(of:istargeted:perform:)-85cnr",
                        "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/ondrop(of:istargeted:perform:)-9hrno",
                        "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/ondrop(of:istargeted:perform:)-9wlyq",
                        "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onexitcommand(perform:)",
                        "title": "func onExitCommand(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ongeometrychange(for:of:action:)-6rwmq",
                        "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ongeometrychange(for:of:action:)-8osqr",
                        "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ongeometrychange3d(for:of:action:)-2yniw",
                        "title": "func onGeometryChange3D<T>(for: T.Type, of: (GeometryProxy3D) -> T, action: (T, T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ongeometrychange3d(for:of:action:)-81o6o",
                        "title": "func onGeometryChange3D<T>(for: T.Type, of: (GeometryProxy3D) -> T, action: (T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onhover(perform:)",
                        "title": "func onHover(perform: (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onimmersionchange(initial:_:)",
                        "title": "func onImmersionChange(initial: Bool, (ImmersionChangeContext, ImmersionChangeContext) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onkeypress(_:action:)",
                        "title": "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onkeypress(_:phases:action:)",
                        "title": "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onkeypress(characters:phases:action:)",
                        "title": "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onkeypress(keys:phases:action:)",
                        "title": "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onkeypress(phases:action:)",
                        "title": "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onlongpressgesture(minimumduration:pressing:perform:)",
                        "title": "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onlongtouchgesture(minimumduration:perform:ontouchingchanged:)",
                        "title": "func onLongTouchGesture(minimumDuration: Double, perform: () -> Void, onTouchingChanged: ((Bool) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onmovecommand(perform:)",
                        "title": "func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onopenurl(perform:)",
                        "title": "func onOpenURL(perform: (URL) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onpencildoubletap(perform:)",
                        "title": "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onpencilsqueeze(perform:)",
                        "title": "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onplaypausecommand(perform:)",
                        "title": "func onPlayPauseCommand(perform: (() -> Void)?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onpreferencechange(_:perform:)",
                        "title": "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onreceive(_:perform:)",
                        "title": "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onscrollgeometrychange(for:of:action:)",
                        "title": "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onscrollphasechange(_:)-3xxpt",
                        "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onscrollphasechange(_:)-8nczc",
                        "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                        "title": "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onscrollvisibilitychange(threshold:_:)",
                        "title": "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onsubmit(of:_:)",
                        "title": "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/ontapgesture(count:coordinatespace:perform:)",
                        "title": "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ontapgesture(count:perform:)",
                        "title": "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/onvolumeviewpointchange(updatestrategy:initial:_:)",
                        "title": "func onVolumeViewpointChange(updateStrategy: VolumeViewpointUpdateStrategy, initial: Bool, (Viewpoint3D, Viewpoint3D) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/opacity(_:)",
                        "title": "func opacity(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/ornament(visibility:attachmentanchor:contentalignment:ornament:)",
                        "title": "func ornament<Content>(visibility: Visibility, attachmentAnchor: OrnamentAttachmentAnchor, contentAlignment: Alignment, ornament: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/overlay(_:alignment:)",
                        "title": "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/overlay(_:ignoressafeareaedges:)",
                        "title": "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/overlay(_:in:fillstyle:)",
                        "title": "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/overlay(alignment:content:)",
                        "title": "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/overlaypreferencevalue(_:_:)",
                        "title": "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/overlaypreferencevalue(_:alignment:_:)",
                        "title": "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/padding(_:)-30csa",
                        "title": "func padding(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/padding(_:)-55xnh",
                        "title": "func padding(EdgeInsets) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/padding(_:_:)",
                        "title": "func padding(Edge.Set, CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/padding3d(_:)-6c0yb",
                        "title": "func padding3D(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/padding3d(_:)-8wye6",
                        "title": "func padding3D(EdgeInsets3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/padding3d(_:_:)",
                        "title": "func padding3D(Edge3D.Set, CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/pagecommand(value:in:step:)",
                        "title": "func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/paletteselectioneffect(_:)",
                        "title": "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/persistentsystemoverlays(_:)",
                        "title": "func persistentSystemOverlays(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/perspectiverotationeffect(_:axis:anchor:anchorz:perspective:)",
                        "title": "func perspectiveRotationEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/phaseanimator(_:content:animation:)",
                        "title": "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/phaseanimator(_:trigger:content:animation:)",
                        "title": "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/pickerstyle(_:)",
                        "title": "func pickerStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/pointerstyle(_:)",
                        "title": "func pointerStyle(PointerStyle?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/popover(ispresented:attachmentanchor:arrowedge:content:)",
                        "title": "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/popover(item:attachmentanchor:arrowedge:content:)",
                        "title": "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/position(_:)",
                        "title": "func position(CGPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/position(x:y:)",
                        "title": "func position(x: CGFloat, y: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/preference(key:value:)",
                        "title": "func preference<K>(key: K.Type, value: K.Value) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/preferredcolorscheme(_:)",
                        "title": "func preferredColorScheme(ColorScheme?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/preferredsurroundingseffect(_:)",
                        "title": "func preferredSurroundingsEffect(SurroundingsEffect?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/prefersdefaultfocus(_:in:)",
                        "title": "func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationbackground(_:)",
                        "title": "func presentationBackground<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationbackground(alignment:content:)",
                        "title": "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationbackgroundinteraction(_:)",
                        "title": "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationcompactadaptation(_:)",
                        "title": "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationcompactadaptation(horizontal:vertical:)",
                        "title": "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationcontentinteraction(_:)",
                        "title": "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationcornerradius(_:)",
                        "title": "func presentationCornerRadius(CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationdetents(_:)",
                        "title": "func presentationDetents(Set<PresentationDetent>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationdetents(_:selection:)",
                        "title": "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationdragindicator(_:)",
                        "title": "func presentationDragIndicator(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/presentationsizing(_:)",
                        "title": "func presentationSizing(some PresentationSizing) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/previewcontext(_:)",
                        "title": "func previewContext<C>(C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/previewdevice(_:)",
                        "title": "func previewDevice(PreviewDevice?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/previewdisplayname(_:)",
                        "title": "func previewDisplayName(String?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/previewinterfaceorientation(_:)",
                        "title": "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/previewlayout(_:)",
                        "title": "func previewLayout(PreviewLayout) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/privacysensitive(_:)",
                        "title": "func privacySensitive(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/progressviewstyle(_:)",
                        "title": "func progressViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/projectioneffect(_:)",
                        "title": "func projectionEffect(ProjectionTransform) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/redacted(reason:)",
                        "title": "func redacted(reason: RedactionReasons) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/refreshable(action:)",
                        "title": "func refreshable(action: () async -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/renameaction(_:)-4lrtd",
                        "title": "func renameAction(FocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/renameaction(_:)-77d9w",
                        "title": "func renameAction(() -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/replacedisabled(_:)",
                        "title": "func replaceDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/rotation3deffect(_:anchor:)",
                        "title": "func rotation3DEffect(Rotation3D, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/rotation3deffect(_:axis:anchor:)-1n55i",
                        "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/rotation3deffect(_:axis:anchor:)-1r2qo",
                        "title": "func rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> ModifiedContent<Self, _Rotation3DEffectAngleAxis>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/rotation3deffect(_:axis:anchor:)-2lin1",
                        "title": "func rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                        "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/rotationeffect(_:anchor:)",
                        "title": "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/safeareainset(edge:alignment:spacing:content:)-5juls",
                        "title": "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/safeareainset(edge:alignment:spacing:content:)-6lq7i",
                        "title": "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/safeareapadding(_:)-5idki",
                        "title": "func safeAreaPadding(EdgeInsets) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/safeareapadding(_:)-szod",
                        "title": "func safeAreaPadding(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/safeareapadding(_:_:)",
                        "title": "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/saturation(_:)",
                        "title": "func saturation(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(_:anchor:)-1iyte",
                        "title": "func scaleEffect(Size3D, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(_:anchor:)-2wl96",
                        "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> ModifiedContent<Self, _UniformScaleEffect>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(_:anchor:)-3u552",
                        "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(_:anchor:)-5wy2l",
                        "title": "func scaleEffect(CGFloat, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(_:anchor:)-7xyx",
                        "title": "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(x:y:anchor:)",
                        "title": "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaleeffect(x:y:z:anchor:)",
                        "title": "func scaleEffect(x: CGFloat, y: CGFloat, z: CGFloat, anchor: UnitPoint3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaledtofill()",
                        "title": "func scaledToFill() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scaledtofit()",
                        "title": "func scaledToFit() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scenepadding(_:)",
                        "title": "func scenePadding(Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scenepadding(_:edges:)",
                        "title": "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollbouncebehavior(_:axes:)",
                        "title": "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollclipdisabled(_:)",
                        "title": "func scrollClipDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollcontentbackground(_:)",
                        "title": "func scrollContentBackground(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrolldisabled(_:)",
                        "title": "func scrollDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrolldismisseskeyboard(_:)",
                        "title": "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollindicators(_:axes:)",
                        "title": "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollindicatorsflash(onappear:)",
                        "title": "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollindicatorsflash(trigger:)",
                        "title": "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollinputbehavior(_:for:)",
                        "title": "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollposition(_:anchor:)",
                        "title": "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrollposition(id:anchor:)",
                        "title": "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrolltargetbehavior(_:)",
                        "title": "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrolltargetlayout(isenabled:)",
                        "title": "func scrollTargetLayout(isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrolltransition(_:axis:transition:)",
                        "title": "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                        "title": "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchcompletion(_:)-3unl1",
                        "title": "func searchCompletion<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchcompletion(_:)-40k0h",
                        "title": "func searchCompletion(String) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchdictationbehavior(_:)",
                        "title": "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchfocused(_:)",
                        "title": "func searchFocused(FocusState<Bool>.Binding) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchfocused(_:equals:)",
                        "title": "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchpresentationtoolbarbehavior(_:)",
                        "title": "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchscopes(_:activation:_:)",
                        "title": "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchscopes(_:scopes:)",
                        "title": "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchsuggestions(_:)",
                        "title": "func searchSuggestions<S>(() -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchsuggestions(_:for:)",
                        "title": "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6asb",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6n2un",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8tjlr",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:editabletokens:placement:prompt:token:)-777eo",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:editabletokens:placement:prompt:token:)-7qv0r",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:editabletokens:placement:prompt:token:)-9umjl",
                        "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:ispresented:placement:prompt:)-5no2m",
                        "title": "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:ispresented:placement:prompt:)-6wgrt",
                        "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:ispresented:placement:prompt:)-80rmz",
                        "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:placement:prompt:)-71fcn",
                        "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:placement:prompt:)-8bhtt",
                        "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:placement:prompt:)-98b0g",
                        "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:placement:prompt:suggestions:)-3h6q5",
                        "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:placement:prompt:suggestions:)-58qku",
                        "title": "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:placement:prompt:suggestions:)-skch",
                        "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:ispresented:placement:prompt:token:)-8cpmp",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:ispresented:placement:prompt:token:)-8vatr",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:ispresented:placement:prompt:token:)-dxwe",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:placement:prompt:token:)-5es8q",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:placement:prompt:token:)-65y23",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:placement:prompt:token:)-aptj",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3d21p",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5uzbt",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8k677",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4m8hw",
                        "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8dc6d",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-96780",
                        "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/sectionactions(content:)",
                        "title": "func sectionActions<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/selectiondisabled(_:)",
                        "title": "func selectionDisabled(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/sensoryfeedback(_:trigger:)",
                        "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/sensoryfeedback(_:trigger:condition:)",
                        "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/sensoryfeedback(trigger:_:)",
                        "title": "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/shadow(color:radius:x:y:)",
                        "title": "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/sheet(ispresented:ondismiss:content:)",
                        "title": "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/sheet(item:ondismiss:content:)",
                        "title": "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/shortcutslinkstyle(_:)",
                        "title": "func shortcutsLinkStyle(ShortcutsLinkStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/simultaneousgesture(_:including:)",
                        "title": "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/simultaneousgesture(_:isenabled:)",
                        "title": "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/simultaneousgesture(_:name:isenabled:)",
                        "title": "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/siritipviewstyle(_:)",
                        "title": "func siriTipViewStyle(SiriTipViewStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/speechadjustedpitch(_:)",
                        "title": "func speechAdjustedPitch(Double) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/speechalwaysincludespunctuation(_:)",
                        "title": "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/speechannouncementsqueued(_:)",
                        "title": "func speechAnnouncementsQueued(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/speechspellsoutcharacters(_:)",
                        "title": "func speechSpellsOutCharacters(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/springloadingbehavior(_:)",
                        "title": "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/siritipview/statusbar(hidden:)",
                        "title": "func statusBar(hidden: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/statusbarhidden(_:)",
                        "title": "func statusBarHidden(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/strikethrough(_:pattern:color:)",
                        "title": "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/submitlabel(_:)",
                        "title": "func submitLabel(SubmitLabel) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/submitscope(_:)",
                        "title": "func submitScope(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/supportedvolumeviewpoints(_:)",
                        "title": "func supportedVolumeViewpoints(SquareAzimuth.Set) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/swipeactions(edge:allowsfullswipe:content:)",
                        "title": "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/symboleffect(_:options:isactive:)",
                        "title": "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/symboleffect(_:options:value:)",
                        "title": "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/symboleffectsremoved(_:)",
                        "title": "func symbolEffectsRemoved(Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/symbolrenderingmode(_:)",
                        "title": "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/symbolvariant(_:)",
                        "title": "func symbolVariant(SymbolVariants) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tabitem(_:)",
                        "title": "func tabItem<V>(() -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tabviewcustomization(_:)",
                        "title": "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tabviewsidebarbottombar(content:)",
                        "title": "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tabviewsidebarfooter(content:)",
                        "title": "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tabviewsidebarheader(content:)",
                        "title": "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tabviewstyle(_:)",
                        "title": "func tabViewStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tablecolumnheaders(_:)",
                        "title": "func tableColumnHeaders(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tablestyle(_:)",
                        "title": "func tableStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tag(_:includeoptional:)",
                        "title": "func tag<V>(V, includeOptional: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/task(id:priority:_:)",
                        "title": "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/task(priority:_:)",
                        "title": "func task(priority: TaskPriority, () async -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textcase(_:)",
                        "title": "func textCase(Text.Case?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textcontenttype(_:)-1lo79",
                        "title": "func textContentType(WKTextContentType?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textcontenttype(_:)-8xv7e",
                        "title": "func textContentType(UITextContentType?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/texteditorstyle(_:)",
                        "title": "func textEditorStyle(some TextEditorStyle) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textfieldstyle(_:)",
                        "title": "func textFieldStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textinputautocapitalization(_:)",
                        "title": "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textrenderer(_:)",
                        "title": "func textRenderer<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textscale(_:isenabled:)",
                        "title": "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textselection(_:)",
                        "title": "func textSelection<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/textselectionaffinity(_:)",
                        "title": "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tint(_:)",
                        "title": "func tint(Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/togglestyle(_:)",
                        "title": "func toggleStyle<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbar(_:for:)",
                        "title": "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbar(content:)-20bc1",
                        "title": "func toolbar<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbar(content:)-60e73",
                        "title": "func toolbar<Content>(content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbar(id:content:)",
                        "title": "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbar(removing:)",
                        "title": "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarbackground(_:for:)-1kvv0",
                        "title": "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarbackground(_:for:)-3wmto",
                        "title": "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarbackgroundvisibility(_:for:)",
                        "title": "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarcolorscheme(_:for:)",
                        "title": "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarforegroundstyle(_:for:)",
                        "title": "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarrole(_:)",
                        "title": "func toolbarRole(ToolbarRole) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbartitledisplaymode(_:)",
                        "title": "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbartitlemenu(content:)",
                        "title": "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/toolbarvisibility(_:for:)",
                        "title": "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/tracking(_:)",
                        "title": "func tracking(CGFloat) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transaction(_:)",
                        "title": "func transaction((inout Transaction) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transaction(_:body:)",
                        "title": "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transaction(value:_:)",
                        "title": "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transform3deffect(_:)",
                        "title": "func transform3DEffect(AffineTransform3D) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transformanchorpreference(key:value:transform:)",
                        "title": "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transformeffect(_:)",
                        "title": "func transformEffect(CGAffineTransform) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transformenvironment(_:transform:)",
                        "title": "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transformpreference(_:_:)",
                        "title": "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transition(_:)-2qxdu",
                        "title": "func transition<T>(T) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/transition(_:)-o3px",
                        "title": "func transition(AnyTransition) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/truncationmode(_:)",
                        "title": "func truncationMode(Text.TruncationMode) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/typeselectequivalent(_:)-3agnh",
                        "title": "func typeSelectEquivalent<S>(S) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/typeselectequivalent(_:)-3nqx1",
                        "title": "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/typeselectequivalent(_:)-3tubc",
                        "title": "func typeSelectEquivalent(Text?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/typesettinglanguage(_:isenabled:)-8fbs0",
                        "title": "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/typesettinglanguage(_:isenabled:)-h5v7",
                        "title": "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/underline(_:pattern:color:)",
                        "title": "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/unredacted()",
                        "title": "func unredacted() -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/upperlimbvisibility(_:)",
                        "title": "func upperLimbVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/useractivity(_:element:_:)",
                        "title": "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/useractivity(_:isactive:_:)",
                        "title": "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/visualeffect(_:)",
                        "title": "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/visualeffect3d(_:)",
                        "title": "func visualEffect3D((EmptyVisualEffect, GeometryProxy3D) -> some VisualEffect) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/volumebaseplatevisibility(_:)",
                        "title": "func volumeBaseplateVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/windowtoolbarfullscreenvisibility(_:)",
                        "title": "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                        "type": "method"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/siritipview/writingtoolsaffordancevisibility(_:)",
                        "title": "func writingToolsAffordanceVisibility(Visibility) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/writingtoolsbehavior(_:)",
                        "title": "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/siritipview/zindex(_:)",
                        "title": "func zIndex(Double) -> some View",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/siritipview/view-implementations",
                    "title": "View Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/siritipview",
                "title": "SiriTipView",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the styles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipviewstyle/automatic",
                    "title": "static let automatic: SiriTipViewStyle",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/siritipviewstyle/dark",
                    "title": "static let dark: SiriTipViewStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/siritipviewstyle/light",
                    "title": "static let light: SiriTipViewStyle",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/siritipviewstyle",
                "title": "SiriTipViewStyle",
                "type": "struct"
              }
            ],
            "path": "/documentation/appintents/app-shortcuts",
            "title": "App Shortcuts",
            "type": "collection"
          },
          {
            "title": "Parameters, custom data types, and queries",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/adding-parameters-to-an-app-intent",
            "title": "Adding parameters to an app intent",
            "type": "article"
          },
          {
            "path": "/documentation/appintents/integrating-custom-types-into-your-intents",
            "title": "Integrating custom data types into your intents",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Intent parameters",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an intent parameter for primitive types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-86n3q",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-8ej37",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:)-2wjbq",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)-83igq",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/inclusiverange-swift.typealias",
                        "title": "IntentParameter.InclusiveRange",
                        "type": "typealias"
                      },
                      {
                        "title": "Accessing the control style",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/controlstyle-4q1s9",
                        "title": "var controlStyle: IntentParameter<Value>.IntControlStyle?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/intcontrolstyle/==(_:_:)",
                            "title": "static func == (IntentParameter<Value>.IntControlStyle, IntentParameter<Value>.IntControlStyle) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/intcontrolstyle/field",
                            "title": "case field",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/intcontrolstyle/stepper",
                            "title": "case stepper",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/intcontrolstyle/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/intcontrolstyle/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/intcontrolstyle/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/intcontrolstyle/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter/intcontrolstyle",
                        "title": "IntentParameter.IntControlStyle",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-int",
                    "title": "Integers",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-3la41",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-2iugu",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:)-4mc52",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)-9yclx",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/inclusiverange-swift.typealias",
                        "title": "IntentParameter.InclusiveRange",
                        "type": "typealias"
                      },
                      {
                        "title": "Accessing the control style",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/controlstyle-5ryd1",
                        "title": "var controlStyle: IntentParameter<Value>.DoubleControlStyle?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/==(_:_:)",
                            "title": "static func == (IntentParameter<Value>.DoubleControlStyle, IntentParameter<Value>.DoubleControlStyle) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/field",
                            "title": "case field",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/slider",
                            "title": "case slider",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/stepper",
                            "title": "case stepper",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/doublecontrolstyle/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/doublecontrolstyle/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter/doublecontrolstyle",
                        "title": "IntentParameter.DoubleControlStyle",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-double",
                    "title": "Doubles",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:displayname:requestvaluedialog:inputconnectionbehavior:)",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, displayName: Bool.IntentDisplayName?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:displayname:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, displayName: Bool.IntentDisplayName?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Specifying the display name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/displayname",
                        "title": "var displayName: Bool.IntentDisplayName?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-boolean",
                    "title": "Booleans",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter for a string",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:inputoptions:requestvaluedialog:inputconnectionbehavior:)",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:inputoptions:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:inputoptions:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:inputoptions:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Creating an intent parameter for an attributed string",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:)-5ouxs",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-7u5zw",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-2i6xs",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-7dvis",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the input options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/inputoptions",
                        "title": "var inputOptions: String.IntentInputOptions?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-string",
                    "title": "Strings",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-17a31",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:)-518bz",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:)-9wlo0",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: [Value.ValueType?], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-6mfw6",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: [Value.ValueType?], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-7lt0",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-17a31",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-8g3g7",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-url",
                    "title": "URLs",
                    "type": "collection"
                  },
                  {
                    "title": "Creating an intent parameter for common framework types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:)-97fq8",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-1adrk",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-3hg6n",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:resolvers:)-6834b",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the date kind",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/datekind-15hd7",
                        "title": "var dateKind: IntentParameter<Value>.DateKind?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/==(_:_:)",
                            "title": "static func == (IntentParameter<Value>.DateKind, IntentParameter<Value>.DateKind) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/date",
                            "title": "case date",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/datetime",
                            "title": "case dateTime",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/time",
                            "title": "case time",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/datekind-swift.enum/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter/datekind-swift.enum",
                        "title": "IntentParameter.DateKind",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-date",
                    "title": "Dates",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:)-1no2a",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-38o37",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-4438x",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:kind:requestvaluedialog:inputconnectionbehavior:resolvers:)-8vfnx",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the date kind",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/datekind-7wjso",
                        "title": "var dateKind: IntentParameter<Value>.DateKind?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/==(_:_:)",
                            "title": "static func == (IntentParameter<Value>.DateKind, IntentParameter<Value>.DateKind) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/date",
                            "title": "case date",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/datetime",
                            "title": "case dateTime",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/time",
                            "title": "case time",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/datekind-swift.enum/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/datekind-swift.enum/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter/datekind-swift.enum",
                        "title": "IntentParameter.DateKind",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-date-components",
                    "title": "Date components",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedtypeidentifiers:requestvaluedialog:inputconnectionbehavior:)",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedTypeIdentifiers: [String], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedtypeidentifiers:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedTypeIdentifiers: [String], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/intentparameter/init(title:description:supportedtypeidentifiers:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, supportedTypeIdentifiers: [String], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/intentparameter/init(title:description:supportedtypeidentifiers:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, supportedTypeIdentifiers: [String], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-file",
                    "title": "Files",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:)",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the configuration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/currencycodes",
                        "title": "var currencyCodes: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/inclusiverange-swift.property",
                        "title": "var inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/inclusiverange-swift.typealias",
                        "title": "IntentParameter.InclusiveRange",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-currencies",
                    "title": "Currencies",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7urpy",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-7y2uj",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-1x2m9",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-payments",
                    "title": "Payments",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:mode:requestvaluedialog:inputconnectionbehavior:)",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:mode:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:mode:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:mode:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:mode:size:inputconnectionbehavior:)-1i2sn",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, mode: IntentPerson.ParameterMode, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:mode:size:inputconnectionbehavior:)-6efsz",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, mode: IntentPerson.ParameterMode, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the parameter mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/parametermode",
                        "title": "var parameterMode: IntentPerson.ParameterMode?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the interface type",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/contact",
                            "title": "case contact",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/email",
                            "title": "case email",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/emailorphone",
                            "title": "case emailOrPhone",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/phone",
                            "title": "case phone",
                            "type": "case"
                          },
                          {
                            "title": "Creating a parameter mode",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/init(rawvalue:)",
                            "title": "init?(rawValue: String)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/rawvalue-swift.property",
                            "title": "var rawValue: String",
                            "type": "property"
                          },
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/rawvalue-swift.typealias",
                            "title": "IntentPerson.ParameterMode.RawValue",
                            "type": "typealias"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/parametermode/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/parametermode/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/parametermode/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/parametermode/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/parametermode/rawrepresentable-implementations",
                            "title": "RawRepresentable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/parametermode",
                        "title": "IntentPerson.ParameterMode",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-person",
                    "title": "People",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:displaystyle:requestvaluedialog:inputconnectionbehavior:)",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:displaystyle:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:displaystyle:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:displaystyle:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the display style",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/displaystyle",
                        "title": "var displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the display styles",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/name",
                            "title": "case name",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/address",
                            "title": "case address",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/city",
                            "title": "case city",
                            "type": "case"
                          },
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/==(_:_:)",
                            "title": "static func == (IntentParameter<Value>.PlacemarkDisplayStyle, IntentParameter<Value>.PlacemarkDisplayStyle) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter/placemarkdisplaystyle",
                        "title": "IntentParameter.PlacemarkDisplayStyle",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-placemark",
                    "title": "Placemarks",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter for measurements",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1rgf3",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Acceleration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-l3in",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Acceleration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6r9fy",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Acceleration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4yeng",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Acceleration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-ytbn",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-5q8nx",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-4kgwq",
                            "title": "var unit: IntentParameter<Value>.Acceleration?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/acceleration/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Acceleration, IntentParameter<Value>.Acceleration) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/acceleration/gravity",
                                "title": "case gravity",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/acceleration/meterspersecondsquared",
                                "title": "case metersPerSecondSquared",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/acceleration/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/acceleration/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/acceleration/allcases-swift.typealias",
                                    "title": "IntentParameter.Acceleration.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/acceleration/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Acceleration]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/acceleration/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/acceleration/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/acceleration/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/acceleration",
                            "title": "IntentParameter.Acceleration",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-6s3bu",
                            "title": "var defaultUnit: IntentParameter<Value>.Acceleration?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-8d17e",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-2jck9",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-acceleration",
                        "title": "Acceleration",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8tn46",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Angle?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-6avu3",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Angle?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6ib0k",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Angle, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-8j7z1",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Angle, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-25607",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-7tt26",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-egg9",
                            "title": "var unit: IntentParameter<Value>.Angle?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Angle, IntentParameter<Value>.Angle) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/arcminutes",
                                "title": "case arcMinutes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/arcseconds",
                                "title": "case arcSeconds",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/degrees",
                                "title": "case degrees",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/gradians",
                                "title": "case gradians",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/radians",
                                "title": "case radians",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/revolutions",
                                "title": "case revolutions",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/angle/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/angle/allcases-swift.typealias",
                                    "title": "IntentParameter.Angle.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/angle/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Angle]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/angle/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/angle/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/angle/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/angle",
                            "title": "IntentParameter.Angle",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-9huqe",
                            "title": "var defaultUnit: IntentParameter<Value>.Angle?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-35m3l",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-9lff6",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-angle",
                        "title": "Angles",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5kph6",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Area, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8qdin",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Area?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5jrle",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Area?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5kph6",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Area, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-8t00h",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Area, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-9l0az",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-3m63b",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-42nhg",
                            "title": "var unit: IntentParameter<Value>.Area?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Area, IntentParameter<Value>.Area) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/acres",
                                "title": "case acres",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/ares",
                                "title": "case ares",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/hectares",
                                "title": "case hectares",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squarecentimeters",
                                "title": "case squareCentimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squarefeet",
                                "title": "case squareFeet",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squareinches",
                                "title": "case squareInches",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squarekilometers",
                                "title": "case squareKilometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squaremegameters",
                                "title": "case squareMegameters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squaremeters",
                                "title": "case squareMeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squaremicrometers",
                                "title": "case squareMicrometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squaremiles",
                                "title": "case squareMiles",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squaremillimeters",
                                "title": "case squareMillimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squarenanometers",
                                "title": "case squareNanometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/squareyards",
                                "title": "case squareYards",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/area/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/area/allcases-swift.typealias",
                                    "title": "IntentParameter.Area.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/area/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Area]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/area/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/area/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/area/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/area",
                            "title": "IntentParameter.Area",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-9sm2x",
                            "title": "var defaultUnit: IntentParameter<Value>.Area?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-38cqc",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-8xbaf",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-area",
                        "title": "Area",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8lmlo",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ConcentrationMass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5unqk",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ConcentrationMass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-940ir",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ConcentrationMass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-8ymzv",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ConcentrationMass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-6tije",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-4iyul",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-4ukvz",
                            "title": "var unit: IntentParameter<Value>.ConcentrationMass?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/concentrationmass/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.ConcentrationMass, IntentParameter<Value>.ConcentrationMass) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/concentrationmass/gramsperliter",
                                "title": "case gramsPerLiter",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/concentrationmass/milligramsperdeciliter",
                                "title": "case milligramsPerDeciliter",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/concentrationmass/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/concentrationmass/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/concentrationmass/allcases-swift.typealias",
                                    "title": "IntentParameter.ConcentrationMass.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/concentrationmass/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.ConcentrationMass]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/concentrationmass/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/concentrationmass/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/concentrationmass/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/concentrationmass",
                            "title": "IntentParameter.ConcentrationMass",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-6mid8",
                            "title": "var defaultUnit: IntentParameter<Value>.ConcentrationMass?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-5s36k",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-831sz",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-concentration-mass",
                        "title": "Concentration mass",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-tpe",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Dispersion?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4tvhn",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Dispersion?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-sm0d",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Dispersion, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7o9q1",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Dispersion, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8kqrp",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-5tmvj",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-9rnvi",
                            "title": "var unit: IntentParameter<Value>.Dispersion?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/dispersion/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Dispersion, IntentParameter<Value>.Dispersion) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/dispersion/partspermillion",
                                "title": "case partsPerMillion",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/dispersion/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/dispersion/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/dispersion/allcases-swift.typealias",
                                    "title": "IntentParameter.Dispersion.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/dispersion/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Dispersion]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/dispersion/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/dispersion/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/dispersion/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/dispersion",
                            "title": "IntentParameter.Dispersion",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-tk2s",
                            "title": "var defaultUnit: IntentParameter<Value>.Dispersion?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-1bmpc",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-8ge3z",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-dispersion",
                        "title": "Dispersion",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-9llvy",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Duration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-3enhk",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Duration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1nq46",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Duration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-92pkd",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Duration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-hetl",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-8ba5t",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-6yxwx",
                            "title": "var unit: IntentParameter<Value>.Duration?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Duration, IntentParameter<Value>.Duration) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/hours",
                                "title": "case hours",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/microseconds",
                                "title": "case microseconds",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/milliseconds",
                                "title": "case milliseconds",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/minutes",
                                "title": "case minutes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/nanoseconds",
                                "title": "case nanoseconds",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/picoseconds",
                                "title": "case picoseconds",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/seconds",
                                "title": "case seconds",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/duration/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/duration/allcases-swift.typealias",
                                    "title": "IntentParameter.Duration.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/duration/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Duration]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/duration/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/duration/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/duration/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/duration",
                            "title": "IntentParameter.Duration",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-7lkkh",
                            "title": "var defaultUnit: IntentParameter<Value>.Duration?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-89ub3",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-2bek3",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-duration",
                        "title": "Durations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-2csec",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCharge?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7lsjk",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCharge?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-4pk8t",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCharge, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-28f3o",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCharge, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-96w5w",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-8kaep",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-81ehc",
                            "title": "var unit: IntentParameter<Value>.ElectricCharge?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.ElectricCharge, IntentParameter<Value>.ElectricCharge) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/amperehours",
                                "title": "case ampereHours",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/coulombs",
                                "title": "case coulombs",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/kiloamperehours",
                                "title": "case kiloampereHours",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/megaamperehours",
                                "title": "case megaampereHours",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/microamperehours",
                                "title": "case microampereHours",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/milliamperehours",
                                "title": "case milliampereHours",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccharge/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electriccharge/allcases-swift.typealias",
                                    "title": "IntentParameter.ElectricCharge.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electriccharge/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.ElectricCharge]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electriccharge/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electriccharge/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electriccharge/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/electriccharge",
                            "title": "IntentParameter.ElectricCharge",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-1cdc2",
                            "title": "var defaultUnit: IntentParameter<Value>.ElectricCharge?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-2g1sv",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-3wgie",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-electric-charge",
                        "title": "Electric charge",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-9yrm9",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCurrent?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4214k",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCurrent?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6tmsl",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCurrent, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-631td",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCurrent, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8rqdf",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-4ixko",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-5prj2",
                            "title": "var unit: IntentParameter<Value>.ElectricCurrent?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.ElectricCurrent, IntentParameter<Value>.ElectricCurrent) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/amperes",
                                "title": "case amperes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/kiloamperes",
                                "title": "case kiloamperes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/megaamperes",
                                "title": "case megaamperes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/microamperes",
                                "title": "case microamperes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/milliamperes",
                                "title": "case milliamperes",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electriccurrent/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electriccurrent/allcases-swift.typealias",
                                    "title": "IntentParameter.ElectricCurrent.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electriccurrent/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.ElectricCurrent]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electriccurrent/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electriccurrent/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electriccurrent/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/electriccurrent",
                            "title": "IntentParameter.ElectricCurrent",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-m6h5",
                            "title": "var defaultUnit: IntentParameter<Value>.ElectricCurrent?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-4hant",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-44r3e",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-electric-current",
                        "title": "Electric current",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-20tna",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricPotentialDifference?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5zan3",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricPotentialDifference?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-85h1x",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricPotentialDifference, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-90byi",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricPotentialDifference, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-5tqr4",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-3clo2",
                            "title": "var unit: IntentParameter<Value>.ElectricPotentialDifference?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.ElectricPotentialDifference, IntentParameter<Value>.ElectricPotentialDifference) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/kilovolts",
                                "title": "case kilovolts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/megavolts",
                                "title": "case megavolts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/microvolts",
                                "title": "case microvolts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/millivolts",
                                "title": "case millivolts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/volts",
                                "title": "case volts",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electricpotentialdifference/allcases-swift.typealias",
                                    "title": "IntentParameter.ElectricPotentialDifference.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electricpotentialdifference/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.ElectricPotentialDifference]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electricpotentialdifference/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electricpotentialdifference/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/electricpotentialdifference",
                            "title": "IntentParameter.ElectricPotentialDifference",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-2uqct",
                            "title": "var defaultUnit: IntentParameter<Value>.ElectricPotentialDifference?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-4hoq0",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-7e0ti",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-electric-difference",
                        "title": "Electric potential difference",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-3hah0",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricResistance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4kgba",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricResistance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-65c81",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricResistance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-19rj5",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricResistance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7gjzx",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-7tfgo",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-670ic",
                            "title": "var unit: IntentParameter<Value>.ElectricResistance?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.ElectricResistance, IntentParameter<Value>.ElectricResistance) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/kiloohms",
                                "title": "case kiloohms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/megaohms",
                                "title": "case megaohms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/microohms",
                                "title": "case microohms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/milliohms",
                                "title": "case milliohms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/ohms",
                                "title": "case ohms",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/electricresistance/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electricresistance/allcases-swift.typealias",
                                    "title": "IntentParameter.ElectricResistance.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electricresistance/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.ElectricResistance]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electricresistance/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/electricresistance/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/electricresistance/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/electricresistance",
                            "title": "IntentParameter.ElectricResistance",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-4mrsv",
                            "title": "var defaultUnit: IntentParameter<Value>.ElectricResistance?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-8gwi5",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-14ddy",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-electric-resistance",
                        "title": "Electric resistance",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7t16t",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Energy?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-6wqqj",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Energy?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8xogp",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Energy, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5ftzv",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Energy, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-96pe0",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-74lkf",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-91p3x",
                            "title": "var unit: IntentParameter<Value>.Energy?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Energy, IntentParameter<Value>.Energy) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/calories",
                                "title": "case calories",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/joules",
                                "title": "case joules",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/kilocalories",
                                "title": "case kilocalories",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/kilojoules",
                                "title": "case kilojoules",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/kilowatthours",
                                "title": "case kilowattHours",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/energy/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/energy/allcases-swift.typealias",
                                    "title": "IntentParameter.Energy.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/energy/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Energy]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/energy/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/energy/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/energy/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/energy",
                            "title": "IntentParameter.Energy",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-2n8ud",
                            "title": "var defaultUnit: IntentParameter<Value>.Energy?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-493zp",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-6p731",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-energy",
                        "title": "Energy",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-9tm7b",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Frequency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-6324p",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Frequency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1iwe8",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Frequency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5xtid",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Frequency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-3vk1g",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-4xd9k",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-69agf",
                            "title": "var unit: IntentParameter<Value>.Frequency?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Frequency, IntentParameter<Value>.Frequency) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/framespersecond",
                                "title": "case framesPerSecond",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/gigahertz",
                                "title": "case gigahertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/hertz",
                                "title": "case hertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/kilohertz",
                                "title": "case kilohertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/megahertz",
                                "title": "case megahertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/microhertz",
                                "title": "case microhertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/millihertz",
                                "title": "case millihertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/nanohertz",
                                "title": "case nanohertz",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/terahertz",
                                "title": "case terahertz",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/frequency/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/frequency/allcases-swift.typealias",
                                    "title": "IntentParameter.Frequency.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/frequency/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Frequency]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/frequency/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/frequency/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/frequency/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/frequency",
                            "title": "IntentParameter.Frequency",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-61co5",
                            "title": "var defaultUnit: IntentParameter<Value>.Frequency?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-8i8i1",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-52v1p",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-frequency",
                        "title": "Frequency",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-77uev",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.FuelEfficiency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-73a7m",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.FuelEfficiency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-377af",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.FuelEfficiency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-3uzkv",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.FuelEfficiency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-23z3f",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-7fcqo",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-3ek73",
                            "title": "var unit: IntentParameter<Value>.FuelEfficiency?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.FuelEfficiency, IntentParameter<Value>.FuelEfficiency) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/litersper100kilometers",
                                "title": "case litersPer100Kilometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/milespergallon",
                                "title": "case milesPerGallon",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/milesperimperialgallon",
                                "title": "case milesPerImperialGallon",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/fuelefficiency/allcases-swift.typealias",
                                    "title": "IntentParameter.FuelEfficiency.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/fuelefficiency/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.FuelEfficiency]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/fuelefficiency/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/fuelefficiency/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/fuelefficiency",
                            "title": "IntentParameter.FuelEfficiency",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-2u2qw",
                            "title": "var defaultUnit: IntentParameter<Value>.FuelEfficiency?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-6wblf",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-322mt",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-fuel-efficiency",
                        "title": "Fuel efficiency",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-81yqr",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Illuminance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-2486g",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Illuminance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-73fj3",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Illuminance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-1ji9i",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Illuminance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8j88q",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-4hm4",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-5d6kq",
                            "title": "var unit: IntentParameter<Value>.Illuminance?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/illuminance/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Illuminance, IntentParameter<Value>.Illuminance) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/illuminance/lux",
                                "title": "case lux",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/illuminance/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/illuminance/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/illuminance/allcases-swift.typealias",
                                    "title": "IntentParameter.Illuminance.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/illuminance/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Illuminance]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/illuminance/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/illuminance/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/illuminance/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/illuminance",
                            "title": "IntentParameter.Illuminance",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-2j2ui",
                            "title": "var defaultUnit: IntentParameter<Value>.Illuminance?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-6mvvw",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-po5z",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-illuminance",
                        "title": "Illuminance",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7i4yk",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.InformationStorage?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-53sza",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.InformationStorage?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-38ide",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.InformationStorage, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-2jxve",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.InformationStorage, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7fp2k",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-zx45",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-36fxd",
                            "title": "var unit: IntentParameter<Value>.InformationStorage?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.InformationStorage, IntentParameter<Value>.InformationStorage) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/bits",
                                "title": "case bits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/bytes",
                                "title": "case bytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/exabits",
                                "title": "case exabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/exabytes",
                                "title": "case exabytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/exbibits",
                                "title": "case exbibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/exbibytes",
                                "title": "case exbibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/gibibits",
                                "title": "case gibibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/gibibytes",
                                "title": "case gibibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/gigabits",
                                "title": "case gigabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/gigabytes",
                                "title": "case gigabytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/kibibits",
                                "title": "case kibibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/kibibytes",
                                "title": "case kibibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/kilobits",
                                "title": "case kilobits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/kilobytes",
                                "title": "case kilobytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/mebibits",
                                "title": "case mebibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/mebibytes",
                                "title": "case mebibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/megabits",
                                "title": "case megabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/megabytes",
                                "title": "case megabytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/nibbles",
                                "title": "case nibbles",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/pebibits",
                                "title": "case pebibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/pebibytes",
                                "title": "case pebibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/petabits",
                                "title": "case petabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/petabytes",
                                "title": "case petabytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/tebibits",
                                "title": "case tebibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/tebibytes",
                                "title": "case tebibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/terabits",
                                "title": "case terabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/terabytes",
                                "title": "case terabytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/yobibits",
                                "title": "case yobibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/yobibytes",
                                "title": "case yobibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/yottabits",
                                "title": "case yottabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/yottabytes",
                                "title": "case yottabytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/zebibits",
                                "title": "case zebibits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/zebibytes",
                                "title": "case zebibytes",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/zettabits",
                                "title": "case zettabits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/zettabytes",
                                "title": "case zettabytes",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/informationstorage/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/informationstorage/allcases-swift.typealias",
                                    "title": "IntentParameter.InformationStorage.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/informationstorage/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.InformationStorage]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/informationstorage/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/informationstorage/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/informationstorage/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/informationstorage",
                            "title": "IntentParameter.InformationStorage",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-ry6s",
                            "title": "var defaultUnit: IntentParameter<Value>.InformationStorage?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-9qbxt",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-f41e",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-information-storage",
                        "title": "Information storage",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-98i2y",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Length?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-638xv",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Length?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-78oc1",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Length, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-qevc",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Length, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-1o4j9",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-3wceb",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-9xzg4",
                            "title": "var unit: IntentParameter<Value>.Length?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Length, IntentParameter<Value>.Length) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/astronomicalunits",
                                "title": "case astronomicalUnits",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/centimeters",
                                "title": "case centimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/decameters",
                                "title": "case decameters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/decimeters",
                                "title": "case decimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/fathoms",
                                "title": "case fathoms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/feet",
                                "title": "case feet",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/furlongs",
                                "title": "case furlongs",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/hectometers",
                                "title": "case hectometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/inches",
                                "title": "case inches",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/kilometers",
                                "title": "case kilometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/lightyears",
                                "title": "case lightyears",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/megameters",
                                "title": "case megameters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/meters",
                                "title": "case meters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/micrometers",
                                "title": "case micrometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/miles",
                                "title": "case miles",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/millimeters",
                                "title": "case millimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/nanometers",
                                "title": "case nanometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/nauticalmiles",
                                "title": "case nauticalMiles",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/parsecs",
                                "title": "case parsecs",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/picometers",
                                "title": "case picometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/scandinavianmiles",
                                "title": "case scandinavianMiles",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/yards",
                                "title": "case yards",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/length/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/length/allcases-swift.typealias",
                                    "title": "IntentParameter.Length.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/length/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Length]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/length/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/length/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/length/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/length",
                            "title": "IntentParameter.Length",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-2blhs",
                            "title": "var defaultUnit: IntentParameter<Value>.Length?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-1r83r",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-8ouwi",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-length",
                        "title": "Length",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5l545",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Mass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-2uf3n",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Mass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-vfqa",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Mass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7ttsy",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Mass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-9ao8",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-6hhad",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-15bj6",
                            "title": "var unit: IntentParameter<Value>.Mass?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Mass, IntentParameter<Value>.Mass) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/carats",
                                "title": "case carats",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/centigrams",
                                "title": "case centigrams",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/decigrams",
                                "title": "case decigrams",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/grams",
                                "title": "case grams",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/kilograms",
                                "title": "case kilograms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/metrictons",
                                "title": "case metricTons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/micrograms",
                                "title": "case micrograms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/milligrams",
                                "title": "case milligrams",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/nanograms",
                                "title": "case nanograms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/ounces",
                                "title": "case ounces",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/ouncestroy",
                                "title": "case ouncesTroy",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/picograms",
                                "title": "case picograms",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/pounds",
                                "title": "case pounds",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/shorttons",
                                "title": "case shortTons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/slugs",
                                "title": "case slugs",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/stones",
                                "title": "case stones",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/mass/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/mass/allcases-swift.typealias",
                                    "title": "IntentParameter.Mass.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/mass/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Mass]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/mass/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/mass/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/mass/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/mass",
                            "title": "IntentParameter.Mass",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-6a913",
                            "title": "var defaultUnit: IntentParameter<Value>.Mass?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-5kbp3",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-1lh4n",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-mass",
                        "title": "Mass",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-4mwnc",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Power?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7nn0p",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Power?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6bcwl",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Power, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-1j23d",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Power, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-dpn5",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-4k1b5",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-3mp17",
                            "title": "var unit: IntentParameter<Value>.Power?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Power, IntentParameter<Value>.Power) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/femtowatts",
                                "title": "case femtowatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/gigawatts",
                                "title": "case gigawatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/horsepower",
                                "title": "case horsepower",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/kilowatts",
                                "title": "case kilowatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/megawatts",
                                "title": "case megawatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/microwatts",
                                "title": "case microwatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/milliwatts",
                                "title": "case milliwatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/nanowatts",
                                "title": "case nanowatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/picowatts",
                                "title": "case picowatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/terawatts",
                                "title": "case terawatts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/watts",
                                "title": "case watts",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/power/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/power/allcases-swift.typealias",
                                    "title": "IntentParameter.Power.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/power/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Power]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/power/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/power/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/power/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/power",
                            "title": "IntentParameter.Power",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-4fr1a",
                            "title": "var defaultUnit: IntentParameter<Value>.Power?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-2if8y",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-hnv2",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-power",
                        "title": "Power",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-4pnv9",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Pressure?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-6ufuu",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Pressure?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-15i5o",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Pressure, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-31nta",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Pressure, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8yymb",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-35vja",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-991uj",
                            "title": "var unit: IntentParameter<Value>.Pressure?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Pressure, IntentParameter<Value>.Pressure) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/bars",
                                "title": "case bars",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/gigapascals",
                                "title": "case gigapascals",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/hectopascals",
                                "title": "case hectopascals",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/inchesofmercury",
                                "title": "case inchesOfMercury",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/kilopascals",
                                "title": "case kilopascals",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/megapascals",
                                "title": "case megapascals",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/millibars",
                                "title": "case millibars",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/millimetersofmercury",
                                "title": "case millimetersOfMercury",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/newtonspermeterssquared",
                                "title": "case newtonsPerMetersSquared",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/poundsforcepersquareinch",
                                "title": "case poundsForcePerSquareInch",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/pressure/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/pressure/allcases-swift.typealias",
                                    "title": "IntentParameter.Pressure.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/pressure/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Pressure]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/pressure/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/pressure/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/pressure/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/pressure",
                            "title": "IntentParameter.Pressure",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-4p4yh",
                            "title": "var defaultUnit: IntentParameter<Value>.Pressure?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-83fjo",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-832oo",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-pressure",
                        "title": "Pressure",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5i0hc",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Speed?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-6xvn5",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Speed?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-9yog",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Speed, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7pyxn",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Speed, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-6c1ac",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-3owho",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-620ka",
                            "title": "var unit: IntentParameter<Value>.Speed?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Speed, IntentParameter<Value>.Speed) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/kilometersperhour",
                                "title": "case kilometersPerHour",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/knots",
                                "title": "case knots",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/meterspersecond",
                                "title": "case metersPerSecond",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/milesperhour",
                                "title": "case milesPerHour",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/speed/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/speed/allcases-swift.typealias",
                                    "title": "IntentParameter.Speed.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/speed/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Speed]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/speed/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/speed/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/speed/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/speed",
                            "title": "IntentParameter.Speed",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-92l04",
                            "title": "var defaultUnit: IntentParameter<Value>.Speed?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-1bekt",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-8a31x",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-speed",
                        "title": "Speed",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5i0hc",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Speed?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7l000",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Temperature?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7sgxq",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Temperature?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-2lxxx",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Temperature, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-3t56o",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Temperature, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-3u0y1",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-9iqxr",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-irv",
                            "title": "var unit: IntentParameter<Value>.Temperature?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/temperature/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Temperature, IntentParameter<Value>.Temperature) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/temperature/celsius",
                                "title": "case celsius",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/temperature/fahrenheit",
                                "title": "case fahrenheit",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/temperature/kelvin",
                                "title": "case kelvin",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/temperature/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/temperature/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/temperature/allcases-swift.typealias",
                                    "title": "IntentParameter.Temperature.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/temperature/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Temperature]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/temperature/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/temperature/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/temperature/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/temperature",
                            "title": "IntentParameter.Temperature",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-62blf",
                            "title": "var defaultUnit: IntentParameter<Value>.Temperature?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-9bl77",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-2ca9l",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-temperature",
                        "title": "Temperature",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an intent parameter",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-3u9af",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Volume?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4kad6",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Volume?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-990sk",
                            "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Volume, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-59wna",
                            "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Volume, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-2v1t4",
                            "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-42ayi",
                            "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing unit details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unit-95hrl",
                            "title": "var unit: IntentParameter<Value>.Volume?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/==(_:_:)",
                                "title": "static func == (IntentParameter<Value>.Volume, IntentParameter<Value>.Volume) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/acrefeet",
                                "title": "case acreFeet",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/bushels",
                                "title": "case bushels",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/centiliters",
                                "title": "case centiliters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubiccentimeters",
                                "title": "case cubicCentimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicdecimeters",
                                "title": "case cubicDecimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicfeet",
                                "title": "case cubicFeet",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicinches",
                                "title": "case cubicInches",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubickilometers",
                                "title": "case cubicKilometers",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicmeters",
                                "title": "case cubicMeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicmiles",
                                "title": "case cubicMiles",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicmillimeters",
                                "title": "case cubicMillimeters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cubicyards",
                                "title": "case cubicYards",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/cups",
                                "title": "case cups",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/deciliters",
                                "title": "case deciliters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/fluidounces",
                                "title": "case fluidOunces",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/gallons",
                                "title": "case gallons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/imperialfluidounces",
                                "title": "case imperialFluidOunces",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/imperialgallons",
                                "title": "case imperialGallons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/imperialpints",
                                "title": "case imperialPints",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/imperialquarts",
                                "title": "case imperialQuarts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/imperialtablespoons",
                                "title": "case imperialTablespoons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/imperialteaspoons",
                                "title": "case imperialTeaspoons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/kiloliters",
                                "title": "case kiloliters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/liters",
                                "title": "case liters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/megaliters",
                                "title": "case megaliters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/metriccups",
                                "title": "case metricCups",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/milliliters",
                                "title": "case milliliters",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/pints",
                                "title": "case pints",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/quarts",
                                "title": "case quarts",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/tablespoons",
                                "title": "case tablespoons",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/teaspoons",
                                "title": "case teaspoons",
                                "type": "case"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentparameter/volume/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/volume/allcases-swift.typealias",
                                    "title": "IntentParameter.Volume.AllCases",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/volume/allcases-swift.type.property",
                                    "title": "static var allCases: [IntentParameter<Value>.Volume]",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/volume/caseiterable-implementations",
                                "title": "CaseIterable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/appintents/intentparameter/volume/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/appintents/intentparameter/volume/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/appintents/intentparameter/volume",
                            "title": "IntentParameter.Volume",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/defaultunit-2bsyg",
                            "title": "var defaultUnit: IntentParameter<Value>.Volume?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/supportsnegativenumbers-903r6",
                            "title": "var supportsNegativeNumbers: Bool?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/unitadjustforlocale-9ln52",
                            "title": "var unitAdjustForLocale: Bool?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter-measurements-volume",
                        "title": "Volume",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-measurements",
                    "title": "Measurements",
                    "type": "collection"
                  },
                  {
                    "title": "Creating an intent parameter for custom types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:)-7cox5",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:resolvers:)-1f92a",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:query:)-1rwev",
                        "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:query:)-7yfm3",
                        "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:resolvers:)-1f92a",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:resolvers:)-8o0lz",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:)-8bfkz",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:)",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                        "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-app-entity",
                    "title": "App entities",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an intent parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:)-2wsgy",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType])",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:)-9lv7y",
                        "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType])",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:optionsprovider:)-3vfr6",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:optionsprovider:)-4aw32",
                        "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], optionsProvider: OptionsProvider)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:resolvers:)-1mxkz",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], resolvers: () -> Spec)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:resolvers:)-21q7p",
                        "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], resolvers: () -> Spec)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-app-enum",
                    "title": "App enums",
                    "type": "collection"
                  },
                  {
                    "title": "Accessing the configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/title",
                    "title": "let title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/isoptional",
                    "title": "var isOptional: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the underlying value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/defaultvalue",
                    "title": "let defaultValue: Value.UnwrappedType?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/projectedvalue",
                    "title": "var projectedValue: IntentParameter<Value>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/wrappedvalue",
                    "title": "var wrappedValue: Value",
                    "type": "property"
                  },
                  {
                    "title": "Requesting a value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/requestvalue(_:)-592nd",
                    "title": "func requestValue(IntentDialog?) async throws -> Value.ValueType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/needsvalueerror(_:)",
                    "title": "func needsValueError(IntentDialog?) -> AppIntentError",
                    "type": "method"
                  },
                  {
                    "title": "Requesting confirmation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/requestconfirmation(for:dialog:)",
                    "title": "func requestConfirmation(for: Value.ValueType, dialog: IntentDialog?) async throws -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/requestconfirmation(for:dialog:view:)-6hiyi",
                    "title": "func requestConfirmation<ViewType>(for: Value.ValueType, dialog: IntentDialog?, view: ViewType) async throws -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/requestconfirmation(for:dialog:view:)-9z0pe",
                    "title": "func requestConfirmation<ViewType>(for: Value.ValueType, dialog: IntentDialog?, view: () -> ViewType) async throws -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Requesting disambiguation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/requestdisambiguation(among:dialog:)",
                    "title": "func requestDisambiguation(among: [Value.ValueType], dialog: IntentDialog?) async throws -> Value.ValueType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/needsdisambiguationerror(among:dialog:)",
                    "title": "func needsDisambiguationError(among: [Value.ValueType], dialog: IntentDialog?) -> AppIntentError",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Deprecated methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/appintents/intentparameter/requestvalue(_:)-70qzm",
                        "title": "func requestValue(IntentDialog?) -> any Error",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter-deprecated",
                    "title": "Deprecated symbols",
                    "type": "collection"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-4kart",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-5q83i",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-1xbvu",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-510ma",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:)-2bbg1",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:)-6rqfz",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)-7r5on",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.IntControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:controlstyle:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)-7sif9",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, controlStyle: IntentParameter<Value>.DoubleControlStyle, inclusiveRange: IntentParameter<Value>.InclusiveRange<Value.ValueType>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:displayname:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, displayName: Bool.IntentDisplayName?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:displayname:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, displayName: Bool.IntentDisplayName?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:inputoptions:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:inputoptions:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:)-4zlga",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:)-6zhvu",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-4121t",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-5re0u",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-2ygkf",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-78tck",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:resolvers:)-5zmtp",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:kind:requestvaluedialog:inputconnectionbehavior:resolvers:)-74s2f",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:mode:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:mode:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:mode:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:mode:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:mode:size:inputconnectionbehavior:)-2l4ov",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:mode:size:inputconnectionbehavior:)-7ydg",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:)-4khhm",
                    "title": "convenience init(description: LocalizedStringResource?, default: [Value.ValueType?], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:)-79g5k",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:)-7a6da",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:)-93x40",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-5nb0u",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-68v17",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-7t80i",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-9qj92",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: [Value.ValueType?], requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:query:)",
                    "title": "convenience init<Query>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:)-1434d",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:)-b4tx",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:optionsprovider:)-54xt7",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:optionsprovider:)-6wjhp",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:resolvers:)-2rbpm",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:resolvers:)-l5vr",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:size:inputconnectionbehavior:)-3qoix",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:size:inputconnectionbehavior:)-9vgw6",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:size:inputconnectionbehavior:query:)-10bai",
                    "title": "convenience init<Query>(description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:size:inputconnectionbehavior:query:)-4d8td",
                    "title": "convenience init<Query>(description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:size:inputconnectionbehavior:resolvers:)-3wo7r",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:size:inputconnectionbehavior:resolvers:)-8vbcc",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:query:)",
                    "title": "convenience init<Query>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:size:inputconnectionbehavior:)-7nan7",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:size:inputconnectionbehavior:)-zkb3",
                    "title": "convenience init(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:size:inputconnectionbehavior:query:)-4b9u2",
                    "title": "convenience init<Query>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:size:inputconnectionbehavior:query:)-625v0",
                    "title": "convenience init<Query>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:size:inputconnectionbehavior:resolvers:)-1syql",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:default:supportedcontenttypes:size:inputconnectionbehavior:resolvers:)-8qqfn",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1067t",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricPotentialDifference?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1fhl",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Length?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1u4dr",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Power?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-2fu0y",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Dispersion?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-369tw",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Speed?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-3ab0x",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Mass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-3dz8a",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Duration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-3yi59",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Angle?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-46ecl",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ConcentrationMass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-4bdbs",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Illuminance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-4idtv",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricResistance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-58usr",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Frequency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5m2ot",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Pressure?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-5n5su",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Acceleration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7v8en",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Temperature?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-80n05",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.FuelEfficiency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8i6zb",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Energy?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8y4a0",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.InformationStorage?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-c6x0",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCurrent?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-rf9a",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCharge?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-szop",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Volume?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-v6in",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Area?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-18lj9",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricResistance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-18vow",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Frequency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-1zt0c",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.InformationStorage?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-22w3s",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Pressure?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-2f6li",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCurrent?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-2mjxs",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Speed?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-2phn6",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Duration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-30ua6",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricCharge?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-38hj7",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Angle?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-40ry4",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Dispersion?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4mr62",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Energy?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4n8df",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Acceleration?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4qbtv",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Area?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-56041",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Temperature?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-58qw5",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ElectricPotentialDifference?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5n1oa",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Power?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-78ojh",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.ConcentrationMass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7uwrs",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Length?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7w1ns",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Volume?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-8cr33",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Mass?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-91qbw",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.Illuminance?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:defaultunit:defaultunitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-9uud7",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, defaultUnit: IntentParameter<Value>.FuelEfficiency?, defaultUnitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-13r7l",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Length, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-14cwb",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.FuelEfficiency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1d4mf",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCharge, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1p7mp",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Speed, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-1wc7r",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Area, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-39lto",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Angle, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-3cv0s",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Mass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6493r",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Duration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6s30",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ConcentrationMass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-6vpji",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Energy, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-76nay",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricResistance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7cpkn",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Pressure, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7ek1r",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Frequency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7gy7r",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.InformationStorage, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7hhju",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Dispersion, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7kshz",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Acceleration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7o6o1",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Power, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-7r2xv",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCurrent, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-84hor",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Illuminance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-8csci",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricPotentialDifference, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-91m31",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Volume, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:)-ry3q",
                    "title": "convenience init(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Temperature, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-11alu",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCurrent, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-1mn4o",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Duration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-3ccjw",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricCharge, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-3e45g",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Illuminance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-3k28y",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Speed, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4unh7",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Area, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4x025",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Power, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-4y2ji",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Volume, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-53c8q",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Pressure, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-57xrf",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricResistance, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5hik9",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Length, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5j1w2",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Acceleration, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-5m5ma",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.FuelEfficiency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-71ra6",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Frequency, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7ktat",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.InformationStorage, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-7na1d",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Temperature, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-88ndl",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Dispersion, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-8z0m4",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ConcentrationMass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-8ze5z",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Energy, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-9aegd",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.ElectricPotentialDifference, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-9dx4v",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Angle, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:defaultvalue:unit:unitadjustforlocale:supportsnegativenumbers:requestvaluedialog:inputconnectionbehavior:resolvers:)-zupw",
                    "title": "convenience init<Spec>(description: LocalizedStringResource?, defaultValue: Double?, unit: IntentParameter<Value>.Mass, unitAdjustForLocale: Bool, supportsNegativeNumbers: Bool, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:inputoptions:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:inputoptions:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, inputOptions: String.IntentInputOptions?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-14xjm",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-18ve1",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-1lhvb",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-1ol4b",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-21pha",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-22ztz",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-31j8q",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-42f7u",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-46vzo",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-4g5iz",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-4g95c",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-5isny",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-6ogfm",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7c1z",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7pg6p",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7v8ra",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7x2ja",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-7xgjf",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-80yj5",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8atn",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8esp4",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8sdl4",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-8wayj",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-91uk9",
                    "title": "convenience init<OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-6ewsn",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-8nhkf",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-1lg4d",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-1ya6b",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-2ds5x",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-2riag",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-318k",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-33314",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-3bxc3",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-3ihoz",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-3wh62",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-51452",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-51c85",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-5ivpx",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-5lqwc",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-5rww1",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-65774",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-6f6od",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-6wwmn",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-8b4zn",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-8k0st",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-8rzn5",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-8wthz",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(description:requestvaluedialog:inputconnectionbehavior:resolvers:optionsprovider:)-evi8",
                    "title": "convenience init<Spec, OptionsProvider>(description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:currencycodes:inclusiverange:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, currencyCodes: [String], inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:displaystyle:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:)-2k5c",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:)-66rp4",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-4hzyi",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:)-9aw39",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-3q2dk",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)-7bbuy",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:resolvers:)-1pcc5",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:kind:requestvaluedialog:inputconnectionbehavior:resolvers:)-60gke",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, kind: IntentParameter<Value>.DateKind, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:mode:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:mode:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:mode:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:mode:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:mode:size:inputconnectionbehavior:)-6ff6b",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:mode:size:inputconnectionbehavior:)-l6tx",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, mode: IntentPerson.ParameterMode, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:)-1vzd0",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:inputconnectionbehavior:resolvers:)-942vk",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:)-90j68",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:)-tfj8",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:query:)-49n42",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:query:)-4yyz3",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:resolvers:)-1csrx",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:resolvers:)-9fsdb",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:)-61lv3",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:optionsprovider:)-2jzm",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:supportedvalues:resolvers:)-4icwn",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, supportedValues: [Value.ValueType], resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:)-6j6se",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:)-7i2i4",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:query:)-1exoh",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:query:)-1u20e",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:resolvers:)-1qu54",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:size:inputconnectionbehavior:resolvers:)-6781p",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:)",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:)",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:)",
                    "title": "convenience init<OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:optionsprovider:resolvers:)",
                    "title": "convenience init<Spec, OptionsProvider>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, optionsProvider: OptionsProvider, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:query:)",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:requestvaluedialog:requestdisambiguationdialog:inputconnectionbehavior:resolvers:)",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, requestValueDialog: IntentDialog?, requestDisambiguationDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:size:inputconnectionbehavior:)-2iixv",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:size:inputconnectionbehavior:)-40x5o",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:size:inputconnectionbehavior:query:)-3a6vl",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:size:inputconnectionbehavior:query:)-5y5ep",
                    "title": "convenience init<Query>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, query: Query)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:size:inputconnectionbehavior:resolvers:)-26ujo",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: IntentCollectionSize, inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:default:supportedcontenttypes:size:inputconnectionbehavior:resolvers:)-3da75",
                    "title": "convenience init<Spec>(title: LocalizedStringResource, description: LocalizedStringResource?, default: Value.UnwrappedType?, supportedContentTypes: Array<UTType>?, size: [IntentWidgetFamily : IntentCollectionSize], inputConnectionBehavior: InputConnectionBehavior, resolvers: () -> Spec)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:)-25jti",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/init(title:description:requestvaluedialog:inputconnectionbehavior:)-51hn9",
                    "title": "convenience init(title: LocalizedStringResource, description: LocalizedStringResource?, requestValueDialog: IntentDialog?, inputConnectionBehavior: InputConnectionBehavior)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameter/valuestate-swift.property",
                    "title": "var valueState: IntentParameter<Value>.ValueState",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/valuestate-swift.enum/set(_:)",
                        "title": "case set(Value)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentparameter/valuestate-swift.enum/unset",
                        "title": "case unset",
                        "type": "case"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/valuestate-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/appintents/intentparameter/valuestate-swift.enum/==(_:_:)",
                            "title": "static func == (IntentParameter<Value>.ValueState, IntentParameter<Value>.ValueState) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentparameter/valuestate-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameter/valuestate-swift.enum",
                    "title": "IntentParameter.ValueState",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/intentparameter",
                "title": "IntentParameter",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:)",
                    "title": "convenience init<V0, P0>(KeyPath<Intent, P0>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:)",
                    "title": "convenience init<V0, P0, V1, P1>(KeyPath<Intent, P0>, KeyPath<Intent, P1>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8, V9, P9>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>, KeyPath<Intent, P9>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8, V9, P9, V10, P10>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>, KeyPath<Intent, P9>, KeyPath<Intent, P10>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8, V9, P9, V10, P10, V11, P11>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>, KeyPath<Intent, P9>, KeyPath<Intent, P10>, KeyPath<Intent, P11>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8, V9, P9, V10, P10, V11, P11, V12, P12>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>, KeyPath<Intent, P9>, KeyPath<Intent, P10>, KeyPath<Intent, P11>, KeyPath<Intent, P12>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8, V9, P9, V10, P10, V11, P11, V12, P12, V13, P13>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>, KeyPath<Intent, P9>, KeyPath<Intent, P10>, KeyPath<Intent, P11>, KeyPath<Intent, P12>, KeyPath<Intent, P13>)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                    "title": "convenience init<V0, P0, V1, P1, V2, P2, V3, P3, V4, P4, V5, P5, V6, P6, V7, P7, V8, P8, V9, P9, V10, P10, V11, P11, V12, P12, V13, P13, V14, P14>(KeyPath<Intent, P0>, KeyPath<Intent, P1>, KeyPath<Intent, P2>, KeyPath<Intent, P3>, KeyPath<Intent, P4>, KeyPath<Intent, P5>, KeyPath<Intent, P6>, KeyPath<Intent, P7>, KeyPath<Intent, P8>, KeyPath<Intent, P9>, KeyPath<Intent, P10>, KeyPath<Intent, P11>, KeyPath<Intent, P12>, KeyPath<Intent, P13>, KeyPath<Intent, P14>)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparameterdependency/wrappedvalue",
                    "title": "var wrappedValue: IntentProjection<Intent>?",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameterdependency/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameterdependency/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameterdependency/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/appintents/intentparameterdependency/==(_:_:)",
                        "title": "static func == (IntentParameterDependency<Intent>, IntentParameterDependency<Intent>) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameterdependency/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameterdependency/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparameterdependency/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentparameterdependency/hashable-implementations",
                    "title": "Hashable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentparameterdependency",
                "title": "IntentParameterDependency",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/controlstyle-2sflf",
                    "title": "var controlStyle: IntentParameter<Value>.IntControlStyle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/controlstyle-6k0y7",
                    "title": "var controlStyle: IntentParameter<Value>.DoubleControlStyle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/currencycodes",
                    "title": "var currencyCodes: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/datekind-1znbd",
                    "title": "var dateKind: IntentParameter<Value>.DateKind?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/datekind-301pp",
                    "title": "var dateKind: IntentParameter<Value>.DateKind?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-14jlt",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitFuelEfficiency>>.FuelEfficiency?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-1b43r",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitLength>>.Length?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-1h4fh",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitAcceleration>>.Acceleration?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-1iv6c",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitElectricResistance>>.ElectricResistance?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-2lxed",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitDispersion>>.Dispersion?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-31gc1",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitVolume>>.Volume?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-3jg9t",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitMass>>.Mass?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-3yj46",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitConcentrationMass>>.ConcentrationMass?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-4utvz",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitElectricPotentialDifference>>.ElectricPotentialDifference?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-60crf",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitEnergy>>.Energy?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-60fdy",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitFrequency>>.Frequency?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-65ijm",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitElectricCharge>>.ElectricCharge?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-65voi",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitTemperature>>.Temperature?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-6qm7u",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitAngle>>.Angle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-7ix5r",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitArea>>.Area?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-7uvfx",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitDuration>>.Duration?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-847tm",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitIlluminance>>.Illuminance?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-8ois6",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitInformationStorage>>.InformationStorage?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-9ibfi",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitPower>>.Power?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-b5mb",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitPressure>>.Pressure?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-dk7x",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitSpeed>>.Speed?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/defaultunit-mzcu",
                    "title": "var defaultUnit: IntentParameter<Measurement<UnitElectricCurrent>>.ElectricCurrent?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/displayname",
                    "title": "var displayName: Bool.IntentDisplayName?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/displaystyle",
                    "title": "var displayStyle: IntentParameter<Value>.PlacemarkDisplayStyle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/inclusiverange-276sa",
                    "title": "var inclusiveRange: IntentParameter<Value>.InclusiveRange<Decimal>?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/inclusiverange-7i6st",
                    "title": "var inclusiveRange: IntentParameter<Value>.InclusiveRange<Double>?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/inclusiverange-8kc7r",
                    "title": "var inclusiveRange: IntentParameter<Value>.InclusiveRange<Int>?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/isoptional",
                    "title": "var isOptional: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/parametermode",
                    "title": "var parameterMode: IntentPerson.ParameterMode?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-11s8",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-15kgw",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-1e69e",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-25jk6",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-2w87c",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-39689",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-3ds0o",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-3erhs",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-3ljcc",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-41o2y",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-462o4",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-59mfp",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-6hpxs",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-7650x",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-7i28a",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-8617w",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-8i9m4",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-8ssre",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-9d7pr",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-9hw2e",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-d2w4",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/supportsnegativenumbers-jgtm",
                    "title": "var supportsNegativeNumbers: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/title",
                    "title": "var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-18npz",
                    "title": "var unit: IntentParameter<Measurement<UnitPower>>.Power?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-1mmz4",
                    "title": "var unit: IntentParameter<Measurement<UnitElectricPotentialDifference>>.ElectricPotentialDifference?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-2zxw8",
                    "title": "var unit: IntentParameter<Measurement<UnitMass>>.Mass?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-34157",
                    "title": "var unit: IntentParameter<Measurement<UnitElectricCurrent>>.ElectricCurrent?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-38zpf",
                    "title": "var unit: IntentParameter<Measurement<UnitSpeed>>.Speed?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-39r8x",
                    "title": "var unit: IntentParameter<Measurement<UnitElectricResistance>>.ElectricResistance?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-4aapu",
                    "title": "var unit: IntentParameter<Measurement<UnitTemperature>>.Temperature?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-4awol",
                    "title": "var unit: IntentParameter<Measurement<UnitPressure>>.Pressure?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-4koze",
                    "title": "var unit: IntentParameter<Measurement<UnitDispersion>>.Dispersion?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-4rx08",
                    "title": "var unit: IntentParameter<Measurement<UnitArea>>.Area?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-5p7x6",
                    "title": "var unit: IntentParameter<Measurement<UnitLength>>.Length?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-6qvx7",
                    "title": "var unit: IntentParameter<Measurement<UnitElectricCharge>>.ElectricCharge?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-71usu",
                    "title": "var unit: IntentParameter<Measurement<UnitVolume>>.Volume?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-72hcm",
                    "title": "var unit: IntentParameter<Measurement<UnitInformationStorage>>.InformationStorage?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-75ikr",
                    "title": "var unit: IntentParameter<Measurement<UnitFrequency>>.Frequency?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-78ccp",
                    "title": "var unit: IntentParameter<Measurement<UnitAngle>>.Angle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-78p18",
                    "title": "var unit: IntentParameter<Measurement<UnitIlluminance>>.Illuminance?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-7lril",
                    "title": "var unit: IntentParameter<Measurement<UnitEnergy>>.Energy?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-8lih3",
                    "title": "var unit: IntentParameter<Measurement<UnitFuelEfficiency>>.FuelEfficiency?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-8omlm",
                    "title": "var unit: IntentParameter<Measurement<UnitConcentrationMass>>.ConcentrationMass?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-fzbg",
                    "title": "var unit: IntentParameter<Measurement<UnitAcceleration>>.Acceleration?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unit-i68w",
                    "title": "var unit: IntentParameter<Measurement<UnitDuration>>.Duration?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-108qa",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-10odh",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-18j21",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-1gvv5",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-1ndgn",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-3c4a3",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-48rfb",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-4kowc",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-5euoy",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-5xz43",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-6cf45",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-6zbbp",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-77fh8",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-79tzk",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-8w6d0",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-8x6an",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-9b11y",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-9kt4r",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-b2at",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-fh5h",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-q9qf",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/unitadjustforlocale-srcg",
                    "title": "var unitAdjustForLocale: Bool?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/needsdisambiguationerror(among:dialog:)",
                    "title": "func needsDisambiguationError(among: [Value.ValueType], dialog: IntentDialog?) -> AppIntentError",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/needsvalueerror(_:)",
                    "title": "func needsValueError(IntentDialog?) -> AppIntentError",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/requestconfirmation(for:dialog:)",
                    "title": "func requestConfirmation(for: Value.ValueType, dialog: IntentDialog?) async throws -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/requestconfirmation(for:dialog:view:)-6n0qp",
                    "title": "func requestConfirmation<ViewType>(for: Value.ValueType, dialog: IntentDialog?, view: ViewType) async throws -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/requestconfirmation(for:dialog:view:)-97i0g",
                    "title": "func requestConfirmation<ViewType>(for: Value.ValueType, dialog: IntentDialog?, view: () -> ViewType) async throws -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/requestdisambiguation(among:dialog:)",
                    "title": "func requestDisambiguation(among: [Value.ValueType], dialog: IntentDialog?) async throws -> Value.ValueType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentparametercontext/requestvalue(_:)",
                    "title": "func requestValue(IntentDialog?) async throws -> Value.ValueType",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/intentparametercontext",
                "title": "IntentParameterContext",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the connection behaviors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/inputconnectionbehavior/default",
                    "title": "case `default`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/inputconnectionbehavior/never",
                    "title": "case never",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/appintents/inputconnectionbehavior/connecttopreviousintentresult",
                    "title": "case connectToPreviousIntentResult",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/inputconnectionbehavior/==(_:_:)",
                    "title": "static func == (InputConnectionBehavior, InputConnectionBehavior) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/inputconnectionbehavior/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/inputconnectionbehavior/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/inputconnectionbehavior/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/inputconnectionbehavior/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/inputconnectionbehavior",
                "title": "InputConnectionBehavior",
                "type": "enum"
              },
              {
                "title": "Parameter choices",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Returning the parameter options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/results()",
                    "title": "func results() async throws -> Self.Result",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/defaultresult()",
                    "title": "func defaultResult() async -> Self.DefaultValue?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/result",
                    "title": "Result",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/defaultvalue",
                    "title": "DefaultValue",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/item",
                    "title": "DynamicOptionsProvider.Item",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/itemcollection",
                    "title": "DynamicOptionsProvider.ItemCollection",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/itemsection",
                    "title": "DynamicOptionsProvider.ItemSection",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/dynamicoptionsprovider/parameterdependency",
                    "title": "DynamicOptionsProvider.ParameterDependency",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/appintents/dynamicoptionsprovider",
                "title": "DynamicOptionsProvider",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appenum/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: some ResolverSpecification",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appenum",
                "title": "AppEnum",
                "type": "protocol"
              },
              {
                "title": "Shortcuts support",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummary/intent",
                    "title": "Intent",
                    "type": "associatedtype"
                  }
                ],
                "path": "/documentation/appintents/parametersummary",
                "title": "ParameterSummary",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Crearing a parameter summary",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentparametersummary/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparametersummary/init(_:)",
                    "title": "init(() -> [PartialKeyPath<Intent>])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparametersummary/init(_:table:)",
                    "title": "init(ParameterSummaryString<Intent>, table: String?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentparametersummary/init(_:table:_:)",
                    "title": "init(ParameterSummaryString<Intent>, table: String?, () -> [PartialKeyPath<Intent>])",
                    "type": "init"
                  },
                  {
                    "title": "Building the parameter key paths",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Building the path",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentparametersummary/parameterkeypathsbuilder/buildblock(_:)",
                        "title": "static func buildBlock(PartialKeyPath<Intent>...) -> [PartialKeyPath<Intent>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentparametersummary/parameterkeypathsbuilder/buildexpression(_:)",
                        "title": "static func buildExpression<ValueType>(KeyPath<Intent, IntentParameter<ValueType>>) -> PartialKeyPath<Intent>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentparametersummary/parameterkeypathsbuilder",
                    "title": "IntentParameterSummary.ParameterKeyPathsBuilder",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/intentparametersummary",
                "title": "IntentParameterSummary",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the summary string",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarystring/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarystring/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarystring/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: ParameterSummaryString<Intent>.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarystring/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarystring/stringinterpolation/appendinterpolation(_:)",
                        "title": "func appendInterpolation<ValueType, Subject>(Subject)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarystring/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarystring/stringinterpolation/stringliteraltype",
                        "title": "ParameterSummaryString.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/parametersummarystring/stringinterpolation",
                    "title": "ParameterSummaryString.StringInterpolation",
                    "type": "struct"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarystring/extendedgraphemeclusterliteraltype",
                    "title": "ParameterSummaryString.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarystring/stringliteraltype",
                    "title": "ParameterSummaryString.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarystring/unicodescalarliteraltype",
                    "title": "ParameterSummaryString.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarystring/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/parametersummarystring/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarystring/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/parametersummarystring/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/parametersummarystring",
                "title": "ParameterSummaryString",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a conditional statement",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:_:_:otherwise:)",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, HasValueComparisonOperator, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Equatable operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/equatablecomparisonoperator/equalto",
                        "title": "case equalTo",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/equatablecomparisonoperator/notequalto",
                        "title": "case notEqualTo",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/equatablecomparisonoperator/==(_:_:)",
                        "title": "static func == (EquatableComparisonOperator, EquatableComparisonOperator) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/equatablecomparisonoperator/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/equatablecomparisonoperator/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/equatablecomparisonoperator/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/equatablecomparisonoperator/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/equatablecomparisonoperator",
                    "title": "EquatableComparisonOperator",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Comparable operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/greaterthan",
                        "title": "case greaterThan",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/greaterthanorequalto",
                        "title": "case greaterThanOrEqualTo",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/lessthan",
                        "title": "case lessThan",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/lessthanorequalto",
                        "title": "case lessThanOrEqualTo",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/==(_:_:)",
                        "title": "static func == (ComparableComparisonOperator, ComparableComparisonOperator) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/comparablecomparisonoperator/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/comparablecomparisonoperator/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/comparablecomparisonoperator/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/comparablecomparisonoperator",
                    "title": "ComparableComparisonOperator",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Value operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/hasvaluecomparisonoperator/hasanyvalue",
                        "title": "case hasAnyValue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/hasvaluecomparisonoperator/hasnovalue",
                        "title": "case hasNoValue",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/hasvaluecomparisonoperator/==(_:_:)",
                        "title": "static func == (HasValueComparisonOperator, HasValueComparisonOperator) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/hasvaluecomparisonoperator/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/hasvaluecomparisonoperator/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/hasvaluecomparisonoperator/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/hasvaluecomparisonoperator/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/hasvaluecomparisonoperator",
                    "title": "HasValueComparisonOperator",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Containment operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/oneofcomparisonoperator/oneof",
                        "title": "case oneOf",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/oneofcomparisonoperator/==(_:_:)",
                        "title": "static func == (OneOfComparisonOperator, OneOfComparisonOperator) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/oneofcomparisonoperator/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/oneofcomparisonoperator/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/oneofcomparisonoperator/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/oneofcomparisonoperator/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/oneofcomparisonoperator",
                    "title": "OneOfComparisonOperator",
                    "type": "enum"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:_:_:_:otherwise:)-1u184",
                    "title": "init<ValueType, Parameter>(KeyPath<Intent, Parameter>, EquatableComparisonOperator, ValueType, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:_:_:_:otherwise:)-2aukt",
                    "title": "init<ValueType, Parameter>(KeyPath<Intent, Parameter>, ComparableComparisonOperator, ValueType, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:_:_:_:otherwise:)-3qvla",
                    "title": "init<Value, Parameter>(KeyPath<Intent, Parameter>, ComparableComparisonOperator, Value.ValueType, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:_:_:_:otherwise:)-6edqt",
                    "title": "init<ValueType, Parameter>(KeyPath<Intent, Parameter>, EquatableComparisonOperator, ValueType.ValueType, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:_:_:_:otherwise:)-rfm5",
                    "title": "init<ValueType, Parameter>(KeyPath<Intent, Parameter>, OneOfComparisonOperator, [ValueType.ValueType], () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-215ub",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, identifier: ComparableComparisonOperator, Parameter.Value.ValueType.ID, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-2yug9",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, identifier: EquatableComparisonOperator, String, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-3xth2",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, identifier: OneOfComparisonOperator, [Parameter.Value.ValueType.ID], () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-4f45j",
                    "title": "init<IntentType, Parameter>(KeyPath<IntentType, Parameter>, identifier: ComparableComparisonOperator, Parameter.Value.ValueType.ID, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-5o5vc",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, identifier: StringComparisonOperator, String, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-7g15l",
                    "title": "init<IntentType, Parameter>(KeyPath<IntentType, Parameter>, identifier: StringComparisonOperator, String, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-7tayy",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, identifier: OneOfComparisonOperator, [String], () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(_:identifier:_:_:otherwise:)-9qlh",
                    "title": "init<Parameter>(KeyPath<Intent, Parameter>, identifier: EquatableComparisonOperator, Parameter.Value.ValueType.ID, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(widgetfamily:_:_:otherwise:)-3fujn",
                    "title": "init(widgetFamily: OneOfComparisonOperator, [IntentWidgetFamily], () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarywhencondition/init(widgetfamily:_:_:otherwise:)-9l1to",
                    "title": "init(widgetFamily: EquatableComparisonOperator, IntentWidgetFamily, () -> WhenCondition, otherwise: () -> Otherwise)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/parametersummarywhencondition",
                "title": "ParameterSummaryWhenCondition",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a switch condition",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Building switch statement cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:)",
                        "title": "static func buildBlock<C0, DefaultSummary>(C0, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:)",
                        "title": "static func buildBlock<C0, C1, DefaultSummary>(C0, C1, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, DefaultSummary>(C0, C1, C2, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, DefaultSummary>(C0, C1, C2, C3, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, DefaultSummary>(C0, C1, C2, C3, C4, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, DefaultSummary>(C0, C1, C2, C3, C4, C5, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, DefaultSummary>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>) -> ParameterSummaryTupleCaseCondition<Intent, Value, (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, ParameterSummaryDefaultCaseCondition<Intent, Value, DefaultSummary>)>",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/parametersummarytuplecasecondition/summary",
                            "title": "ParameterSummaryTupleCaseCondition.Summary",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/appintents/parametersummarytuplecasecondition",
                        "title": "ParameterSummaryTupleCaseCondition",
                        "type": "struct"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummarycasebuilder/buildexpression(_:)",
                        "title": "static func buildExpression<C0>(C0) -> C0",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/parametersummarycasebuilder",
                    "title": "ParameterSummaryCaseBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummaryswitchcondition/init(_:_:)-4vxvs",
                    "title": "init(ParameterSummarySwitchCondition<Intent, Value, CaseCondition>.WidgetFamily, () -> CaseCondition)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummaryswitchcondition/init(_:_:)-6cdw3",
                    "title": "init(KeyPath<Intent, IntentParameter<Value>>, () -> CaseCondition)",
                    "type": "init"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily/==(_:_:)",
                        "title": "static func == (ParameterSummarySwitchCondition<Intent, Value, CaseCondition>.WidgetFamily, ParameterSummarySwitchCondition<Intent, Value, CaseCondition>.WidgetFamily) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily/widgetfamily",
                        "title": "case widgetFamily",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/parametersummaryswitchcondition/widgetfamily",
                    "title": "ParameterSummarySwitchCondition.WidgetFamily",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/parametersummaryswitchcondition",
                "title": "ParameterSummarySwitchCondition",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarycasecondition/init(_:_:)-3680j",
                    "title": "init(Value, () -> Summary)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarycasecondition/init(_:_:)-4029f",
                    "title": "init([Value], () -> Summary)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/parametersummarycasecondition",
                "title": "ParameterSummaryCaseCondition",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the case condition",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/parametersummarydefaultcasecondition/init(_:)",
                    "title": "init(() -> Summary)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/parametersummarydefaultcasecondition",
                "title": "ParameterSummaryDefaultCaseCondition",
                "type": "struct"
              }
            ],
            "path": "/documentation/appintents/parameter-resolution",
            "title": "Parameter resolution",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Entities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/integrating-custom-types-into-your-intents",
                "title": "Integrating custom data types into your intents",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Specifying properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appentity/property",
                    "title": "AppEntity.Property",
                    "type": "typealias"
                  },
                  {
                    "title": "Making the entity queryable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appentity/defaultquery-4khg7",
                    "title": "static var defaultQuery: Self.DefaultQuery",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appentity/defaultquery-swift.associatedtype",
                    "title": "DefaultQuery",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/appintents/appentity/defaultresolverspecification-2dpf2",
                    "title": "static var defaultResolverSpecification: EmptyResolverSpecification<Self>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appentity/defaultresolverspecification-589eq",
                    "title": "static var defaultResolverSpecification: some ResolverSpecification",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appentity/id",
                        "title": "var id: Self.ID",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/appentity/identifiable-implementations",
                    "title": "Identifiable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/appentity",
                "title": "AppEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/fileentity/supportedcontenttypes",
                    "title": "static var supportedContentTypes: [UTType]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/fileentity",
                "title": "FileEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/indexedentity/attributeset",
                    "title": "var attributeSet: CSSearchableItemAttributeSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/indexedentity/defaultattributeset",
                    "title": "var defaultAttributeSet: CSSearchableItemAttributeSet",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/indexedentity/hideinspotlight",
                    "title": "var hideInSpotlight: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/indexedentity",
                "title": "IndexedEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/transientappentity/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/transientappentity",
                "title": "TransientAppEntity",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/uniqueappentity",
                "title": "UniqueAppEntity",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlrepresentableentity/urlrepresentation-swift.typealias",
                    "title": "URLRepresentableEntity.URLRepresentation",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlrepresentableentity/urlrepresentation-swift.type.property",
                    "title": "static var urlRepresentation: Self.URLRepresentation",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/urlrepresentableentity",
                "title": "URLRepresentableEntity",
                "type": "protocol"
              },
              {
                "title": "Entity identity",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/persistentlyidentifiable/persistentidentifier",
                    "title": "static var persistentIdentifier: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/persistentlyidentifiable",
                "title": "PersistentlyIdentifiable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating an entity identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/init(for:)",
                    "title": "init<Entity>(for: Entity)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/init(for:identifier:)",
                    "title": "init<Entity>(for: Entity.Type, identifier: Entity.ID)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the identifier details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/identifier",
                    "title": "let identifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/entitytype",
                    "title": "let entityType: any AppEntity.Type",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/valuemaximumlength",
                    "title": "static let valueMaximumLength: Int",
                    "type": "property"
                  },
                  {
                    "title": "Describing the identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "title": "Providing a hash value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/==(_:_:)",
                    "title": "static func == (EntityIdentifier, EntityIdentifier) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/init(activityidentifier:)",
                    "title": "init?(activityIdentifier: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/specification",
                    "title": "EntityIdentifier.Specification",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/unwrappedtype",
                    "title": "EntityIdentifier.UnwrappedType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/valuetype",
                    "title": "EntityIdentifier.ValueType",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifier/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: EmptyResolverSpecification<EntityIdentifier>",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityidentifier/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/entityidentifier/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/entityidentifier",
                "title": "EntityIdentifier",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the identifier string",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifierconvertible/entityidentifierstring",
                    "title": "var entityIdentifierString: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityidentifierconvertible/entityidentifier(for:)",
                    "title": "static func entityIdentifier(for: String) -> Self?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/entityidentifierconvertible",
                "title": "EntityIdentifierConvertible",
                "type": "protocol"
              },
              {
                "title": "Entity content",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-1rgp4",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-24wv7",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-2eq1j",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-2gbo1",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-2rc7b",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-31od",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-368si",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-3aobi",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-3e3go",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-3tdgm",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-43hzm",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-47d6o",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-5449c",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-59zl1",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-5d6mq",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-5l6yd",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-5rjfx",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-5zbw9",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-5zvby",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-6bimh",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-6h3h5",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-6n7nc",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-6vna5",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-6yx3a",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-7ebfu",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-7ix0k",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-7uz5g",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-7wcbj",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-83wqy",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-8559a",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-85ux9",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-86h4g",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-8k8p6",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-923hj",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-93vj2",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-9h9cx",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-9ojq1",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-q8rw",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init()-zez4",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-1d25v",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-1tc1v",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-28g4s",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-2dp76",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-2gm7f",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-2kb1u",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-2np59",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-2yle4",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3887n",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3d77p",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3g21e",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3h662",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3nzru",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3revp",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-3rjdp",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-4kz7s",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-4url0",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-4v3x3",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-4ziq1",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-58kn8",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-5pb1r",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-5sctd",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-5wa3x",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-6l4hm",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-6n85w",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-6tv32",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-6zgt6",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-7a469",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-7dt1k",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-7z2pv",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-88r0j",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-8ayaj",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-8ykha",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-98ebz",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-9tfqf",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-9xd4p",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-djmw",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-l1c6",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/init(title:)-r1fa",
                    "title": "convenience init(title: LocalizedStringResource)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/isoptional",
                    "title": "var isOptional: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/projectedvalue",
                    "title": "var projectedValue: EntityProperty<Value>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/title",
                    "title": "var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entityproperty/wrappedvalue",
                    "title": "var wrappedValue: Value",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityproperty/init(from:)",
                        "title": "convenience init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/entityproperty/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityproperty/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/entityproperty/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/entityproperty",
                "title": "EntityProperty",
                "type": "class"
              },
              {
                "path": "/documentation/appintents/appvalue",
                "title": "AppValue",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Getting the value type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/anyintentvalue/value",
                    "title": "Value",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Getting type-specific information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/anyintentvalue/title",
                    "title": "var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/anyintentvalue/isoptional",
                    "title": "var isOptional: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/anyintentvalue",
                "title": "AnyIntentValue",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appenum/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: some ResolverSpecification",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appenum",
                "title": "AppEnum",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlrepresentableenum/urlrepresentation-swift.typealias",
                    "title": "URLRepresentableEnum.URLRepresentation",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlrepresentableenum/urlrepresentation-swift.type.property",
                    "title": "static var urlRepresentation: Self.URLRepresentation",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/urlrepresentableenum",
                "title": "URLRepresentableEnum",
                "type": "protocol"
              },
              {
                "title": "Entity presentation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a representation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/init(title:subtitle:image:)",
                    "title": "init(title: LocalizedStringResource, subtitle: LocalizedStringResource?, image: DisplayRepresentation.Image?)",
                    "type": "init"
                  },
                  {
                    "title": "Displaying the content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/title",
                    "title": "var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/subtitle",
                    "title": "var subtitle: LocalizedStringResource?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/image-swift.property",
                    "title": "var image: DisplayRepresentation.Image?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/displaystyle/==(_:_:)",
                            "title": "static func == (DisplayRepresentation.Image.DisplayStyle, DisplayRepresentation.Image.DisplayStyle) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/displaystyle/circular",
                            "title": "static var circular: DisplayRepresentation.Image.DisplayStyle",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/displaystyle/default",
                            "title": "static var `default`: DisplayRepresentation.Image.DisplayStyle",
                            "type": "property"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/displayrepresentation/image-swift.struct/displaystyle/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/displaystyle/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/displaystyle",
                        "title": "DisplayRepresentation.Image.DisplayStyle",
                        "type": "struct"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/==(_:_:)",
                        "title": "static func == (DisplayRepresentation.Image, DisplayRepresentation.Image) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(data:istemplate:)",
                        "title": "init(data: Data, isTemplate: Bool?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(data:istemplate:displaystyle:)",
                        "title": "init(data: Data, isTemplate: Bool?, displayStyle: DisplayRepresentation.Image.DisplayStyle)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(named:istemplate:)",
                        "title": "init(named: String, isTemplate: Bool?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(named:istemplate:displaystyle:)",
                        "title": "init(named: String, isTemplate: Bool?, displayStyle: DisplayRepresentation.Image.DisplayStyle)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(systemname:istemplate:)",
                        "title": "init(systemName: String, isTemplate: Bool?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(systemname:tintcolor:symbolconfiguration:)-3snvy",
                        "title": "init?(systemName: String, tintColor: UIColor?, symbolConfiguration: UIImage.SymbolConfiguration?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(systemname:tintcolor:symbolconfiguration:)-5p911",
                        "title": "init?(systemName: String, tintColor: NSColor?, symbolConfiguration: NSImage.SymbolConfiguration?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(url:istemplate:)",
                        "title": "init(url: URL, isTemplate: Bool?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(url:istemplate:displaystyle:)",
                        "title": "init(url: URL, isTemplate: Bool?, displayStyle: DisplayRepresentation.Image.DisplayStyle)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(url:width:height:istemplate:)",
                        "title": "init(url: URL, width: Double, height: Double, isTemplate: Bool?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(url:width:height:istemplate:displaystyle:)",
                        "title": "init(url: URL, width: Double, height: Double, isTemplate: Bool?, displayStyle: DisplayRepresentation.Image.DisplayStyle)",
                        "type": "init"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/decodable-implementations",
                        "title": "Decodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/encodable-implementations",
                        "title": "Encodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/image-swift.struct/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/image-swift.struct/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/displayrepresentation/image-swift.struct",
                    "title": "DisplayRepresentation.Image",
                    "type": "struct"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/init(rawvalue:)",
                        "title": "init(rawValue: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/rawvalue-swift.property",
                        "title": "let rawValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/arrayliteralelement",
                        "title": "DisplayRepresentation.Components.ArrayLiteralElement",
                        "type": "typealias"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/element",
                        "title": "DisplayRepresentation.Components.Element",
                        "type": "typealias"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/rawvalue-swift.typealias",
                        "title": "DisplayRepresentation.Components.RawValue",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/image",
                        "title": "static let image: DisplayRepresentation.Components",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/displayrepresentation/components/text",
                        "title": "static let text: DisplayRepresentation.Components",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/components/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/contains(_:)",
                            "title": "func contains(Self) -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/formintersection(_:)",
                            "title": "func formIntersection(Self)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/formsymmetricdifference(_:)",
                            "title": "func formSymmetricDifference(Self)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/formunion(_:)",
                            "title": "func formUnion(Self)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/insert(_:)",
                            "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/intersection(_:)",
                            "title": "func intersection(Self) -> Self",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/remove(_:)",
                            "title": "func remove(Self.Element) -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/symmetricdifference(_:)",
                            "title": "func symmetricDifference(Self) -> Self",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/union(_:)",
                            "title": "func union(Self) -> Self",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/update(with:)",
                            "title": "func update(with: Self.Element) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/components/optionset-implementations",
                        "title": "OptionSet Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/init(_:)",
                            "title": "init<S>(S)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/init(arrayliteral:)",
                            "title": "init(arrayLiteral: Self.Element...)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/isempty",
                            "title": "var isEmpty: Bool",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/isdisjoint(with:)",
                            "title": "func isDisjoint(with: Self) -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/isstrictsubset(of:)",
                            "title": "func isStrictSubset(of: Self) -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/isstrictsuperset(of:)",
                            "title": "func isStrictSuperset(of: Self) -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/issubset(of:)",
                            "title": "func isSubset(of: Self) -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/issuperset(of:)",
                            "title": "func isSuperset(of: Self) -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/subtract(_:)",
                            "title": "func subtract(Self)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/displayrepresentation/components/subtracting(_:)",
                            "title": "func subtracting(Self) -> Self",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/displayrepresentation/components/setalgebra-implementations",
                        "title": "SetAlgebra Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/displayrepresentation/components",
                    "title": "DisplayRepresentation.Components",
                    "type": "struct"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/==(_:_:)",
                    "title": "static func == (DisplayRepresentation, DisplayRepresentation) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/init(title:subtitle:image:synonyms:)",
                    "title": "init(title: LocalizedStringResource, subtitle: LocalizedStringResource?, image: DisplayRepresentation.Image?, synonyms: [LocalizedStringResource])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/synonyms",
                    "title": "var synonyms: [LocalizedStringResource]",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/extendedgraphemeclusterliteraltype",
                    "title": "DisplayRepresentation.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/stringliteraltype",
                    "title": "DisplayRepresentation.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/displayrepresentation/unicodescalarliteraltype",
                    "title": "DisplayRepresentation.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/displayrepresentation/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/displayrepresentation/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/displayrepresentation/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/displayrepresentation/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/displayrepresentation",
                "title": "DisplayRepresentation",
                "type": "struct"
              },
              {
                "path": "/documentation/appintents/displayrepresentable",
                "title": "DisplayRepresentable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Providing the visual content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/instancedisplayrepresentable/displayrepresentation",
                    "title": "var displayRepresentation: DisplayRepresentation",
                    "type": "property"
                  },
                  {
                    "title": "Providing a localized description",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/instancedisplayrepresentable/localizedstringresource",
                    "title": "var localizedStringResource: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/instancedisplayrepresentable/displayrepresentation(with:)",
                    "title": "func displayRepresentation(with: DisplayRepresentation.Components) async -> DisplayRepresentation",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/instancedisplayrepresentable",
                "title": "InstanceDisplayRepresentable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentable/typedisplayrepresentation",
                    "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/typedisplayrepresentable",
                "title": "TypeDisplayRepresentable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/init(name:numericformat:)",
                    "title": "init(name: LocalizedStringResource, numericFormat: LocalizedStringResource?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/init(name:numericformat:synonyms:)",
                    "title": "init(name: LocalizedStringResource, numericFormat: LocalizedStringResource?, synonyms: [LocalizedStringResource])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/name",
                    "title": "var name: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/numericformat",
                    "title": "var numericFormat: LocalizedStringResource?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/synonyms",
                    "title": "var synonyms: [LocalizedStringResource]",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/extendedgraphemeclusterliteraltype",
                    "title": "TypeDisplayRepresentation.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/stringliteraltype",
                    "title": "TypeDisplayRepresentation.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/typedisplayrepresentation/unicodescalarliteraltype",
                    "title": "TypeDisplayRepresentation.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/typedisplayrepresentation/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/typedisplayrepresentation/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/typedisplayrepresentation/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/typedisplayrepresentation/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/typedisplayrepresentation",
                "title": "TypeDisplayRepresentation",
                "type": "struct"
              },
              {
                "path": "/documentation/appintents/staticdisplayrepresentable",
                "title": "StaticDisplayRepresentable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Describing the case conditions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/casedisplayrepresentable/casedisplayrepresentations",
                    "title": "static var caseDisplayRepresentations: [Self : DisplayRepresentation]",
                    "type": "property"
                  },
                  {
                    "title": "Providing a localized description",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/casedisplayrepresentable/localizedstringresource-7gj71",
                    "title": "var localizedStringResource: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/casedisplayrepresentable/localizedstringresource-78c15",
                    "title": "var localizedStringResource: LocalizedStringResource",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/casedisplayrepresentable",
                "title": "CaseDisplayRepresentable",
                "type": "protocol"
              }
            ],
            "path": "/documentation/appintents/app-entities",
            "title": "App entities",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Identifier-based queries",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a query",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquery/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Searching for entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquery/entities(for:)",
                    "title": "func entities(for: [Self.Entity.ID]) async throws -> [Self.Entity]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/entityquery/entity",
                    "title": "Entity",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Suggesting entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquery/suggestedentities()",
                    "title": "func suggestedEntities() async throws -> Self.Result",
                    "type": "method"
                  },
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquery/result",
                    "title": "Result",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/entityquery/displayrepresentations(for:requestedcomponents:)",
                    "title": "func displayRepresentations(for: [Self.Entity.ID], requestedComponents: DisplayRepresentation.Components) async throws -> [Self.Entity.ID : DisplayRepresentation]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/entityquery",
                "title": "EntityQuery",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/enumerableentityquery/allentities()",
                    "title": "func allEntities() async throws -> Self.Result",
                    "type": "method"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/enumerableentityquery/findintentdescription",
                    "title": "static var findIntentDescription: IntentDescription?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/enumerableentityquery",
                "title": "EnumerableEntityQuery",
                "type": "protocol"
              },
              {
                "title": "String-based queries",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Searching for entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entitystringquery/entities(matching:)",
                    "title": "func entities(matching: String) async throws -> Self.Result",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/entitystringquery",
                "title": "EntityStringQuery",
                "type": "protocol"
              },
              {
                "title": "Property-matched queries",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying the queryable properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/properties",
                    "title": "static var properties: Self.QueryProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/queryproperties",
                    "title": "EntityPropertyQuery.QueryProperties",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/property",
                    "title": "EntityPropertyQuery.Property",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/comparatormappingtype",
                    "title": "ComparatorMappingType",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Sorting the results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/sortingoptions-swift.type.property",
                    "title": "static var sortingOptions: Self.SortingOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/sortingoptions-swift.typealias",
                    "title": "EntityPropertyQuery.SortingOptions",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/sortableby",
                    "title": "EntityPropertyQuery.SortableBy",
                    "type": "typealias"
                  },
                  {
                    "title": "Searching for entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/entities(matching:mode:sortedby:limit:)",
                    "title": "func entities(matching: [Self.ComparatorMappingType], mode: Self.ComparatorMode, sortedBy: [EntityQuerySort<Self.Entity>], limit: Int?) async throws -> Self.Result",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/sort",
                    "title": "EntityPropertyQuery.Sort",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/comparatormode",
                    "title": "EntityPropertyQuery.ComparatorMode",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Comparator modes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatormode/and",
                        "title": "case and",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatormode/or",
                        "title": "case or",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatormode/==(_:_:)",
                        "title": "static func == (EntityQueryComparatorMode, EntityQueryComparatorMode) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatormode/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatormode/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/entityquerycomparatormode/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/entityquerycomparatormode/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/entityquerycomparatormode",
                    "title": "EntityQueryComparatorMode",
                    "type": "enum"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entitypropertyquery/findintentdescription",
                    "title": "static var findIntentDescription: IntentDescription?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/entitypropertyquery",
                "title": "EntityPropertyQuery",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating the query properties",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Building queryable properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerypropertiesbuilder/buildblock(_:)",
                        "title": "static func buildBlock(EntityQueryPropertyDeclaration<Entity, ComparatorMappingType>...) -> [EntityQueryPropertyDeclaration<Entity, ComparatorMappingType>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/entityquerypropertydeclaration",
                        "title": "EntityQueryPropertyDeclaration",
                        "type": "class"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerypropertiesbuilder/buildexpression(_:)",
                        "title": "static func buildExpression(EntityQueryPropertyDeclaration<Entity, ComparatorMappingType>) -> EntityQueryPropertyDeclaration<Entity, ComparatorMappingType>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/entityquerypropertiesbuilder",
                    "title": "EntityQueryPropertiesBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the query properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityqueryproperties/subscript(_:)",
                    "title": "subscript(Int) -> EntityQueryPropertyDeclaration<Entity, ComparatorMappingType>",
                    "type": "subscript"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityqueryproperties/init(properties:)",
                    "title": "init(properties: () -> [EntityQueryPropertyDeclaration<Entity, ComparatorMappingType>])",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/entityqueryproperties",
                "title": "EntityQueryProperties",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating queryable properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityqueryproperty/querycomparators",
                    "title": "EntityQueryProperty.QueryComparators",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Building query comparators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatorsbuilder/buildblock(_:)",
                        "title": "static func buildBlock(AnyEntityQueryComparator<Entity, Subject, Property, PropertyType, ComparatorMappingType>...) -> [AnyEntityQueryComparator<Entity, Subject, Property, PropertyType, ComparatorMappingType>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/anyentityquerycomparator",
                        "title": "AnyEntityQueryComparator",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparator",
                        "title": "EntityQueryComparator",
                        "type": "class"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatorsbuilder/buildexpression(_:)-4g6f9",
                        "title": "static func buildExpression(EntityQueryComparator<Property, PropertyType, PropertyType.UnwrappedType, ComparatorMappingType>) -> AnyEntityQueryComparator<Entity, Subject, Property, PropertyType, ComparatorMappingType>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatorsbuilder/buildexpression(_:)-5tlbq",
                        "title": "static func buildExpression(EntityQueryComparator<Property, PropertyType, PropertyType, ComparatorMappingType>) -> AnyEntityQueryComparator<Entity, Subject, Property, PropertyType, ComparatorMappingType>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatorsbuilder/buildexpression(_:)-6v6cj",
                        "title": "static func buildExpression<InputType>(ContainsComparator<Property, PropertyType, InputType, ComparatorMappingType>) -> AnyEntityQueryComparator<Entity, Subject, Property, PropertyType, ComparatorMappingType>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/entityquerycomparatorsbuilder/buildexpression(_:)-8jx4k",
                        "title": "static func buildExpression<InputType>(IsBetweenComparator<Property, PropertyType, InputType, ComparatorMappingType>) -> AnyEntityQueryComparator<Entity, Subject, Property, PropertyType, ComparatorMappingType>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/entityquerycomparatorsbuilder",
                    "title": "EntityQueryComparatorsBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityqueryproperty/init(_:comparators:)",
                    "title": "convenience init(KeyPath<Subject, Property>, comparators: () -> EntityQueryProperty<Entity, Subject, Property, PropertyType, ComparatorMappingType>.QueryComparators)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/entityqueryproperty/init(_:entityprovider:comparators:)",
                    "title": "init(KeyPath<Subject, Property>, entityProvider: (Entity) -> Subject, comparators: () -> EntityQueryProperty<Entity, Subject, Property, PropertyType, ComparatorMappingType>.QueryComparators)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/entityqueryproperty",
                "title": "EntityQueryProperty",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Equatable comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a comparator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/equaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/equaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/equaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/equaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/equaltocomparator",
                    "title": "EqualToComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a comparator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/notequaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/notequaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/notequaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/notequaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/notequaltocomparator",
                    "title": "NotEqualToComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a comparator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/greaterthancomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/greaterthancomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/greaterthancomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/greaterthancomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/greaterthancomparator",
                    "title": "GreaterThanComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a comparator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/greaterthanorequaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/greaterthanorequaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/greaterthanorequaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/greaterthanorequaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/greaterthanorequaltocomparator",
                    "title": "GreaterThanOrEqualToComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a comparator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/lessthancomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/lessthancomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/lessthancomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/lessthancomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/lessthancomparator",
                    "title": "LessThanComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a comparator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/lessthanorequaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/lessthanorequaltocomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/lessthanorequaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/lessthanorequaltocomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (PropertyType.UnwrappedType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/lessthanorequaltocomparator",
                    "title": "LessThanOrEqualToComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/isbetweencomparator/init(mappingtransform:)",
                        "title": "init(mappingTransform: (InputType, InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/isbetweencomparator/init(withresolvers:mappingtransform:)",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType, InputType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/isbetweencomparator",
                    "title": "IsBetweenComparator",
                    "type": "class"
                  },
                  {
                    "title": "String comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/hasprefixcomparator/init(mappingtransform:)-4i1bf",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/hasprefixcomparator/init(mappingtransform:)-5kri6",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/hasprefixcomparator/init(withresolvers:mappingtransform:)-2n67a",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/hasprefixcomparator/init(withresolvers:mappingtransform:)-48o75",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/hasprefixcomparator",
                    "title": "HasPrefixComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/hassuffixcomparator/init(mappingtransform:)-4dp26",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/hassuffixcomparator/init(mappingtransform:)-5cmgi",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/hassuffixcomparator/init(withresolvers:mappingtransform:)-5rtmw",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/hassuffixcomparator/init(withresolvers:mappingtransform:)-7tdan",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/hassuffixcomparator",
                    "title": "HasSuffixComparator",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/==(_:_:)",
                        "title": "static func == (StringComparisonOperator, StringComparisonOperator) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/contains",
                        "title": "case contains",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/doesnotcontain",
                        "title": "case doesNotContain",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/hasprefix",
                        "title": "case hasPrefix",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/hassuffix",
                        "title": "case hasSuffix",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringcomparisonoperator/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringcomparisonoperator/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/stringcomparisonoperator/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/stringcomparisonoperator",
                    "title": "StringComparisonOperator",
                    "type": "enum"
                  },
                  {
                    "title": "Containment comparisons",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(mappingtransform:)-3xuvt",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(mappingtransform:)-7rx55",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(mappingtransform:)-7ya5",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(mappingtransform:)-9fn0e",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(mappingtransform:)-coon",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(mappingtransform:)-xvws",
                        "title": "init(mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(withresolvers:mappingtransform:)-3esov",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(withresolvers:mappingtransform:)-4482k",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(withresolvers:mappingtransform:)-5j3ie",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(withresolvers:mappingtransform:)-7vx0d",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(withresolvers:mappingtransform:)-83nih",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/containscomparator/init(withresolvers:mappingtransform:)-wpei",
                        "title": "init<Spec>(withResolvers: () -> Spec, mappingTransform: (InputType) -> ComparatorMappingType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/containscomparator",
                    "title": "ContainsComparator",
                    "type": "class"
                  }
                ],
                "path": "/documentation/appintents/property-comparators",
                "title": "Property comparators",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Creating the sorting options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquerysortingoptions/init(content:)",
                    "title": "init(content: () -> [EntityQuerySortableByProperty<Entity>])",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Building sorting options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysortingoptionsbuilder/buildblock(_:)",
                        "title": "static func buildBlock(EntityQuerySortableByProperty<Entity>...) -> [EntityQuerySortableByProperty<Entity>]",
                        "type": "method"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysortingoptionsbuilder/buildexpression(_:)",
                        "title": "static func buildExpression(EntityQuerySortableByProperty<Entity>) -> EntityQuerySortableByProperty<Entity>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/entityquerysortingoptionsbuilder",
                    "title": "EntityQuerySortingOptionsBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the sorting options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquerysortingoptions/subscript(_:)",
                    "title": "subscript(Int) -> EntityQuerySortableByProperty<Entity>",
                    "type": "subscript"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquerysortingoptions/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/entityquerysortingoptions",
                "title": "EntityQuerySortingOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the sort option",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquerysortablebyproperty/init(_:)",
                    "title": "init<Property>(KeyPath<Entity, Property>)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/entityquerysortablebyproperty",
                "title": "EntityQuerySortableByProperty",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the property details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquerysort/by",
                    "title": "let by: PartialKeyPath<Entity>",
                    "type": "property"
                  },
                  {
                    "title": "Getting the sort order",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityquerysort/order",
                    "title": "let order: EntityQuerySort<Entity>.Ordering",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysort/ordering/==(_:_:)",
                        "title": "static func == (EntityQuerySort<Entity>.Ordering, EntityQuerySort<Entity>.Ordering) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysort/ordering/ascending",
                        "title": "case ascending",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysort/ordering/descending",
                        "title": "case descending",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysort/ordering/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityquerysort/ordering/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/entityquerysort/ordering/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/entityquerysort/ordering/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/entityquerysort/ordering",
                    "title": "EntityQuerySort.Ordering",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/entityquerysort",
                "title": "EntityQuerySort",
                "type": "struct"
              },
              {
                "title": "Unique entity queries",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityquery/unique",
                    "title": "Unique",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityquery/uniqueentity()",
                    "title": "func uniqueEntity() async throws -> Self.Unique",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/uniqueappentityquery",
                "title": "UniqueAppEntityQuery",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityprovider/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityprovider/init(_:)",
                    "title": "init(() async throws -> Entity)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityprovider/uniqueentity()",
                    "title": "func uniqueEntity() async throws -> Entity",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityprovider/defaultvalue",
                    "title": "UniqueAppEntityProvider.DefaultValue",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityprovider/result",
                    "title": "UniqueAppEntityProvider.Result",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/uniqueappentityprovider/unique",
                    "title": "UniqueAppEntityProvider.Unique",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/defaultresult()",
                        "title": "func defaultResult() async -> Self.DefaultValue?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/item",
                        "title": "UniqueAppEntityProvider.Item",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/itemcollection",
                        "title": "UniqueAppEntityProvider.ItemCollection",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/itemsection",
                        "title": "UniqueAppEntityProvider.ItemSection",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/parameterdependency",
                        "title": "UniqueAppEntityProvider.ParameterDependency",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/uniqueappentityprovider/dynamicoptionsprovider-implementations",
                    "title": "DynamicOptionsProvider Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/uniqueappentityprovider/displayrepresentations(for:requestedcomponents:)",
                        "title": "func displayRepresentations(for: [Self.Entity.ID], requestedComponents: DisplayRepresentation.Components) async throws -> [Self.Entity.ID : DisplayRepresentation]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/results()",
                        "title": "func results() async throws -> Self.Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/suggestedentities()-4b2sy",
                        "title": "func suggestedEntities() async throws -> Self.Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/uniqueappentityprovider/entityquery-implementations",
                    "title": "EntityQuery Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/findintentdescription",
                        "title": "static var findIntentDescription: IntentDescription?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/uniqueappentityprovider/enumerableentityquery-implementations",
                    "title": "EnumerableEntityQuery Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/persistentidentifier",
                        "title": "static var persistentIdentifier: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/uniqueappentityprovider/persistentlyidentifiable-implementations",
                    "title": "PersistentlyIdentifiable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/allentities()",
                        "title": "func allEntities() async throws -> [Self.Unique]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/entities(for:)",
                        "title": "func entities(for: [Self.Unique.ID]) async throws -> [Self.Unique]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/uniqueappentityprovider/suggestedentities()-1p6hy",
                        "title": "func suggestedEntities() async throws -> [Self.Unique]",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/uniqueappentityprovider/uniqueappentityquery-implementations",
                    "title": "UniqueAppEntityQuery Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/uniqueappentityprovider",
                "title": "UniqueAppEntityProvider",
                "type": "struct"
              }
            ],
            "path": "/documentation/appintents/entity-queries",
            "title": "Entity queries",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Integer resolution",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the resolver",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/init(roundingrule:)",
                    "title": "init(roundingRule: FloatingPointRoundingRule)",
                    "type": "init"
                  },
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/resolve(from:context:)",
                    "title": "func resolve(from: Double, context: IntentParameterContext<Int>) async throws -> Int?",
                    "type": "method"
                  },
                  {
                    "title": "Getting the rounding rule",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/roundingrule",
                    "title": "var roundingRule: FloatingPointRoundingRule",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/==(_:_:)",
                    "title": "static func == (IntFromDoubleResolver, IntFromDoubleResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/input",
                    "title": "IntFromDoubleResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intfromdoubleresolver/output",
                    "title": "IntFromDoubleResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intfromdoubleresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intfromdoubleresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intfromdoubleresolver/checkparameterrangecontains(value:context:)",
                        "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intfromdoubleresolver/rangecheckingresolver-implementations",
                    "title": "RangeCheckingResolver Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intfromdoubleresolver/context",
                        "title": "IntFromDoubleResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/intfromdoubleresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intfromdoubleresolver",
                "title": "IntFromDoubleResolver",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the resolver",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/init(radix:)",
                    "title": "init(radix: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/resolve(from:context:)",
                    "title": "func resolve(from: String, context: IntentParameterContext<Int>) async throws -> Int?",
                    "type": "method"
                  },
                  {
                    "title": "Getting the radix setting",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/radix",
                    "title": "var radix: Int",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/==(_:_:)",
                    "title": "static func == (IntFromStringResolver, IntFromStringResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/input",
                    "title": "IntFromStringResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intfromstringresolver/output",
                    "title": "IntFromStringResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intfromstringresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intfromstringresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intfromstringresolver/checkparameterrangecontains(value:context:)",
                        "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intfromstringresolver/rangecheckingresolver-implementations",
                    "title": "RangeCheckingResolver Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intfromstringresolver/context",
                        "title": "IntFromStringResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/intfromstringresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intfromstringresolver",
                "title": "IntFromStringResolver",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intresolver/resolve(from:context:)",
                    "title": "func resolve(from: Int, context: IntentParameterContext<Int>) async throws -> Int?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intresolver/==(_:_:)",
                    "title": "static func == (IntResolver, IntResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intresolver/input",
                    "title": "IntResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intresolver/output",
                    "title": "IntResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intresolver/checkparameterrangecontains(value:context:)",
                        "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intresolver/rangecheckingresolver-implementations",
                    "title": "RangeCheckingResolver Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intresolver/context",
                        "title": "IntResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/intresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intresolver",
                "title": "IntResolver",
                "type": "struct"
              },
              {
                "title": "Floating-point resolution",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromintresolver/resolve(from:context:)",
                    "title": "func resolve(from: Int, context: IntentParameterContext<Double>) async throws -> Double?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromintresolver/==(_:_:)",
                    "title": "static func == (DoubleFromIntResolver, DoubleFromIntResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromintresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromintresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromintresolver/input",
                    "title": "DoubleFromIntResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/doublefromintresolver/output",
                    "title": "DoubleFromIntResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doublefromintresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/doublefromintresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doublefromintresolver/checkparameterrangecontains(value:context:)",
                        "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/doublefromintresolver/rangecheckingresolver-implementations",
                    "title": "RangeCheckingResolver Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doublefromintresolver/context",
                        "title": "DoubleFromIntResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/doublefromintresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/doublefromintresolver",
                "title": "DoubleFromIntResolver",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromstringresolver/resolve(from:context:)",
                    "title": "func resolve(from: String, context: IntentParameterContext<Double>) async throws -> Double?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromstringresolver/==(_:_:)",
                    "title": "static func == (DoubleFromStringResolver, DoubleFromStringResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromstringresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromstringresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doublefromstringresolver/input",
                    "title": "DoubleFromStringResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/doublefromstringresolver/output",
                    "title": "DoubleFromStringResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doublefromstringresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/doublefromstringresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doublefromstringresolver/checkparameterrangecontains(value:context:)",
                        "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/doublefromstringresolver/rangecheckingresolver-implementations",
                    "title": "RangeCheckingResolver Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doublefromstringresolver/context",
                        "title": "DoubleFromStringResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/doublefromstringresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/doublefromstringresolver",
                "title": "DoubleFromStringResolver",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doubleresolver/resolve(from:context:)",
                    "title": "func resolve(from: Double, context: IntentParameterContext<Double>) async throws -> Double?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doubleresolver/==(_:_:)",
                    "title": "static func == (DoubleResolver, DoubleResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doubleresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doubleresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/doubleresolver/input",
                    "title": "DoubleResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/doubleresolver/output",
                    "title": "DoubleResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doubleresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/doubleresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doubleresolver/checkparameterrangecontains(value:context:)",
                        "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/doubleresolver/rangecheckingresolver-implementations",
                    "title": "RangeCheckingResolver Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/doubleresolver/context",
                        "title": "DoubleResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/doubleresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/doubleresolver",
                "title": "DoubleResolver",
                "type": "struct"
              },
              {
                "title": "String resolution",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/attributedstringfromstringresolver/resolve(from:context:)",
                    "title": "func resolve(from: String, context: IntentParameterContext<AttributedString>) async throws -> AttributedString?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/attributedstringfromstringresolver/==(_:_:)",
                    "title": "static func == (AttributedStringFromStringResolver, AttributedStringFromStringResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/attributedstringfromstringresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/attributedstringfromstringresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/attributedstringfromstringresolver/input",
                    "title": "AttributedStringFromStringResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/attributedstringfromstringresolver/output",
                    "title": "AttributedStringFromStringResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/attributedstringfromstringresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/attributedstringfromstringresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/attributedstringfromstringresolver/context",
                        "title": "AttributedStringFromStringResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/attributedstringfromstringresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/attributedstringfromstringresolver",
                "title": "AttributedStringFromStringResolver",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromdoubleresolver/resolve(from:context:)",
                    "title": "func resolve(from: Double, context: IntentParameterContext<String>) async throws -> String?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromdoubleresolver/==(_:_:)",
                    "title": "static func == (StringFromDoubleResolver, StringFromDoubleResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromdoubleresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromdoubleresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromdoubleresolver/input",
                    "title": "StringFromDoubleResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/stringfromdoubleresolver/output",
                    "title": "StringFromDoubleResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringfromdoubleresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/stringfromdoubleresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringfromdoubleresolver/context",
                        "title": "StringFromDoubleResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/stringfromdoubleresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/stringfromdoubleresolver",
                "title": "StringFromDoubleResolver",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromintresolver/resolve(from:context:)",
                    "title": "func resolve(from: Input, context: IntentParameterContext<Output>) async throws -> Output?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromintresolver/==(_:_:)",
                    "title": "static func == (StringFromIntResolver<Input, Output>, StringFromIntResolver<Input, Output>) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromintresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/stringfromintresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringfromintresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/stringfromintresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringfromintresolver/context",
                        "title": "StringFromIntResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/stringfromintresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/stringfromintresolver",
                "title": "StringFromIntResolver",
                "type": "struct"
              },
              {
                "title": "Boolean resolution",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/boolfromstringresolver/resolve(from:context:)",
                    "title": "func resolve(from: String, context: IntentParameterContext<Bool>) async throws -> Bool?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/boolfromstringresolver/==(_:_:)",
                    "title": "static func == (BoolFromStringResolver, BoolFromStringResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/boolfromstringresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/boolfromstringresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/boolfromstringresolver/input",
                    "title": "BoolFromStringResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/boolfromstringresolver/output",
                    "title": "BoolFromStringResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/boolfromstringresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/boolfromstringresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/boolfromstringresolver/context",
                        "title": "BoolFromStringResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/boolfromstringresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/boolfromstringresolver",
                "title": "BoolFromStringResolver",
                "type": "struct"
              },
              {
                "title": "URL resolution",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlfromstringresolver/resolve(from:context:)",
                    "title": "func resolve(from: String, context: IntentParameterContext<URL>) async throws -> URL?",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlfromstringresolver/==(_:_:)",
                    "title": "static func == (URLFromStringResolver, URLFromStringResolver) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlfromstringresolver/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlfromstringresolver/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/urlfromstringresolver/input",
                    "title": "URLFromStringResolver.Input",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/urlfromstringresolver/output",
                    "title": "URLFromStringResolver.Output",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/urlfromstringresolver/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/urlfromstringresolver/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/urlfromstringresolver/context",
                        "title": "URLFromStringResolver.Context",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/urlfromstringresolver/resolver-implementations",
                    "title": "Resolver Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/urlfromstringresolver",
                "title": "URLFromStringResolver",
                "type": "struct"
              },
              {
                "title": "Custom resolution",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Resolving the type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/resolver/resolve(from:context:)",
                    "title": "func resolve(from: Self.Input, context: IntentParameterContext<Self.Output>) async throws -> Self.Output?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/resolver/input",
                    "title": "Input",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/appintents/resolver/output",
                    "title": "Output",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Managing the resolution process",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the value type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecification/output",
                        "title": "Output",
                        "type": "associatedtype"
                      }
                    ],
                    "path": "/documentation/appintents/resolverspecification",
                    "title": "ResolverSpecification",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating the specification type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Iterating over the values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/makeiterator()",
                        "title": "func makeIterator() -> IndexingIterator<[any Resolver]>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/output",
                        "title": "EmptyResolverSpecification.Output",
                        "type": "typealias"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/==(_:_:)",
                        "title": "static func == (EmptyResolverSpecification<Value>, EmptyResolverSpecification<Value>) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/element",
                        "title": "EmptyResolverSpecification.Element",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/emptyresolverspecification/iterator",
                        "title": "EmptyResolverSpecification.Iterator",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/emptyresolverspecification/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/lazy",
                            "title": "var lazy: LazySequence<Self>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/publisher",
                            "title": "var publisher: Publishers.Sequence<Self, Never>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/underestimatedcount",
                            "title": "var underestimatedCount: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/allsatisfy(_:)",
                            "title": "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/compactmap(_:)",
                            "title": "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/compare(_:_:)",
                            "title": "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/contains(where:)",
                            "title": "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/count(where:)",
                            "title": "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/drop(while:)",
                            "title": "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/dropfirst(_:)",
                            "title": "func dropFirst(Int) -> DropFirstSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/droplast(_:)",
                            "title": "func dropLast(Int) -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/elementsequal(_:by:)",
                            "title": "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/enumerated()",
                            "title": "func enumerated() -> EnumeratedSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/filter(_:)",
                            "title": "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/first(where:)",
                            "title": "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/flatmap(_:)-7jwq3",
                            "title": "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/flatmap(_:)-802vq",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/foreach(_:)",
                            "title": "func forEach((Self.Element) throws -> Void) rethrows",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/formatted(_:)",
                            "title": "func formatted<S>(S) -> S.FormatOutput",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/lexicographicallyprecedes(_:by:)",
                            "title": "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/map(_:)",
                            "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/max(by:)",
                            "title": "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/min(by:)",
                            "title": "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/prefix(_:)",
                            "title": "func prefix(Int) -> PrefixSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/prefix(while:)",
                            "title": "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/reduce(_:_:)",
                            "title": "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/reduce(into:_:)",
                            "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/reversed()",
                            "title": "func reversed() -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/shuffled()",
                            "title": "func shuffled() -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/shuffled(using:)",
                            "title": "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/sorted(by:)",
                            "title": "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/sorted(using:)-2gheb",
                            "title": "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/sorted(using:)-6pfyg",
                            "title": "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title": "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/starts(with:by:)",
                            "title": "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/suffix(_:)",
                            "title": "func suffix(Int) -> [Self.Element]",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/emptyresolverspecification/withcontiguousstorageifavailable(_:)",
                            "title": "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/emptyresolverspecification/sequence-implementations",
                        "title": "Sequence Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/emptyresolverspecification",
                    "title": "EmptyResolverSpecification",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Resolving the type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/resolve(from:context:)",
                        "title": "func resolve(from: String, context: IntentParameterContext<StringSearchCriteria>) async throws -> StringSearchCriteria?",
                        "type": "method"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/==(_:_:)",
                        "title": "static func == (StringSearchCriteriaFromStringResolverSpecificification, StringSearchCriteriaFromStringResolverSpecificification) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/input",
                        "title": "StringSearchCriteriaFromStringResolverSpecificification.Input",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/output",
                        "title": "StringSearchCriteriaFromStringResolverSpecificification.Output",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/context",
                            "title": "StringSearchCriteriaFromStringResolverSpecificification.Context",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification/resolver-implementations",
                        "title": "Resolver Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/stringsearchcriteriafromstringresolverspecificification",
                    "title": "StringSearchCriteriaFromStringResolverSpecificification",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Building the resolver specification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock()",
                        "title": "static func buildBlock() -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:)",
                        "title": "static func buildBlock<R0>(R0) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:)",
                        "title": "static func buildBlock<R0, R1>(R0, R1) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2>(R0, R1, R2) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3>(R0, R1, R2, R3) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4>(R0, R1, R2, R3, R4) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5>(R0, R1, R2, R3, R4, R5) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6>(R0, R1, R2, R3, R4, R5, R6) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7>(R0, R1, R2, R3, R4, R5, R6, R7) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8>(R0, R1, R2, R3, R4, R5, R6, R7, R8) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/==(_:_:)",
                            "title": "static func == (ResolverSpecificationBuilder<Property>.Specification<Output, repeat each R>, ResolverSpecificationBuilder<Property>.Specification<Output, repeat each R>) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/makeiterator()",
                            "title": "func makeIterator() -> Array<any Resolver>.Iterator",
                            "type": "method"
                          },
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/element",
                            "title": "ResolverSpecificationBuilder.Specification.Element",
                            "type": "typealias"
                          },
                          {
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/iterator",
                            "title": "ResolverSpecificationBuilder.Specification.Iterator",
                            "type": "typealias"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/lazy",
                                "title": "var lazy: LazySequence<Self>",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/publisher",
                                "title": "var publisher: Publishers.Sequence<Self, Never>",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/underestimatedcount",
                                "title": "var underestimatedCount: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/allsatisfy(_:)",
                                "title": "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/compactmap(_:)",
                                "title": "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/compare(_:_:)",
                                "title": "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/contains(where:)",
                                "title": "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/count(where:)",
                                "title": "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/drop(while:)",
                                "title": "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/dropfirst(_:)",
                                "title": "func dropFirst(Int) -> DropFirstSequence<Self>",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/droplast(_:)",
                                "title": "func dropLast(Int) -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/elementsequal(_:by:)",
                                "title": "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/enumerated()",
                                "title": "func enumerated() -> EnumeratedSequence<Self>",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/filter(_:)-486ly",
                                "title": "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/filter(_:)-fz1q",
                                "title": "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/first(where:)",
                                "title": "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/flatmap(_:)-932u1",
                                "title": "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/flatmap(_:)-wpz",
                                "title": "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/foreach(_:)",
                                "title": "func forEach((Self.Element) throws -> Void) rethrows",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/formatted(_:)",
                                "title": "func formatted<S>(S) -> S.FormatOutput",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/lexicographicallyprecedes(_:by:)",
                                "title": "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/map(_:)",
                                "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/max(by:)",
                                "title": "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/min(by:)",
                                "title": "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/prefix(_:)",
                                "title": "func prefix(Int) -> PrefixSequence<Self>",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/prefix(while:)",
                                "title": "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/reduce(_:_:)",
                                "title": "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/reduce(into:_:)",
                                "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/reversed()",
                                "title": "func reversed() -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/shuffled()",
                                "title": "func shuffled() -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/shuffled(using:)",
                                "title": "func shuffled<T>(using: inout T) -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/sorted(by:)",
                                "title": "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/sorted(using:)-4v0lv",
                                "title": "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/sorted(using:)-6yrbc",
                                "title": "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                                "title": "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/starts(with:by:)",
                                "title": "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/suffix(_:)",
                                "title": "func suffix(Int) -> [Self.Element]",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/appintents/resolverspecificationbuilder/specification/withcontiguousstorageifavailable(_:)",
                                "title": "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/appintents/resolverspecificationbuilder/specification/sequence-implementations",
                            "title": "Sequence Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/resolverspecificationbuilder/specification",
                        "title": "ResolverSpecificationBuilder.Specification",
                        "type": "struct"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9>(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10>(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11>(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12>(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13>(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "title": "static func buildBlock<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14>(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14) -> some ResolverSpecification",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildexpression(_:)",
                        "title": "static func buildExpression<ResolverType>(ResolverType) -> ResolverType",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildpartialblock(accumulated:next:)",
                        "title": "static func buildPartialBlock<each Accumulated, R>(accumulated: ResolverSpecificationBuilder<Property>.Specification<Property, repeat each Accumulated>, next: R) -> ResolverSpecificationBuilder<Property>.Specification<Property, repeat each Accumulated, R>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/resolverspecificationbuilder/buildpartialblock(first:)",
                        "title": "static func buildPartialBlock<R>(first: R) -> ResolverSpecificationBuilder<Property>.Specification<Property, R>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/resolverspecificationbuilder",
                    "title": "ResolverSpecificationBuilder",
                    "type": "enum"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/resolver/context",
                    "title": "Resolver.Context",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/appintents/resolver",
                "title": "Resolver",
                "type": "protocol"
              },
              {
                "title": "Range validation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Checking the range of a parameter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/rangecheckingresolver/checkparameterrangecontains(value:context:)",
                    "title": "func checkParameterRangeContains<Value>(value: Value, context: IntentParameterContext<Self.Output>) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/rangecheckingresolver",
                "title": "RangeCheckingResolver",
                "type": "protocol"
              },
              {
                "path": "/documentation/appintents/rangecomparableproperty",
                "title": "RangeComparableProperty",
                "type": "protocol"
              }
            ],
            "path": "/documentation/appintents/resolvers",
            "title": "Resolvers",
            "type": "collection"
          },
          {
            "title": "Utility types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Contacts",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a contact",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/init(identifier:name:handle:aliases:isme:image:)",
                    "title": "init(identifier: IntentPerson.Identifier, name: IntentPerson.Name, handle: IntentPerson.Handle?, aliases: [IntentPerson.Handle], isMe: Bool, image: DisplayRepresentation.Image?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the personâ€™s name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/name-swift.property",
                    "title": "var name: IntentPerson.Name",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting a displayable name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/name-swift.enum/displayname(_:)",
                        "title": "case displayName(String)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the name components",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/name-swift.enum/components(_:)",
                        "title": "case components(PersonNameComponents)",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/name-swift.enum/==(_:_:)",
                        "title": "static func == (IntentPerson.Name, IntentPerson.Name) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/name-swift.enum/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/name-swift.enum/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/name-swift.enum/decodable-implementations",
                        "title": "Decodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/name-swift.enum/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/name-swift.enum/encodable-implementations",
                        "title": "Encodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/name-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/name-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/name-swift.enum",
                    "title": "IntentPerson.Name",
                    "type": "enum"
                  },
                  {
                    "title": "Getting identifying information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/handle-swift.property",
                    "title": "var handle: IntentPerson.Handle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/aliases",
                    "title": "var aliases: [IntentPerson.Handle]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/isme",
                    "title": "var isMe: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/image",
                    "title": "var image: DisplayRepresentation.Image?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the handle label",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the handle labels",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/home",
                            "title": "case home",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/homefax",
                            "title": "case homeFax",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/iphone",
                            "title": "case iPhone",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/main",
                            "title": "case main",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/mobile",
                            "title": "case mobile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/other",
                            "title": "case other",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/pager",
                            "title": "case pager",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/school",
                            "title": "case school",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/work",
                            "title": "case work",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/workfax",
                            "title": "case workFax",
                            "type": "case"
                          },
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/==(_:_:)",
                            "title": "static func == (IntentPerson.Handle.Label, IntentPerson.Handle.Label) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/custom(_:)",
                            "title": "case custom(String)",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/decodable-implementations",
                            "title": "Decodable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/encodable-implementations",
                            "title": "Encodable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.enum",
                        "title": "IntentPerson.Handle.Label",
                        "type": "enum"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/==(_:_:)",
                        "title": "static func == (IntentPerson.Handle, IntentPerson.Handle) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/init(_:label:)",
                        "title": "init(IntentPerson.Handle.Value, label: IntentPerson.Handle.Label)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/init(applicationdefined:label:)",
                        "title": "init(applicationDefined: String, label: String?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/init(emailaddress:label:)",
                        "title": "init(emailAddress: String, label: IntentPerson.Handle.Label)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/init(phonenumber:label:)",
                        "title": "init(phoneNumber: String, label: IntentPerson.Handle.Label)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/label-swift.property",
                        "title": "var label: IntentPerson.Handle.Label",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.property",
                        "title": "var value: IntentPerson.Handle.Value",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/==(_:_:)",
                            "title": "static func == (IntentPerson.Handle.Value, IntentPerson.Handle.Value) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/applicationdefined(_:)",
                            "title": "case applicationDefined(String)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/emailaddress(_:)",
                            "title": "case emailAddress(String)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/phonenumber(_:)",
                            "title": "case phoneNumber(String)",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/decodable-implementations",
                            "title": "Decodable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/encodable-implementations",
                            "title": "Encodable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/value-swift.enum",
                        "title": "IntentPerson.Handle.Value",
                        "type": "enum"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/decodable-implementations",
                        "title": "Decodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/encodable-implementations",
                        "title": "Encodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/handle-swift.struct/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/handle-swift.struct/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/handle-swift.struct",
                    "title": "IntentPerson.Handle",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the interface type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/contact",
                        "title": "case contact",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/email",
                        "title": "case email",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/emailorphone",
                        "title": "case emailOrPhone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/phone",
                        "title": "case phone",
                        "type": "case"
                      },
                      {
                        "title": "Creating a parameter mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/init(rawvalue:)",
                        "title": "init?(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/rawvalue-swift.property",
                        "title": "var rawValue: String",
                        "type": "property"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/parametermode/rawvalue-swift.typealias",
                        "title": "IntentPerson.ParameterMode.RawValue",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/parametermode/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/parametermode/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/parametermode/rawrepresentable-implementations",
                        "title": "RawRepresentable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/parametermode",
                    "title": "IntentPerson.ParameterMode",
                    "type": "enum"
                  },
                  {
                    "title": "Getting person-related identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/identifier-swift.property",
                    "title": "var identifier: IntentPerson.Identifier",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the identifier types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/contact(_:)",
                        "title": "case contact(String)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/applicationdefined(_:)",
                        "title": "case applicationDefined(String)",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/==(_:_:)",
                        "title": "static func == (IntentPerson.Identifier, IntentPerson.Identifier) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/identifier-swift.enum/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/decodable-implementations",
                        "title": "Decodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/identifier-swift.enum/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/encodable-implementations",
                        "title": "Encodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentperson/identifier-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentperson/identifier-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/identifier-swift.enum",
                    "title": "IntentPerson.Identifier",
                    "type": "enum"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/init(handle:)",
                    "title": "init(handle: IntentPerson.Handle)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/specification",
                    "title": "IntentPerson.Specification",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/unwrappedtype",
                    "title": "IntentPerson.UnwrappedType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/valuetype",
                    "title": "IntentPerson.ValueType",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentperson/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: EmptyResolverSpecification<IntentPerson>",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/==(_:_:)",
                        "title": "static func == (IntentPerson, IntentPerson) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/displayrepresentation",
                        "title": "var displayRepresentation: DisplayRepresentation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/localizedstringresource",
                        "title": "var localizedStringResource: LocalizedStringResource",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/intentperson/displayrepresentation(with:)",
                        "title": "func displayRepresentation(with: DisplayRepresentation.Components) async -> DisplayRepresentation",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/instancedisplayrepresentable-implementations",
                    "title": "InstanceDisplayRepresentable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentperson/typedisplayrepresentation",
                        "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentperson/typedisplayrepresentable-implementations",
                    "title": "TypeDisplayRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentperson",
                "title": "IntentPerson",
                "type": "struct"
              },
              {
                "title": "Files",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a file",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/init(data:filename:type:)",
                    "title": "init(data: Data, filename: String, type: UTType?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/init(fileurl:filename:type:)",
                    "title": "init(fileURL: URL, filename: String?, type: UTType?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the file information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/filename",
                    "title": "var filename: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/fileurl",
                    "title": "var fileURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/type",
                    "title": "var type: UTType?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/data",
                    "title": "var data: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/removedoncompletion",
                    "title": "var removedOnCompletion: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/availablecontenttypes",
                    "title": "var availableContentTypes: [UTType]",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/data(contenttype:)",
                    "title": "func data(contentType: UTType) async throws -> Data",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/file(contenttype:destinationdirectory:)",
                    "title": "func file(contentType: UTType, destinationDirectory: URL?) async throws -> (fileURL: URL, openedInPlace: Bool)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/withfile(contenttype:allowopeninplace:filehandler:)",
                    "title": "func withFile<Result>(contentType: UTType, allowOpenInPlace: Bool, fileHandler: (URL, Bool) async throws -> Result) async throws -> Result",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/specification",
                    "title": "IntentFile.Specification",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/unwrappedtype",
                    "title": "IntentFile.UnwrappedType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/valuetype",
                    "title": "IntentFile.ValueType",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentfile/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: EmptyResolverSpecification<IntentFile>",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/==(_:_:)",
                        "title": "static func == (IntentFile.IntentFileError, IntentFile.IntentFileError) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/failedtoloaddata",
                        "title": "case failedToLoadData",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/failedtoloadfile",
                        "title": "case failedToLoadFile",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/errorcode",
                        "title": "var errorCode: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/erroruserinfo",
                        "title": "var errorUserInfo: [String : Any]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/intentfileerror/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentfile/intentfileerror/errordomain-73krc",
                            "title": "static var errorDomain: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentfile/intentfileerror/customnserror-implementations",
                        "title": "CustomNSError Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentfile/intentfileerror/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentfile/intentfileerror/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentfile/intentfileerror/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/appintents/intentfile/intentfileerror/error-implementations",
                        "title": "Error Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/intentfileerror",
                    "title": "IntentFile.IntentFileError",
                    "type": "enum"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/==(_:_:)",
                        "title": "static func == (IntentFile, IntentFile) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/hashable-implementations",
                    "title": "Hashable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/displayrepresentation",
                        "title": "var displayRepresentation: DisplayRepresentation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/localizedstringresource",
                        "title": "var localizedStringResource: LocalizedStringResource",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/intentfile/displayrepresentation(with:)",
                        "title": "func displayRepresentation(with: DisplayRepresentation.Components) async -> DisplayRepresentation",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/instancedisplayrepresentable-implementations",
                    "title": "InstanceDisplayRepresentable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentfile/typedisplayrepresentation",
                        "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentfile/typedisplayrepresentable-implementations",
                    "title": "TypeDisplayRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentfile",
                "title": "IntentFile",
                "type": "struct"
              },
              {
                "title": "Monetary types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a currency type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/init(amount:currencycode:)",
                    "title": "init(amount: Decimal, currencyCode: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the currency details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/amount",
                    "title": "let amount: Decimal",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/currencycode",
                    "title": "let currencyCode: String",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/==(_:_:)",
                    "title": "static func == (IntentCurrencyAmount, IntentCurrencyAmount) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/specification",
                    "title": "IntentCurrencyAmount.Specification",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/unwrappedtype",
                    "title": "IntentCurrencyAmount.UnwrappedType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/valuetype",
                    "title": "IntentCurrencyAmount.ValueType",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcurrencyamount/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: EmptyResolverSpecification<IntentCurrencyAmount>",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentcurrencyamount/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intentcurrencyamount/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentcurrencyamount/displayrepresentation",
                        "title": "var displayRepresentation: DisplayRepresentation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentcurrencyamount/localizedstringresource",
                        "title": "var localizedStringResource: LocalizedStringResource",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/intentcurrencyamount/displayrepresentation(with:)",
                        "title": "func displayRepresentation(with: DisplayRepresentation.Components) async -> DisplayRepresentation",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentcurrencyamount/instancedisplayrepresentable-implementations",
                    "title": "InstanceDisplayRepresentable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentcurrencyamount/typedisplayrepresentation",
                        "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentcurrencyamount/typedisplayrepresentable-implementations",
                    "title": "TypeDisplayRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentcurrencyamount",
                "title": "IntentCurrencyAmount",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a payment method",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/init(type:name:identificationhint:icon:)",
                    "title": "init(type: IntentPaymentMethod.PaymentType, name: LocalizedStringResource?, identificationHint: String?, icon: DisplayRepresentation.Image?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the payment details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.property",
                    "title": "var paymentType: IntentPaymentMethod.PaymentType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/name",
                    "title": "var name: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/identificationhint",
                    "title": "var identificationHint: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/icon",
                    "title": "var icon: DisplayRepresentation.Image?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the payment options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/applepay",
                        "title": "case applePay",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/brokerage",
                        "title": "case brokerage",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/checking",
                        "title": "case checking",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/credit",
                        "title": "case credit",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/debit",
                        "title": "case debit",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/prepaid",
                        "title": "case prepaid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/savings",
                        "title": "case savings",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/store",
                        "title": "case store",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/==(_:_:)",
                        "title": "static func == (IntentPaymentMethod.PaymentType, IntentPaymentMethod.PaymentType) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/appintents/intentpaymentmethod/paymenttype-swift.enum",
                    "title": "IntentPaymentMethod.PaymentType",
                    "type": "enum"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/specification",
                    "title": "IntentPaymentMethod.Specification",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/unwrappedtype",
                    "title": "IntentPaymentMethod.UnwrappedType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/valuetype",
                    "title": "IntentPaymentMethod.ValueType",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentpaymentmethod/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: EmptyResolverSpecification<IntentPaymentMethod>",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/displayrepresentation",
                        "title": "var displayRepresentation: DisplayRepresentation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/localizedstringresource",
                        "title": "var localizedStringResource: LocalizedStringResource",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/appintents/intentpaymentmethod/displayrepresentation(with:)",
                        "title": "func displayRepresentation(with: DisplayRepresentation.Components) async -> DisplayRepresentation",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentpaymentmethod/instancedisplayrepresentable-implementations",
                    "title": "InstanceDisplayRepresentable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentpaymentmethod/typedisplayrepresentation",
                        "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/appintents/intentpaymentmethod/typedisplayrepresentable-implementations",
                    "title": "TypeDisplayRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentpaymentmethod",
                "title": "IntentPaymentMethod",
                "type": "struct"
              },
              {
                "title": "Items and collections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitem/init(_:)",
                    "title": "init(Value)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitem/init(_:title:subtitle:image:)",
                    "title": "init(Value, title: LocalizedStringResource, subtitle: LocalizedStringResource?, image: DisplayRepresentation.Image?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitem/description",
                    "title": "var description: DisplayRepresentation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentitem/value",
                    "title": "var value: Value",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentitem/builder/buildarray(_:)",
                        "title": "static func buildArray([[IntentItem<Value>]]) -> [IntentItem<Value>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitem/builder/buildblock()",
                        "title": "static func buildBlock() -> [Value]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitem/builder/buildblock(_:)-9j0sn",
                        "title": "static func buildBlock(IntentItem<Value>...) -> [IntentItem<Value>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitem/builder/buildblock(_:)-pgo1",
                        "title": "static func buildBlock([IntentItem<Value>]) -> [IntentItem<Value>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitem/builder/buildexpression(_:)-202yw",
                        "title": "static func buildExpression(Value) -> IntentItem<Value>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitem/builder/buildexpression(_:)-90pb0",
                        "title": "static func buildExpression<ExpressionValue>(IntentItem<ExpressionValue>) -> IntentItem<ExpressionValue>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentitem/builder",
                    "title": "IntentItem.Builder",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/intentitem",
                "title": "IntentItem",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/init(promptlabel:usesindexedcollation:items:)",
                    "title": "init(promptLabel: LocalizedStringResource?, usesIndexedCollation: Bool, items: [Result])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/init(promptlabel:usesindexedcollation:sections:)",
                    "title": "init(promptLabel: LocalizedStringResource?, usesIndexedCollation: Bool, sections: [IntentItemSection<Result>])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/init(promptlabel:usesindexedcollation:sectionsbuilder:)",
                    "title": "init(promptLabel: LocalizedStringResource?, usesIndexedCollation: Bool, sectionsBuilder: () -> [IntentItemSection<Result>])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/items",
                    "title": "var items: [Result.ValueType]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/promptlabel",
                    "title": "var promptLabel: LocalizedStringResource?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/sections",
                    "title": "var sections: [IntentItemSection<Result>]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/usesindexedcollation",
                    "title": "var usesIndexedCollation: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitemcollection/empty",
                    "title": "static var empty: IntentItemCollection<Result>",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/intentitemcollection",
                "title": "IntentItemCollection",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/init(_:items:)-2frw8",
                    "title": "init(LocalizedStringResource, items: [Result])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/init(_:items:)-8p4y0",
                    "title": "init(LocalizedStringResource, items: [IntentItem<Result>])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/init(_:itemsbuilder:)",
                    "title": "init(LocalizedStringResource?, itemsBuilder: () -> [IntentItem<Result>])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/init(_:subtitle:image:itemsbuilder:)",
                    "title": "init(LocalizedStringResource, subtitle: LocalizedStringResource?, image: DisplayRepresentation.Image?, itemsBuilder: () -> [IntentItem<Result>])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/init(items:)",
                    "title": "init(items: [IntentItem<Result>])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/init(title:items:)",
                    "title": "init(title: LocalizedStringResource, items: [IntentItem<Result>])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/description",
                    "title": "var description: DisplayRepresentation?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/intentitemsection/items",
                    "title": "var items: [IntentItem<Result>]",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentitemsection/builder/buildblock()",
                        "title": "static func buildBlock() -> [IntentItemSection<Result>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitemsection/builder/buildblock(_:)-4a4je",
                        "title": "static func buildBlock(IntentItemSection<Result>...) -> [IntentItemSection<Result>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intentitemsection/builder/buildblock(_:)-7uwpz",
                        "title": "static func buildBlock(IntentItem<Result>...) -> [IntentItemSection<Result>]",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/appintents/intentitemsection/builder",
                    "title": "IntentItemSection.Builder",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/appintents/intentitemsection",
                "title": "IntentItemSection",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcollectionsize/==(_:_:)",
                    "title": "static func == (IntentCollectionSize, IntentCollectionSize) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcollectionsize/init(exactly:)",
                    "title": "init(exactly: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentcollectionsize/init(integerliteral:)",
                    "title": "init(integerLiteral: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/intentcollectionsize/init(min:max:)",
                    "title": "init(min: Int, max: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intentcollectionsize/integerliteraltype",
                    "title": "IntentCollectionSize.IntegerLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intentcollectionsize/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/intentcollectionsize/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/intentcollectionsize",
                "title": "IntentCollectionSize",
                "type": "struct"
              }
            ],
            "path": "/documentation/appintents/common-data-types",
            "title": "Common types",
            "type": "collection"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the error codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/appintenterror/restartperform",
                "title": "static var restartPerform: AppIntentError",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/permissionrequired/bluetooth",
                    "title": "static let bluetooth: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/permissionrequired/contacts",
                    "title": "static let contacts: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/permissionrequired/localnetwork",
                    "title": "static let localNetwork: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/permissionrequired/photos",
                    "title": "static let photos: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/permissionrequired/siri",
                    "title": "static let siri: AppIntentError",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/permissionrequired/location(precise:)",
                    "title": "static func location(precise: Bool) -> AppIntentError",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/permissionrequired",
                "title": "AppIntentError.PermissionRequired",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/entitynotfound",
                    "title": "static let entityNotFound: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/featurecurrentlyrestricted",
                    "title": "static let featureCurrentlyRestricted: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/networkfailure",
                    "title": "static let networkFailure: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/notallowed",
                    "title": "static let notAllowed: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/partialfailure",
                    "title": "static let partialFailure: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/unknown",
                    "title": "static let unknown: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/unrecoverable/unsupportedondevice",
                    "title": "static let unsupportedOnDevice: AppIntentError",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/unrecoverable",
                "title": "AppIntentError.Unrecoverable",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/useractionrequired/accountsetup",
                    "title": "static let accountSetup: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/useractionrequired/confirmation",
                    "title": "static let confirmation: AppIntentError",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/useractionrequired/signin",
                    "title": "static let signin: AppIntentError",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/useractionrequired",
                "title": "AppIntentError.UserActionRequired",
                "type": "enum"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/localizedstringresource",
                    "title": "var localizedStringResource: LocalizedStringResource",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/customlocalizedstringresourceconvertible-implementations",
                "title": "CustomLocalizedStringResourceConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/description",
                    "title": "var description: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/customstringconvertible-implementations",
                "title": "CustomStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/==(_:_:)",
                    "title": "static func == (AppIntentError, AppIntentError) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/appintenterror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appintenterror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/appintenterror",
            "title": "AppIntentError",
            "type": "struct"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/appshortcutscontent/appshortcuts",
                "title": "var appShortcuts: [AppShortcut]",
                "type": "property"
              }
            ],
            "path": "/documentation/appintents/appshortcutscontent",
            "title": "AppShortcutsContent",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/customurlrepresentationparameterconvertible/urlrepresentationparameter",
                "title": "var urlRepresentationParameter: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/appintents/customurlrepresentationparameterconvertible",
            "title": "CustomURLRepresentationParameterConvertible",
            "type": "protocol"
          },
          {
            "beta": true,
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/nscollectionviewappintentsdatasource/collectionview(_:appentityidentifierforitemat:)",
                "title": "func collectionView(NSCollectionView, appEntityIdentifierForItemAt: IndexPath) -> EntityIdentifier?",
                "type": "method"
              }
            ],
            "path": "/documentation/appintents/nscollectionviewappintentsdatasource",
            "title": "NSCollectionViewAppIntentsDataSource",
            "type": "protocol"
          },
          {
            "beta": true,
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/nstableviewappintentsdatasource/outlineview(_:appentityidentifierfor:)",
                "title": "func outlineView(NSOutlineView, appEntityIdentifierFor: Any?) -> EntityIdentifier?",
                "type": "method"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/nstableviewappintentsdatasource/tableview(_:appentityidentifierfor:)",
                "title": "func tableView(NSTableView, appEntityIdentifierFor: Int) -> EntityIdentifier?",
                "type": "method"
              }
            ],
            "path": "/documentation/appintents/nstableviewappintentsdatasource",
            "title": "NSTableViewAppIntentsDataSource",
            "type": "protocol"
          },
          {
            "beta": true,
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/uicollectionviewappintentsdatasource/collectionview(_:appentityidentifierforitemat:)",
                "title": "func collectionView(UICollectionView, appEntityIdentifierForItemAt: IndexPath) -> EntityIdentifier?",
                "type": "method"
              }
            ],
            "path": "/documentation/appintents/uicollectionviewappintentsdatasource",
            "title": "UICollectionViewAppIntentsDataSource",
            "type": "protocol"
          },
          {
            "beta": true,
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/uitableviewappintentsdatasource/tableview(_:appentityidentifierforrowat:)",
                "title": "func tableView(UITableView, appEntityIdentifierForRowAt: IndexPath) -> EntityIdentifier?",
                "type": "method"
              }
            ],
            "path": "/documentation/appintents/uitableviewappintentsdatasource",
            "title": "UITableViewAppIntentsDataSource",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "beta": true,
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielement/state-swift.struct/init(isselected:)",
                    "title": "init(isSelected: Bool)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielement/state-swift.struct/isselected",
                    "title": "var isSelected: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/appentityuielement/state-swift.struct",
                "title": "AppEntityUIElement.State",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielement/init(_:bounds:state:subelements:)",
                "title": "init<Entity>(Entity, bounds: CGRect, state: AppEntityUIElement.State, subelements: [AppEntityUIElement])",
                "type": "init"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielement/init(identifier:bounds:state:subelements:)",
                "title": "init(identifier: EntityIdentifier, bounds: CGRect, state: AppEntityUIElement.State, subelements: [AppEntityUIElement])",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielement/bounds",
                "title": "var bounds: CGRect",
                "type": "property"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielement/identifier",
                "title": "var identifier: EntityIdentifier",
                "type": "property"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielement/state-swift.property",
                "title": "var state: AppEntityUIElement.State",
                "type": "property"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielement/subelements",
                "title": "var subelements: [AppEntityUIElement]",
                "type": "property"
              }
            ],
            "path": "/documentation/appintents/appentityuielement",
            "title": "AppEntityUIElement",
            "type": "struct"
          },
          {
            "beta": true,
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielementscontext/bounds",
                "title": "let bounds: CGRect",
                "type": "property"
              },
              {
                "beta": true,
                "path": "/documentation/appintents/appentityuielementscontext/requests",
                "title": "let requests: Set<AppEntityUIElementsContext.ElementsRequest>",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/==(_:_:)",
                    "title": "static func == (AppEntityUIElementsContext.ElementsRequest, AppEntityUIElementsContext.ElementsRequest) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/selected",
                    "title": "case selected",
                    "type": "case"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/visible(rect:)",
                    "title": "case visible(rect: CGRect)",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/appintents/appentityuielementscontext/elementsrequest/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/appentityuielementscontext/elementsrequest",
                "title": "AppEntityUIElementsContext.ElementsRequest",
                "type": "enum"
              }
            ],
            "path": "/documentation/appintents/appentityuielementscontext",
            "title": "AppEntityUIElementsContext",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/confirmationconditions/init(rawvalue:)",
                "title": "init(rawValue: Int)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/confirmationconditions/rawvalue-swift.property",
                "title": "let rawValue: Int",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/confirmationconditions/arrayliteralelement",
                "title": "ConfirmationConditions.ArrayLiteralElement",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/confirmationconditions/element",
                "title": "ConfirmationConditions.Element",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/confirmationconditions/rawvalue-swift.typealias",
                "title": "ConfirmationConditions.RawValue",
                "type": "typealias"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/confirmationconditions/lowconfidencesource",
                "title": "static let lowConfidenceSource: ConfirmationConditions",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/appintents/confirmationconditions/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/contains(_:)",
                    "title": "func contains(Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/formintersection(_:)",
                    "title": "func formIntersection(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/formsymmetricdifference(_:)",
                    "title": "func formSymmetricDifference(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/formunion(_:)",
                    "title": "func formUnion(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/insert(_:)",
                    "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/intersection(_:)",
                    "title": "func intersection(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/remove(_:)",
                    "title": "func remove(Self.Element) -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/symmetricdifference(_:)",
                    "title": "func symmetricDifference(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/union(_:)",
                    "title": "func union(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/update(with:)",
                    "title": "func update(with: Self.Element) -> Self.Element?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/confirmationconditions/optionset-implementations",
                "title": "OptionSet Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/init(_:)",
                    "title": "init<S>(S)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/init(arrayliteral:)",
                    "title": "init(arrayLiteral: Self.Element...)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/isdisjoint(with:)",
                    "title": "func isDisjoint(with: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/isstrictsubset(of:)",
                    "title": "func isStrictSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/isstrictsuperset(of:)",
                    "title": "func isStrictSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/issubset(of:)",
                    "title": "func isSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/issuperset(of:)",
                    "title": "func isSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/subtract(_:)",
                    "title": "func subtract(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/appintents/confirmationconditions/subtracting(_:)",
                    "title": "func subtracting(Self) -> Self",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/confirmationconditions/setalgebra-implementations",
                "title": "SetAlgebra Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/confirmationconditions",
            "title": "ConfirmationConditions",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/entityurlrepresentation/init(_:)",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/entityurlrepresentation/init(stringinterpolation:)",
                "title": "init(stringInterpolation: EntityURLRepresentation<Entity>.StringInterpolation)",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/entityurlrepresentation/init(stringliteral:)",
                "title": "init(stringLiteral: String)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/entityurlrepresentation/extendedgraphemeclusterliteraltype",
                "title": "EntityURLRepresentation.ExtendedGraphemeClusterLiteralType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/entityurlrepresentation/stringliteraltype",
                "title": "EntityURLRepresentation.StringLiteralType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/entityurlrepresentation/unicodescalarliteraltype",
                "title": "EntityURLRepresentation.UnicodeScalarLiteralType",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityurlrepresentation/init(unicodescalarliteral:)",
                    "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/entityurlrepresentation/expressiblebyextendedgraphemeclusterliteral-implementations",
                "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/appendinterpolation(_:)-8cuwi",
                        "title": "func appendInterpolation<ValueType, Subject>(Subject)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/appendinterpolation(_:)-r282",
                        "title": "func appendInterpolation(EntityURLRepresentation<Entity>.StringInterpolation.Token)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/stringliteraltype",
                        "title": "EntityURLRepresentation.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token/==(_:_:)",
                            "title": "static func == (EntityURLRepresentation<Entity>.StringInterpolation.Token, EntityURLRepresentation<Entity>.StringInterpolation.Token) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token/id",
                            "title": "case id",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation/token",
                        "title": "EntityURLRepresentation.StringInterpolation.Token",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/entityurlrepresentation/stringinterpolation",
                    "title": "EntityURLRepresentation.StringInterpolation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/appintents/entityurlrepresentation/expressiblebystringinterpolation-implementations",
                "title": "ExpressibleByStringInterpolation Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/entityurlrepresentation/init(extendedgraphemeclusterliteral:)",
                    "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/entityurlrepresentation/expressiblebystringliteral-implementations",
                "title": "ExpressibleByStringLiteral Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/entityurlrepresentation",
            "title": "EntityURLRepresentation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/init(stringinterpolation:)",
                    "title": "init(stringInterpolation: EnumURLRepresentation<Enum>.StringInterpolation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/init(stringliteral:)",
                    "title": "init(stringLiteral: EnumURLRepresentation<Enum>.StringLiteralType)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/extendedgraphemeclusterliteraltype",
                    "title": "EnumURLRepresentation.EnumSingleURLRepresentation.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/stringinterpolation",
                    "title": "EnumURLRepresentation.EnumSingleURLRepresentation.StringInterpolation",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/stringliteraltype",
                    "title": "EnumURLRepresentation.EnumSingleURLRepresentation.StringLiteralType",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/unicodescalarliteraltype",
                    "title": "EnumURLRepresentation.EnumSingleURLRepresentation.UnicodeScalarLiteralType",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/appintents/enumurlrepresentation/enumsingleurlrepresentation",
                "title": "EnumURLRepresentation.EnumSingleURLRepresentation",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/init(_:)-1odm",
                "title": "init([Enum : EnumURLRepresentation<Enum>.EnumSingleURLRepresentation])",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/init(_:)-6p999",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/init(stringinterpolation:)",
                "title": "init(stringInterpolation: EnumURLRepresentation<Enum>.StringInterpolation)",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/init(stringliteral:)",
                "title": "init(stringLiteral: String)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/extendedgraphemeclusterliteraltype",
                "title": "EnumURLRepresentation.ExtendedGraphemeClusterLiteralType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/stringliteraltype",
                "title": "EnumURLRepresentation.StringLiteralType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/enumurlrepresentation/unicodescalarliteraltype",
                "title": "EnumURLRepresentation.UnicodeScalarLiteralType",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/init(unicodescalarliteral:)",
                    "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/enumurlrepresentation/expressiblebyextendedgraphemeclusterliteral-implementations",
                "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/appendinterpolation(_:)-70nx3",
                        "title": "func appendInterpolation(Enum)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/appendinterpolation(_:)-r06h",
                        "title": "func appendInterpolation(EnumURLRepresentation<Enum>.StringInterpolation.Token)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/stringliteraltype",
                        "title": "EnumURLRepresentation.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token/==(_:_:)",
                            "title": "static func == (EnumURLRepresentation<Enum>.StringInterpolation.Token, EnumURLRepresentation<Enum>.StringInterpolation.Token) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token/rawvalue",
                            "title": "case rawValue",
                            "type": "case"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation/token",
                        "title": "EnumURLRepresentation.StringInterpolation.Token",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/appintents/enumurlrepresentation/stringinterpolation",
                    "title": "EnumURLRepresentation.StringInterpolation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/appintents/enumurlrepresentation/expressiblebystringinterpolation-implementations",
                "title": "ExpressibleByStringInterpolation Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/enumurlrepresentation/init(extendedgraphemeclusterliteral:)",
                    "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/enumurlrepresentation/expressiblebystringliteral-implementations",
                "title": "ExpressibleByStringLiteral Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/enumurlrepresentation",
            "title": "EnumURLRepresentation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/==(_:_:)",
                "title": "static func == (FileEntityIdentifier, FileEntityIdentifier) -> Bool",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/draftidentifier",
                "title": "var draftIdentifier: String?",
                "type": "property"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/fileurl",
                "title": "var fileURL: URL?",
                "type": "property"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/isdraft",
                "title": "var isDraft: Bool",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/draft(identifier:)",
                "title": "static func draft(identifier: String) -> FileEntityIdentifier",
                "type": "method"
              },
              {
                "path": "/documentation/appintents/fileentityidentifier/file(url:)",
                "title": "static func file(url: URL) throws -> FileEntityIdentifier",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/fileentityidentifier/entityidentifierstring",
                    "title": "var entityIdentifierString: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/fileentityidentifier/entityidentifier(for:)",
                    "title": "static func entityIdentifier(for: String) -> FileEntityIdentifier?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/fileentityidentifier/entityidentifierconvertible-implementations",
                "title": "EntityIdentifierConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/fileentityidentifier/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/appintents/fileentityidentifier/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/fileentityidentifier",
            "title": "FileEntityIdentifier",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/intenturlrepresentation/init(_:)",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/intenturlrepresentation/init(stringinterpolation:)",
                "title": "init(stringInterpolation: IntentURLRepresentation<Intent>.StringInterpolation)",
                "type": "init"
              },
              {
                "path": "/documentation/appintents/intenturlrepresentation/init(stringliteral:)",
                "title": "init(stringLiteral: String)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/intenturlrepresentation/extendedgraphemeclusterliteraltype",
                "title": "IntentURLRepresentation.ExtendedGraphemeClusterLiteralType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/intenturlrepresentation/stringliteraltype",
                "title": "IntentURLRepresentation.StringLiteralType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/intenturlrepresentation/unicodescalarliteraltype",
                "title": "IntentURLRepresentation.UnicodeScalarLiteralType",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intenturlrepresentation/init(unicodescalarliteral:)",
                    "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/intenturlrepresentation/expressiblebyextendedgraphemeclusterliteral-implementations",
                "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intenturlrepresentation/stringinterpolation/init(literalcapacity:interpolationcount:)",
                        "title": "init(literalCapacity: Int, interpolationCount: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intenturlrepresentation/stringinterpolation/appendinterpolation(_:)",
                        "title": "func appendInterpolation<ValueType, Subject>(Subject)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/appintents/intenturlrepresentation/stringinterpolation/appendliteral(_:)",
                        "title": "func appendLiteral(String)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/appintents/intenturlrepresentation/stringinterpolation/stringliteraltype",
                        "title": "IntentURLRepresentation.StringInterpolation.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/appintents/intenturlrepresentation/stringinterpolation",
                    "title": "IntentURLRepresentation.StringInterpolation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/appintents/intenturlrepresentation/expressiblebystringinterpolation-implementations",
                "title": "ExpressibleByStringInterpolation Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/intenturlrepresentation/init(extendedgraphemeclusterliteral:)",
                    "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/appintents/intenturlrepresentation/expressiblebystringliteral-implementations",
                "title": "ExpressibleByStringLiteral Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/intenturlrepresentation",
            "title": "IntentURLRepresentation",
            "type": "struct"
          },
          {
            "title": "Macros",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/appintents/unionvalue()",
            "title": "macro UnionValue()",
            "type": "macro"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/videocategory/freeform",
                "title": "case freeform",
                "type": "case"
              },
              {
                "path": "/documentation/appintents/videocategory/movies",
                "title": "case movies",
                "type": "case"
              },
              {
                "path": "/documentation/appintents/videocategory/tv",
                "title": "case tv",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/videocategory/init(rawvalue:)",
                "title": "init?(rawValue: String)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/videocategory/rawvalue-swift.property",
                "title": "var rawValue: String",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/videocategory/allcases-swift.typealias",
                "title": "VideoCategory.AllCases",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/videocategory/rawvalue-swift.typealias",
                "title": "VideoCategory.RawValue",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/videocategory/specification",
                "title": "VideoCategory.Specification",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/videocategory/unwrappedtype",
                "title": "VideoCategory.UnwrappedType",
                "type": "typealias"
              },
              {
                "path": "/documentation/appintents/videocategory/valuetype",
                "title": "VideoCategory.ValueType",
                "type": "typealias"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/appintents/videocategory/allcases-swift.type.property",
                "title": "static var allCases: [VideoCategory]",
                "type": "property"
              },
              {
                "path": "/documentation/appintents/videocategory/casedisplayrepresentations",
                "title": "static var caseDisplayRepresentations: [VideoCategory : DisplayRepresentation]",
                "type": "property"
              },
              {
                "path": "/documentation/appintents/videocategory/typedisplayrepresentation",
                "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/videocategory/defaultresolverspecification",
                    "title": "static var defaultResolverSpecification: some ResolverSpecification",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/videocategory/appenum-implementations",
                "title": "AppEnum Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/videocategory/localizedstringresource",
                    "title": "var localizedStringResource: LocalizedStringResource",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/videocategory/casedisplayrepresentable-implementations",
                "title": "CaseDisplayRepresentable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/videocategory/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/appintents/videocategory/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/videocategory/persistentidentifier",
                    "title": "static var persistentIdentifier: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/appintents/videocategory/persistentlyidentifiable-implementations",
                "title": "PersistentlyIdentifiable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/videocategory/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/appintents/videocategory/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/appintents/videocategory/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/appintents/videocategory",
            "title": "VideoCategory",
            "type": "enum"
          }
        ],
        "path": "/documentation/appintents",
        "title": "App Intents",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
