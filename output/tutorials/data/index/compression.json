{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Objects that simplify multiple-step compression",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-data-with-input-and-output-filters",
            "title": "Compressing and decompressing data with input and output filters",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-files-with-stream-compression",
            "title": "Compressing and Decompressing Files with Stream Compression",
            "type": "sampleCode"
          },
          {
            "title": "Multiple-step compression",
            "type": "groupMarker"
          },
          {
            "title": "Single-step compression",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-data-with-buffer-compression",
            "title": "Compressing and decompressing data with buffer compression",
            "type": "article"
          }
        ],
        "path": "/documentation/compression",
        "title": "Compression",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Objects that simplify multiple-step compression",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-data-with-input-and-output-filters",
            "title": "Compressing and decompressing data with input and output filters",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-files-with-stream-compression",
            "title": "Compressing and Decompressing Files with Stream Compression",
            "type": "sampleCode"
          },
          {
            "title": "Multiple-step compression",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Compression Stream Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream/dst_ptr",
                "title": "dst_ptr",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/dst_size",
                "title": "dst_size",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/src_ptr",
                "title": "src_ptr",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/src_size",
                "title": "src_size",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/state",
                "title": "state",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_stream",
            "title": "compression_stream",
            "type": "struct"
          },
          {
            "path": "/documentation/compression/compression_stream_init(_:_:_:)",
            "title": "compression_stream_init",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_stream_process(_:_:)",
            "title": "compression_stream_process",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_stream_destroy(_:)",
            "title": "compression_stream_destroy",
            "type": "func"
          },
          {
            "children": [
              {
                "title": "Status Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_status_ok",
                "title": "COMPRESSION_STATUS_OK",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_status_end",
                "title": "COMPRESSION_STATUS_END",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_status_error",
                "title": "COMPRESSION_STATUS_ERROR",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/compression_status",
            "title": "compression_status",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Flag Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_finalize",
                "title": "COMPRESSION_STREAM_FINALIZE",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/compression_stream_flags",
            "title": "compression_stream_flags",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Operation Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_encode",
                "title": "COMPRESSION_STREAM_ENCODE",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_stream_decode",
                "title": "COMPRESSION_STREAM_DECODE",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/compression_stream_operation",
            "title": "compression_stream_operation",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Algorithm Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_lzfse",
                "title": "COMPRESSION_LZFSE",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lz4",
                "title": "COMPRESSION_LZ4",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lz4_raw",
                "title": "COMPRESSION_LZ4_RAW",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lzma",
                "title": "COMPRESSION_LZMA",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_zlib",
                "title": "COMPRESSION_ZLIB",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_brotli",
                "title": "COMPRESSION_BROTLI",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lzbitmap",
                "title": "COMPRESSION_LZBITMAP",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/compression_algorithm",
            "title": "compression_algorithm",
            "type": "enum"
          },
          {
            "title": "Single-step compression",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-data-with-buffer-compression",
            "title": "Compressing and decompressing data with buffer compression",
            "type": "article"
          },
          {
            "path": "/documentation/compression/compression_encode_scratch_buffer_size(_:)",
            "title": "compression_encode_scratch_buffer_size",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_encode_buffer(_:_:_:_:_:_:)",
            "title": "compression_encode_buffer",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_decode_scratch_buffer_size(_:)",
            "title": "compression_decode_scratch_buffer_size",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_decode_buffer(_:_:_:_:_:_:)",
            "title": "compression_decode_buffer",
            "type": "func"
          },
          {
            "children": [
              {
                "title": "Algorithm Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_lzfse",
                "title": "COMPRESSION_LZFSE",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lz4",
                "title": "COMPRESSION_LZ4",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lz4_raw",
                "title": "COMPRESSION_LZ4_RAW",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lzma",
                "title": "COMPRESSION_LZMA",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_zlib",
                "title": "COMPRESSION_ZLIB",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_brotli",
                "title": "COMPRESSION_BROTLI",
                "type": "case"
              },
              {
                "path": "/documentation/compression/compression_lzbitmap",
                "title": "COMPRESSION_LZBITMAP",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/compression_algorithm",
            "title": "compression_algorithm",
            "type": "enum"
          }
        ],
        "path": "/documentation/compression",
        "title": "Compression",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Objects that simplify multiple-step compression",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-data-with-input-and-output-filters",
            "title": "Compressing and decompressing data with input and output filters",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-files-with-stream-compression",
            "title": "Compressing and Decompressing Files with Stream Compression",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/inputfilter/init(_:using:buffercapacity:readingfrom:)",
                "title": "init(FilterOperation, using: Algorithm, bufferCapacity: Int, readingFrom: (Int) throws -> D?) throws",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/inputfilter/readdata(oflength:)",
                "title": "func readData(ofLength: Int) throws -> Data?",
                "type": "method"
              }
            ],
            "path": "/documentation/compression/inputfilter",
            "title": "InputFilter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/outputfilter/init(_:using:buffercapacity:writingto:)",
                "title": "init(FilterOperation, using: Algorithm, bufferCapacity: Int, writingTo: (Data?) throws -> Void) throws",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/outputfilter/write(_:)",
                "title": "func write<D>(D?) throws",
                "type": "method"
              },
              {
                "path": "/documentation/compression/outputfilter/finalize()",
                "title": "func finalize() throws",
                "type": "method"
              }
            ],
            "path": "/documentation/compression/outputfilter",
            "title": "OutputFilter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/algorithm/brotli",
                "title": "case brotli",
                "type": "case"
              },
              {
                "path": "/documentation/compression/algorithm/lz4",
                "title": "case lz4",
                "type": "case"
              },
              {
                "path": "/documentation/compression/algorithm/lzbitmap",
                "title": "case lzbitmap",
                "type": "case"
              },
              {
                "path": "/documentation/compression/algorithm/lzfse",
                "title": "case lzfse",
                "type": "case"
              },
              {
                "path": "/documentation/compression/algorithm/lzma",
                "title": "case lzma",
                "type": "case"
              },
              {
                "path": "/documentation/compression/algorithm/zlib",
                "title": "case zlib",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/algorithm",
            "title": "Algorithm",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/filtererror/invaliddata",
                "title": "case invalidData",
                "type": "case"
              },
              {
                "path": "/documentation/compression/filtererror/invalidstate",
                "title": "case invalidState",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/filtererror",
            "title": "FilterError",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/filteroperation/compress",
                "title": "case compress",
                "type": "case"
              },
              {
                "path": "/documentation/compression/filteroperation/decompress",
                "title": "case decompress",
                "type": "case"
              }
            ],
            "path": "/documentation/compression/filteroperation",
            "title": "FilterOperation",
            "type": "enum"
          },
          {
            "title": "Multiple-step compression",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream/init(dst_ptr:dst_size:src_ptr:src_size:state:)",
                "title": "init(dst_ptr: UnsafeMutablePointer<UInt8>, dst_size: Int, src_ptr: UnsafePointer<UInt8>, src_size: Int, state: UnsafeMutableRawPointer?)",
                "type": "init"
              },
              {
                "title": "Compression Stream Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream/dst_ptr",
                "title": "var dst_ptr: UnsafeMutablePointer<UInt8>",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/dst_size",
                "title": "var dst_size: Int",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/src_ptr",
                "title": "var src_ptr: UnsafePointer<UInt8>",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/src_size",
                "title": "var src_size: Int",
                "type": "property"
              },
              {
                "path": "/documentation/compression/compression_stream/state",
                "title": "var state: UnsafeMutableRawPointer?",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_stream",
            "title": "compression_stream",
            "type": "struct"
          },
          {
            "path": "/documentation/compression/compression_stream_init(_:_:_:)",
            "title": "func compression_stream_init(UnsafeMutablePointer<compression_stream>, compression_stream_operation, compression_algorithm) -> compression_status",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_stream_process(_:_:)",
            "title": "func compression_stream_process(UnsafeMutablePointer<compression_stream>, Int32) -> compression_status",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_stream_destroy(_:)",
            "title": "func compression_stream_destroy(UnsafeMutablePointer<compression_stream>) -> compression_status",
            "type": "func"
          },
          {
            "children": [
              {
                "title": "Status Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_status_ok",
                "title": "var COMPRESSION_STATUS_OK: compression_status",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_status_end",
                "title": "var COMPRESSION_STATUS_END: compression_status",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_status_error",
                "title": "var COMPRESSION_STATUS_ERROR: compression_status",
                "type": "var"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_status/init(_:)",
                "title": "init(Int32)",
                "type": "init"
              },
              {
                "path": "/documentation/compression/compression_status/init(rawvalue:)",
                "title": "init(rawValue: Int32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_status/rawvalue",
                "title": "var rawValue: Int32",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_status",
            "title": "compression_status",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Flag Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_finalize",
                "title": "var COMPRESSION_STREAM_FINALIZE: compression_stream_flags",
                "type": "var"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_flags/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/compression/compression_stream_flags/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_flags/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_stream_flags",
            "title": "compression_stream_flags",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operation Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_encode",
                "title": "var COMPRESSION_STREAM_ENCODE: compression_stream_operation",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_stream_decode",
                "title": "var COMPRESSION_STREAM_DECODE: compression_stream_operation",
                "type": "var"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_operation/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/compression/compression_stream_operation/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_stream_operation/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_stream_operation",
            "title": "compression_stream_operation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Algorithm Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_lzfse",
                "title": "var COMPRESSION_LZFSE: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lz4",
                "title": "var COMPRESSION_LZ4: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lz4_raw",
                "title": "var COMPRESSION_LZ4_RAW: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lzma",
                "title": "var COMPRESSION_LZMA: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_zlib",
                "title": "var COMPRESSION_ZLIB: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_brotli",
                "title": "var COMPRESSION_BROTLI: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lzbitmap",
                "title": "var COMPRESSION_LZBITMAP: compression_algorithm",
                "type": "var"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_algorithm/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/compression/compression_algorithm/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_algorithm/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_algorithm",
            "title": "compression_algorithm",
            "type": "struct"
          },
          {
            "title": "Single-step compression",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/accelerate/compressing-and-decompressing-data-with-buffer-compression",
            "title": "Compressing and decompressing data with buffer compression",
            "type": "article"
          },
          {
            "path": "/documentation/compression/compression_encode_scratch_buffer_size(_:)",
            "title": "func compression_encode_scratch_buffer_size(compression_algorithm) -> Int",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_encode_buffer(_:_:_:_:_:_:)",
            "title": "func compression_encode_buffer(UnsafeMutablePointer<UInt8>, Int, UnsafePointer<UInt8>, Int, UnsafeMutableRawPointer?, compression_algorithm) -> Int",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_decode_scratch_buffer_size(_:)",
            "title": "func compression_decode_scratch_buffer_size(compression_algorithm) -> Int",
            "type": "func"
          },
          {
            "path": "/documentation/compression/compression_decode_buffer(_:_:_:_:_:_:)",
            "title": "func compression_decode_buffer(UnsafeMutablePointer<UInt8>, Int, UnsafePointer<UInt8>, Int, UnsafeMutableRawPointer?, compression_algorithm) -> Int",
            "type": "func"
          },
          {
            "children": [
              {
                "title": "Algorithm Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_lzfse",
                "title": "var COMPRESSION_LZFSE: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lz4",
                "title": "var COMPRESSION_LZ4: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lz4_raw",
                "title": "var COMPRESSION_LZ4_RAW: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lzma",
                "title": "var COMPRESSION_LZMA: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_zlib",
                "title": "var COMPRESSION_ZLIB: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_brotli",
                "title": "var COMPRESSION_BROTLI: compression_algorithm",
                "type": "var"
              },
              {
                "path": "/documentation/compression/compression_lzbitmap",
                "title": "var COMPRESSION_LZBITMAP: compression_algorithm",
                "type": "var"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_algorithm/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/compression/compression_algorithm/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compression/compression_algorithm/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/compression/compression_algorithm",
            "title": "compression_algorithm",
            "type": "struct"
          }
        ],
        "path": "/documentation/compression",
        "title": "Compression",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
