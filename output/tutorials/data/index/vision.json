{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Still-image analysis",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/classifying-images-for-categorization-and-search",
            "title": "Classifying images for categorization and search",
            "type": "sampleCode"
          },
          {
            "title": "Image sequence analysis",
            "type": "groupMarker"
          },
          {
            "title": "Image aesthetics analysis",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/generating-thumbnails-from-videos",
            "title": "Generating high-quality thumbnails from videos",
            "type": "sampleCode"
          },
          {
            "title": "Saliency analysis",
            "type": "groupMarker"
          },
          {
            "title": "Object tracking",
            "type": "groupMarker"
          },
          {
            "title": "Face and body detection",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/analyzing-a-selfie-and-visualizing-its-content",
            "title": "Analyzing a selfie and visualizing its content",
            "type": "sampleCode"
          },
          {
            "title": "Body and hand pose detection",
            "type": "groupMarker"
          },
          {
            "title": "3D body pose detection",
            "type": "groupMarker"
          },
          {
            "title": "Text detection",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/locating-and-displaying-recognized-text",
            "title": "Locating and displaying recognized text",
            "type": "sampleCode"
          },
          {
            "title": "Barcode detection",
            "type": "groupMarker"
          },
          {
            "title": "Trajectory, contour, and horizon detection",
            "type": "groupMarker"
          },
          {
            "title": "Animal detection",
            "type": "groupMarker"
          },
          {
            "title": "Optical flow and rectangle detection",
            "type": "groupMarker"
          },
          {
            "title": "Image alignment",
            "type": "groupMarker"
          },
          {
            "title": "Image feature print and background removal",
            "type": "groupMarker"
          },
          {
            "title": "Machine learning image analysis",
            "type": "groupMarker"
          },
          {
            "title": "Coordinate conversion",
            "type": "groupMarker"
          },
          {
            "title": "Request Handlers",
            "type": "groupMarker"
          },
          {
            "title": "Utilities",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Legacy API",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/building-a-feature-rich-app-for-sports-analysis",
                "title": "Building a feature-rich app for sports analysis",
                "type": "sampleCode"
              },
              {
                "title": "Still-image analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-objects-in-still-images",
                "title": "Detecting Objects in Still Images",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/classifying-images-for-categorization-and-search",
                "title": "Classifying images for categorization and search",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/analyzing-image-similarity-with-feature-print",
                "title": "Analyzing Image Similarity with Feature Print",
                "type": "sampleCode"
              },
              {
                "title": "Image sequence analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/applying-matte-effects-to-people-in-images-and-video",
                "title": "Applying Matte Effects to People in Images and Video",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/segmenting-and-colorizing-individuals-from-a-surrounding-scene",
                "title": "Segmenting and colorizing individuals from a surrounding scene",
                "type": "sampleCode"
              },
              {
                "title": "Image aesthetics analysis",
                "type": "groupMarker"
              },
              {
                "title": "Saliency analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/cropping-images-using-saliency",
                "title": "Cropping Images Using Saliency",
                "type": "article"
              },
              {
                "path": "/documentation/vision/highlighting-areas-of-interest-in-an-image-using-saliency",
                "title": "Highlighting Areas of Interest in an Image Using Saliency",
                "type": "sampleCode"
              },
              {
                "title": "Object tracking",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/tracking-the-user-s-face-in-real-time",
                "title": "Tracking the Userâ€™s Face in Real Time",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/tracking-multiple-objects-or-rectangles-in-video",
                "title": "Tracking Multiple Objects or Rectangles in Video",
                "type": "sampleCode"
              },
              {
                "title": "Rectangle detection",
                "type": "groupMarker"
              },
              {
                "title": "Face and body detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/selecting-a-selfie-based-on-capture-quality",
                "title": "Selecting a selfie based on capture quality",
                "type": "sampleCode"
              },
              {
                "title": "Body and hand pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-human-body-poses-in-images",
                "title": "Detecting Human Body Poses in Images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-hand-poses-with-vision",
                "title": "Detecting Hand Poses with Vision",
                "type": "sampleCode"
              },
              {
                "title": "3D body pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/identifying-3d-human-body-poses-in-images",
                "title": "Identifying 3D human body poses in images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-human-body-poses-in-3d-with-vision",
                "title": "Detecting human body poses in 3D with Vision",
                "type": "sampleCode"
              },
              {
                "title": "Animal detection",
                "type": "groupMarker"
              },
              {
                "title": "Animal body pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-animal-body-poses-with-vision",
                "title": "Detecting animal body poses with Vision",
                "type": "sampleCode"
              },
              {
                "title": "Trajectory detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/identifying-trajectories-in-video",
                "title": "Identifying Trajectories in Video",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-moving-objects-in-a-video",
                "title": "Detecting moving objects in a video",
                "type": "sampleCode"
              },
              {
                "title": "Contour detection",
                "type": "groupMarker"
              },
              {
                "title": "Optical flow",
                "type": "groupMarker"
              },
              {
                "title": "Barcode detection",
                "type": "groupMarker"
              },
              {
                "title": "Text detection",
                "type": "groupMarker"
              },
              {
                "title": "Text recognition",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizing-text-in-images",
                "title": "Recognizing Text in Images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/extracting-phone-numbers-from-text-in-images",
                "title": "Extracting phone numbers from text in images",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/locating-and-displaying-recognized-text",
                "title": "Locating and displaying recognized text",
                "type": "sampleCode"
              },
              {
                "title": "Object recognition",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizing-objects-in-live-capture",
                "title": "Recognizing Objects in Live Capture",
                "type": "sampleCode"
              },
              {
                "title": "Request progress tracking",
                "type": "groupMarker"
              },
              {
                "title": "Horizon detection",
                "type": "groupMarker"
              },
              {
                "title": "Image alignment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/aligning-similar-images",
                "title": "Aligning Similar Images",
                "type": "sampleCode"
              },
              {
                "title": "Image background removal",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/applying-visual-effects-to-foreground-subjects",
                "title": "Applying visual effects to foreground subjects",
                "type": "sampleCode"
              },
              {
                "title": "Machine learning image analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/training-a-create-ml-model-to-classify-flowers",
                "title": "Training a Create ML Model to Classify Flowers",
                "type": "sampleCode"
              },
              {
                "title": "Coordinate conversion",
                "type": "groupMarker"
              },
              {
                "title": "Utilities",
                "type": "groupMarker"
              },
              {
                "title": "Common data types",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "title": "Version and revision numbers",
                "type": "groupMarker"
              },
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vision-macros",
                "title": "Macros",
                "type": "collection"
              }
            ],
            "path": "/documentation/vision/original-objective-c-and-swift-api",
            "title": "Original Objective-C and Swift API",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Type Aliases",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/vision",
        "title": "Vision",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Still-image analysis",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/classifying-images-for-categorization-and-search",
            "title": "Classifying images for categorization and search",
            "type": "sampleCode"
          },
          {
            "title": "Image sequence analysis",
            "type": "groupMarker"
          },
          {
            "title": "Image aesthetics analysis",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/generating-thumbnails-from-videos",
            "title": "Generating high-quality thumbnails from videos",
            "type": "sampleCode"
          },
          {
            "title": "Saliency analysis",
            "type": "groupMarker"
          },
          {
            "title": "Object tracking",
            "type": "groupMarker"
          },
          {
            "title": "Face and body detection",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/analyzing-a-selfie-and-visualizing-its-content",
            "title": "Analyzing a selfie and visualizing its content",
            "type": "sampleCode"
          },
          {
            "title": "Body and hand pose detection",
            "type": "groupMarker"
          },
          {
            "title": "3D body pose detection",
            "type": "groupMarker"
          },
          {
            "title": "Text detection",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/locating-and-displaying-recognized-text",
            "title": "Locating and displaying recognized text",
            "type": "sampleCode"
          },
          {
            "title": "Barcode detection",
            "type": "groupMarker"
          },
          {
            "title": "Trajectory, contour, and horizon detection",
            "type": "groupMarker"
          },
          {
            "title": "Animal detection",
            "type": "groupMarker"
          },
          {
            "title": "Optical flow and rectangle detection",
            "type": "groupMarker"
          },
          {
            "title": "Image alignment",
            "type": "groupMarker"
          },
          {
            "title": "Image feature print and background removal",
            "type": "groupMarker"
          },
          {
            "title": "Machine learning image analysis",
            "type": "groupMarker"
          },
          {
            "title": "Coordinate conversion",
            "type": "groupMarker"
          },
          {
            "title": "Request Handlers",
            "type": "groupMarker"
          },
          {
            "title": "Utilities",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Legacy API",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/building-a-feature-rich-app-for-sports-analysis",
                "title": "Building a feature-rich app for sports analysis",
                "type": "sampleCode"
              },
              {
                "title": "Still-image analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-objects-in-still-images",
                "title": "Detecting Objects in Still Images",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/classifying-images-for-categorization-and-search",
                "title": "Classifying images for categorization and search",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/analyzing-image-similarity-with-feature-print",
                "title": "Analyzing Image Similarity with Feature Print",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/init(completionhandler:)",
                    "title": "- initWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequestcompletionhandler",
                    "title": "VNRequestCompletionHandler",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/completionhandler",
                    "title": "completionHandler",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/preferbackgroundprocessing",
                    "title": "preferBackgroundProcessing",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/revision",
                    "title": "revision",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrequest/usescpuonly",
                    "title": "usesCPUOnly",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Compute Device",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/setcomputedevice:forcomputestage:",
                    "title": "- setComputeDevice:forComputeStage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/computedeviceforcomputestage:",
                    "title": "- computeDeviceForComputeStage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/supportedcomputestagedevicesandreturnerror:",
                    "title": "- supportedComputeStageDevicesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "title": "Canceling a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/cancel()",
                    "title": "- cancel",
                    "type": "method"
                  },
                  {
                    "title": "Executing a Completion Handler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequestcompletionhandler",
                    "title": "VNRequestCompletionHandler",
                    "type": "typealias"
                  },
                  {
                    "title": "Determining the Revision",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Revision Number",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestrevisionproviding/requestrevision",
                        "title": "requestRevision",
                        "type": "property"
                      },
                      {
                        "title": "Determining Revision Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestrevisionunspecified",
                        "title": "VNRequestRevisionUnspecified",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectrectanglesrequestrevision1",
                        "title": "VNDetectRectanglesRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vntrackrectanglerequestrevision1",
                        "title": "VNTrackRectangleRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vntrackobjectrequestrevision1",
                        "title": "VNTrackObjectRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacerectanglesrequestrevision2",
                        "title": "VNDetectFaceRectanglesRequestRevision2",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vndetectfacerectanglesrequestrevision1",
                        "title": "VNDetectFaceRectanglesRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacelandmarksrequestrevision3",
                        "title": "VNDetectFaceLandmarksRequestRevision3",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacelandmarksrequestrevision2",
                        "title": "VNDetectFaceLandmarksRequestRevision2",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vndetectfacelandmarksrequestrevision1",
                        "title": "VNDetectFaceLandmarksRequestRevision1",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizetextrequestrevision1",
                        "title": "VNRecognizeTextRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetecttextrectanglesrequestrevision1",
                        "title": "VNDetectTextRectanglesRequestRevision1",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vndetectbarcodesrequestrevision1",
                        "title": "VNDetectBarcodesRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetecthorizonrequestrevision1",
                        "title": "VNDetectHorizonRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vntranslationalimageregistrationrequestrevision1",
                        "title": "VNTranslationalImageRegistrationRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhomographicimageregistrationrequestrevision1",
                        "title": "VNHomographicImageRegistrationRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vncoremlrequestrevision1",
                        "title": "VNCoreMLRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequestrevision1",
                        "title": "VNGenerateAttentionBasedSaliencyImageRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequestrevision1",
                        "title": "VNGenerateObjectnessBasedSaliencyImageRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnclassifyimagerequestrevision1",
                        "title": "VNClassifyImageRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision1",
                        "title": "VNGenerateImageFeaturePrintRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision1",
                        "title": "VNDetectFaceCaptureQualityRequestRevision1",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetecthumanrectanglesrequestrevision1",
                        "title": "VNDetectHumanRectanglesRequestRevision1",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnrequestrevisionproviding",
                    "title": "VNRequestRevisionProviding",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/currentrevision",
                    "title": "currentRevision",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/defaultrevision",
                    "title": "defaultRevision",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/supportedrevisions",
                    "title": "supportedRevisions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrequest",
                "title": "VNRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagebasedrequest/regionofinterest",
                    "title": "regionOfInterest",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnimagebasedrequest",
                "title": "VNImageBasedRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassifyimagerequest/supportedidentifiers()",
                    "title": "- supportedIdentifiersAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnclassifyimagerequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Classification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/identifier",
                        "title": "identifier",
                        "type": "property"
                      },
                      {
                        "title": "Measuring Confidence and Precision",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasprecisionrecallcurve",
                        "title": "hasPrecisionRecallCurve",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumprecision(_:forrecall:)",
                        "title": "- hasMinimumPrecision:forRecall:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumrecall(_:forprecision:)",
                        "title": "- hasMinimumRecall:forPrecision:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnclassificationobservation",
                    "title": "VNClassificationObservation",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnclassifyimagerequest/knownclassifications(forrevision:)",
                    "title": "+ knownClassificationsForRevision:error:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Algorithm Revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassifyimagerequestrevision1",
                    "title": "VNClassifyImageRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnclassifyimagerequest",
                "title": "VNClassifyImageRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Scaling and Cropping Images",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateimagefeatureprintrequest/imagecropandscaleoption",
                    "title": "imageCropAndScaleOption",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Crop and Scale Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/centercrop",
                        "title": "VNImageCropAndScaleOptionCenterCrop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefit",
                        "title": "VNImageCropAndScaleOptionScaleFit",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefill",
                        "title": "VNImageCropAndScaleOptionScaleFill",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefitrotate90ccw",
                        "title": "VNImageCropAndScaleOptionScaleFitRotate90CCW",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefillrotate90ccw",
                        "title": "VNImageCropAndScaleOptionScaleFillRotate90CCW",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnimagecropandscaleoption",
                    "title": "VNImageCropAndScaleOption",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateimagefeatureprintrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Fetching Feature Print Data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/data",
                        "title": "data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/elementcount",
                        "title": "elementCount",
                        "type": "property"
                      },
                      {
                        "title": "Determining Types of Feature Prints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/elementtype",
                        "title": "elementType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Element Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/unknown",
                            "title": "VNElementTypeUnknown",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/float",
                            "title": "VNElementTypeFloat",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/double",
                            "title": "VNElementTypeDouble",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/vnelementtype",
                        "title": "VNElementType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/vnelementtypesize(_:)",
                        "title": "VNElementTypeSize",
                        "type": "func"
                      },
                      {
                        "title": "Computing Distance Between Features",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/computedistance(_:to:)",
                        "title": "- computeDistance:toFeaturePrintObservation:error:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnfeatureprintobservation",
                    "title": "VNFeaturePrintObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision1",
                    "title": "VNGenerateImageFeaturePrintRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateimagefeatureprintrequest",
                "title": "VNGenerateImageFeaturePrintRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Fetching Feature Print Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/data",
                    "title": "data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/elementcount",
                    "title": "elementCount",
                    "type": "property"
                  },
                  {
                    "title": "Determining Types of Feature Prints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/elementtype",
                    "title": "elementType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Element Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/unknown",
                        "title": "VNElementTypeUnknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/float",
                        "title": "VNElementTypeFloat",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/double",
                        "title": "VNElementTypeDouble",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnelementtype",
                    "title": "VNElementType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vnelementtypesize(_:)",
                    "title": "VNElementTypeSize",
                    "type": "func"
                  },
                  {
                    "title": "Computing Distance Between Features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/computedistance(_:to:)",
                    "title": "- computeDistance:toFeaturePrintObservation:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnfeatureprintobservation",
                "title": "VNFeaturePrintObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request Handler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cgimage:options:)",
                    "title": "- initWithCGImage:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cgimage:orientation:options:)",
                    "title": "- initWithCGImage:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(ciimage:options:)",
                    "title": "- initWithCIImage:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(ciimage:orientation:options:)",
                    "title": "- initWithCIImage:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cvpixelbuffer:options:)",
                    "title": "- initWithCVPixelBuffer:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cvpixelbuffer:orientation:options:)",
                    "title": "- initWithCVPixelBuffer:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cvpixelbuffer:depthdata:orientation:options:)",
                    "title": "- initWithCVPixelBuffer:depthData:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cmsamplebuffer:options:)",
                    "title": "- initWithCMSampleBuffer:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cmsamplebuffer:orientation:options:)",
                    "title": "- initWithCMSampleBuffer:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cmsamplebuffer:depthdata:orientation:options:)",
                    "title": "- initWithCMSampleBuffer:depthData:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(data:options:)",
                    "title": "- initWithData:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(data:orientation:options:)",
                    "title": "- initWithData:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(url:options:)",
                    "title": "- initWithURL:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(url:orientation:options:)",
                    "title": "- initWithURL:orientation:options:",
                    "type": "method"
                  },
                  {
                    "title": "Executing a Request Handler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/perform(_:)",
                    "title": "- performRequests:error:",
                    "type": "method"
                  },
                  {
                    "title": "Setting Image Options",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Options Dictionary Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/properties",
                        "title": "VNImageOptionProperties",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/cameraintrinsics",
                        "title": "VNImageOptionCameraIntrinsics",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/cicontext",
                        "title": "VNImageOptionCIContext",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnimageoption",
                    "title": "VNImageOption",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/vision/vnimagerequesthandler",
                "title": "VNImageRequestHandler",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Tracking Observations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnobservation/uuid",
                    "title": "uuid",
                    "type": "property"
                  },
                  {
                    "title": "Evaluating Observations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnobservation/timerange",
                    "title": "timeRange",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnobservation/confidence",
                    "title": "confidence",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnconfidence",
                    "title": "VNConfidence",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/vision/vnobservation",
                "title": "VNObservation",
                "type": "class"
              },
              {
                "title": "Image sequence analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/applying-matte-effects-to-people-in-images-and-video",
                "title": "Applying Matte Effects to People in Images and Video",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/segmenting-and-colorizing-individuals-from-a-surrounding-scene",
                "title": "Segmenting and colorizing individuals from a surrounding scene",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnstatefulrequest/init(frameanalysisspacing:completionhandler:)",
                    "title": "- initWithFrameAnalysisSpacing:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnstatefulrequest/minimumlatencyframecount",
                    "title": "minimumLatencyFrameCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnstatefulrequest/frameanalysisspacing",
                    "title": "frameAnalysisSpacing",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnstatefulrequest",
                "title": "VNStatefulRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/init(completionhandler:)",
                    "title": "- initWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/new",
                    "title": "+ new",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/outputpixelformat",
                    "title": "outputPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.property",
                    "title": "qualityLevel",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Quality Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/accurate",
                        "title": "VNGeneratePersonSegmentationRequestQualityLevelAccurate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/balanced",
                        "title": "VNGeneratePersonSegmentationRequestQualityLevelBalanced",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/fast",
                        "title": "VNGeneratePersonSegmentationRequestQualityLevelFast",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum",
                    "title": "VNGeneratePersonSegmentationRequestQualityLevel",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing Observation Content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnpixelbufferobservation/pixelbuffer",
                        "title": "pixelBuffer",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnpixelbufferobservation/featurename",
                        "title": "featureName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the supported pixel formats",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/supportedoutputpixelformats()",
                        "title": "- supportedOutputPixelFormatsAndReturnError:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnpixelbufferobservation",
                    "title": "VNPixelBufferObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequestrevision1",
                    "title": "VNGeneratePersonSegmentationRequestRevision1",
                    "type": "var"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/supportedoutputpixelformats()",
                    "title": "- supportedOutputPixelFormatsAndReturnError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vngeneratepersonsegmentationrequest",
                "title": "VNGeneratePersonSegmentationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersoninstancemaskrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersoninstancemaskrequestrevision1",
                    "title": "VNGeneratePersonInstanceMaskRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngeneratepersoninstancemaskrequest",
                "title": "VNGeneratePersonInstanceMaskRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectdocumentsegmentationrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:topright:bottomright:bottomleft:)",
                        "title": "+ rectangleObservationWithRequestRevision:topLeft:topRight:bottomRight:bottomLeft:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:bottomleft:bottomright:topright:)",
                        "title": "+ rectangleObservationWithRequestRevision:topLeft:bottomLeft:bottomRight:topRight:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the Coordinates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomleft",
                        "title": "bottomLeft",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomright",
                        "title": "bottomRight",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topleft",
                        "title": "topLeft",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topright",
                        "title": "topRight",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnrectangleobservation",
                    "title": "VNRectangleObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectdocumentsegmentationrequestrevision1",
                    "title": "VNDetectDocumentSegmentationRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectdocumentsegmentationrequest",
                "title": "VNDetectDocumentSegmentationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Sequence Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "title": "Performing a Sequence Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-3zt7l",
                    "title": "- performRequests:onCGImage:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-3gcmv",
                    "title": "- performRequests:onCGImage:orientation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-9jtgj",
                    "title": "- performRequests:onCIImage:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-1bkm1",
                    "title": "- performRequests:onCIImage:orientation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-3d7nt",
                    "title": "- performRequests:onCVPixelBuffer:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-2wvt8",
                    "title": "- performRequests:onCVPixelBuffer:orientation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-45e73",
                    "title": "- performRequests:onCMSampleBuffer:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-6b7rk",
                    "title": "- performRequests:onCMSampleBuffer:orientation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimagedata:)",
                    "title": "- performRequests:onImageData:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimagedata:orientation:)",
                    "title": "- performRequests:onImageData:orientation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimageurl:)",
                    "title": "- performRequests:onImageURL:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimageurl:orientation:)",
                    "title": "- performRequests:onImageURL:orientation:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnsequencerequesthandler",
                "title": "VNSequenceRequestHandler",
                "type": "class"
              },
              {
                "title": "Image aesthetics analysis",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncalculateimageaestheticsscoresrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing Observation Content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimageaestheticsscoresobservation/overallscore",
                        "title": "overallScore",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnimageaestheticsscoresobservation/isutility",
                        "title": "isUtility",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnimageaestheticsscoresobservation",
                    "title": "VNImageAestheticsScoresObservation",
                    "type": "class"
                  }
                ],
                "path": "/documentation/vision/vncalculateimageaestheticsscoresrequest",
                "title": "VNCalculateImageAestheticsScoresRequest",
                "type": "class"
              },
              {
                "title": "Saliency analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/cropping-images-using-saliency",
                "title": "Cropping Images Using Saliency",
                "type": "article"
              },
              {
                "path": "/documentation/vision/highlighting-areas-of-interest-in-an-image-using-saliency",
                "title": "Highlighting Areas of Interest in an Image Using Saliency",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequestrevision1",
                    "title": "VNGenerateAttentionBasedSaliencyImageRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequest",
                "title": "VNGenerateAttentionBasedSaliencyImageRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequestrevision1",
                    "title": "VNGenerateObjectnessBasedSaliencyImageRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequest",
                "title": "VNGenerateObjectnessBasedSaliencyImageRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Locating Salient Regions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnsaliencyimageobservation/salientobjects",
                    "title": "salientObjects",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnsaliencyimageobservation",
                "title": "VNSaliencyImageObservation",
                "type": "class"
              },
              {
                "title": "Object tracking",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/tracking-the-user-s-face-in-real-time",
                "title": "Tracking the Userâ€™s Face in Real Time",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/tracking-multiple-objects-or-rectangles-in-video",
                "title": "Tracking Multiple Objects or Rectangles in Video",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Tracking Request",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttrackinglevel/accurate",
                        "title": "VNRequestTrackingLevelAccurate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttrackinglevel/fast",
                        "title": "VNRequestTrackingLevelFast",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnrequesttrackinglevel",
                    "title": "VNRequestTrackingLevel",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/inputobservation",
                    "title": "inputObservation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/trackinglevel",
                    "title": "trackingLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/islastframe",
                    "title": "lastFrame",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Number of Trackers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/supportednumber(oftrackersandreturnerror:)",
                    "title": "- supportedNumberOfTrackersAndReturnError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vntrackingrequest",
                "title": "VNTrackingRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Rectangle Tracking Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackrectanglerequest/init(rectangleobservation:)",
                    "title": "- initWithRectangleObservation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntrackrectanglerequest/init(rectangleobservation:completionhandler:)",
                    "title": "- initWithRectangleObservation:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackrectanglerequestrevision1",
                    "title": "VNTrackRectangleRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vntrackrectanglerequest",
                "title": "VNTrackRectangleRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an Object Tracking Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequest/init(detectedobjectobservation:)",
                    "title": "- initWithDetectedObjectObservation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequest/init(detectedobjectobservation:completionhandler:)",
                    "title": "- initWithDetectedObjectObservation:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequestrevision2",
                    "title": "VNTrackObjectRequestRevision2",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequestrevision1",
                    "title": "VNTrackObjectRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vntrackobjectrequest",
                "title": "VNTrackObjectRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/init(boundingbox:)",
                    "title": "+ observationWithBoundingBox:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/init(requestrevision:boundingbox:)",
                    "title": "+ observationWithRequestRevision:boundingBox:",
                    "type": "method"
                  },
                  {
                    "title": "Locating a Detected Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/boundingbox",
                    "title": "boundingBox",
                    "type": "property"
                  },
                  {
                    "title": "Accessing an Image Mask",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/globalsegmentationmask",
                    "title": "globalSegmentationMask",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetectedobjectobservation",
                "title": "VNDetectedObjectObservation",
                "type": "class"
              },
              {
                "title": "Rectangle detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring Detection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/minimumaspectratio",
                    "title": "minimumAspectRatio",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/maximumaspectratio",
                    "title": "maximumAspectRatio",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnaspectratio",
                    "title": "VNAspectRatio",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/quadraturetolerance",
                    "title": "quadratureTolerance",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndegrees",
                    "title": "VNDegrees",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/minimumsize",
                    "title": "minimumSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/minimumconfidence",
                    "title": "minimumConfidence",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnconfidence",
                    "title": "VNConfidence",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/maximumobservations",
                    "title": "maximumObservations",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:topright:bottomright:bottomleft:)",
                        "title": "+ rectangleObservationWithRequestRevision:topLeft:topRight:bottomRight:bottomLeft:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:bottomleft:bottomright:topright:)",
                        "title": "+ rectangleObservationWithRequestRevision:topLeft:bottomLeft:bottomRight:topRight:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the Coordinates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomleft",
                        "title": "bottomLeft",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomright",
                        "title": "bottomRight",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topleft",
                        "title": "topLeft",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topright",
                        "title": "topRight",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnrectangleobservation",
                    "title": "VNRectangleObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequestrevision1",
                    "title": "VNDetectRectanglesRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectrectanglesrequest",
                "title": "VNDetectRectanglesRequest",
                "type": "class"
              },
              {
                "title": "Face and body detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/selecting-a-selfie-based-on-capture-quality",
                "title": "Selecting a selfie based on capture quality",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacecapturequalityrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:pitch:)",
                        "title": "+ faceObservationWithRequestRevision:boundingBox:roll:yaw:pitch:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:)",
                        "title": "+ faceObservationWithRequestRevision:boundingBox:roll:yaw:",
                        "type": "method"
                      },
                      {
                        "title": "Identifying Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/landmarks",
                        "title": "landmarks",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Face Landmark Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/allpoints",
                            "title": "allPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/facecontour",
                            "title": "faceContour",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteye",
                            "title": "leftEye",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteye",
                            "title": "rightEye",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteyebrow",
                            "title": "leftEyebrow",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteyebrow",
                            "title": "rightEyebrow",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nose",
                            "title": "nose",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nosecrest",
                            "title": "noseCrest",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/medianline",
                            "title": "medianLine",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/outerlips",
                            "title": "outerLips",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/innerlips",
                            "title": "innerLips",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/leftpupil",
                            "title": "leftPupil",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/rightpupil",
                            "title": "rightPupil",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks2d",
                        "title": "VNFaceLandmarks2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing Region Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsclassification",
                            "title": "pointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/closedpath",
                                "title": "VNPointsClassificationClosedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/disconnected",
                                "title": "VNPointsClassificationDisconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/openpath",
                                "title": "VNPointsClassificationOpenPath",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/vision/vnpointsclassification",
                            "title": "VNPointsClassification",
                            "type": "enum"
                          },
                          {
                            "title": "Specifying Region Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/normalizedpoints-1o38f",
                            "title": "normalizedPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/precisionestimatesperpoint-3kx5a",
                            "title": "precisionEstimatesPerPoint",
                            "type": "property"
                          },
                          {
                            "title": "Computing Feature Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsinimageofsize:",
                            "title": "- pointsInImageOfSize:",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion2d",
                        "title": "VNFaceLandmarkRegion2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining Accuracy",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks/confidence",
                            "title": "confidence",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks",
                        "title": "VNFaceLandmarks",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion/pointcount",
                            "title": "pointCount",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion",
                        "title": "VNFaceLandmarkRegion",
                        "type": "class"
                      },
                      {
                        "title": "Determining Facial Orientation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/roll",
                        "title": "roll",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/yaw",
                        "title": "yaw",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/pitch",
                        "title": "pitch",
                        "type": "property"
                      },
                      {
                        "title": "Determining Capture Quality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/facecapturequality-2o4xv",
                        "title": "faceCaptureQuality",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservation",
                    "title": "VNFaceObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision2",
                    "title": "VNDetectFaceCaptureQualityRequestRevision2",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision1",
                    "title": "VNDetectFaceCaptureQualityRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectfacecapturequalityrequest",
                "title": "VNDetectFaceCaptureQualityRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Face Landmarks Request",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing Face Observations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservationaccepting/inputfaceobservations",
                        "title": "inputFaceObservations",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservationaccepting",
                    "title": "VNFaceObservationAccepting",
                    "type": "protocol"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:pitch:)",
                        "title": "+ faceObservationWithRequestRevision:boundingBox:roll:yaw:pitch:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:)",
                        "title": "+ faceObservationWithRequestRevision:boundingBox:roll:yaw:",
                        "type": "method"
                      },
                      {
                        "title": "Identifying Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/landmarks",
                        "title": "landmarks",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Face Landmark Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/allpoints",
                            "title": "allPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/facecontour",
                            "title": "faceContour",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteye",
                            "title": "leftEye",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteye",
                            "title": "rightEye",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteyebrow",
                            "title": "leftEyebrow",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteyebrow",
                            "title": "rightEyebrow",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nose",
                            "title": "nose",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nosecrest",
                            "title": "noseCrest",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/medianline",
                            "title": "medianLine",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/outerlips",
                            "title": "outerLips",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/innerlips",
                            "title": "innerLips",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/leftpupil",
                            "title": "leftPupil",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/rightpupil",
                            "title": "rightPupil",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks2d",
                        "title": "VNFaceLandmarks2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing Region Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsclassification",
                            "title": "pointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/closedpath",
                                "title": "VNPointsClassificationClosedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/disconnected",
                                "title": "VNPointsClassificationDisconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/openpath",
                                "title": "VNPointsClassificationOpenPath",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/vision/vnpointsclassification",
                            "title": "VNPointsClassification",
                            "type": "enum"
                          },
                          {
                            "title": "Specifying Region Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/normalizedpoints-1o38f",
                            "title": "normalizedPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/precisionestimatesperpoint-3kx5a",
                            "title": "precisionEstimatesPerPoint",
                            "type": "property"
                          },
                          {
                            "title": "Computing Feature Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsinimageofsize:",
                            "title": "- pointsInImageOfSize:",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion2d",
                        "title": "VNFaceLandmarkRegion2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining Accuracy",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks/confidence",
                            "title": "confidence",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks",
                        "title": "VNFaceLandmarks",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion/pointcount",
                            "title": "pointCount",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion",
                        "title": "VNFaceLandmarkRegion",
                        "type": "class"
                      },
                      {
                        "title": "Determining Facial Orientation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/roll",
                        "title": "roll",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/yaw",
                        "title": "yaw",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/pitch",
                        "title": "pitch",
                        "type": "property"
                      },
                      {
                        "title": "Determining Capture Quality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/facecapturequality-2o4xv",
                        "title": "faceCaptureQuality",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservation",
                    "title": "VNFaceObservation",
                    "type": "class"
                  },
                  {
                    "title": "Locating Face Landmarks",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequest/constellation",
                    "title": "constellation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Types of Constellations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/constellationnotdefined",
                        "title": "VNRequestFaceLandmarksConstellationNotDefined",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/constellation65points",
                        "title": "VNRequestFaceLandmarksConstellation65Points",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/constellation76points",
                        "title": "VNRequestFaceLandmarksConstellation76Points",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnrequestfacelandmarksconstellation",
                    "title": "VNRequestFaceLandmarksConstellation",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequest/revision(_:supportsconstellation:)",
                    "title": "+ revision:supportsConstellation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequestrevision3",
                    "title": "VNDetectFaceLandmarksRequestRevision3",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequestrevision2",
                    "title": "VNDetectFaceLandmarksRequestRevision2",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectfacelandmarksrequestrevision1",
                    "title": "VNDetectFaceLandmarksRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectfacelandmarksrequest",
                "title": "VNDetectFaceLandmarksRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacerectanglesrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:pitch:)",
                        "title": "+ faceObservationWithRequestRevision:boundingBox:roll:yaw:pitch:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:)",
                        "title": "+ faceObservationWithRequestRevision:boundingBox:roll:yaw:",
                        "type": "method"
                      },
                      {
                        "title": "Identifying Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/landmarks",
                        "title": "landmarks",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Face Landmark Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/allpoints",
                            "title": "allPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/facecontour",
                            "title": "faceContour",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteye",
                            "title": "leftEye",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteye",
                            "title": "rightEye",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteyebrow",
                            "title": "leftEyebrow",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteyebrow",
                            "title": "rightEyebrow",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nose",
                            "title": "nose",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nosecrest",
                            "title": "noseCrest",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/medianline",
                            "title": "medianLine",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/outerlips",
                            "title": "outerLips",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/innerlips",
                            "title": "innerLips",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/leftpupil",
                            "title": "leftPupil",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/rightpupil",
                            "title": "rightPupil",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks2d",
                        "title": "VNFaceLandmarks2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing Region Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsclassification",
                            "title": "pointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/closedpath",
                                "title": "VNPointsClassificationClosedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/disconnected",
                                "title": "VNPointsClassificationDisconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/openpath",
                                "title": "VNPointsClassificationOpenPath",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/vision/vnpointsclassification",
                            "title": "VNPointsClassification",
                            "type": "enum"
                          },
                          {
                            "title": "Specifying Region Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/normalizedpoints-1o38f",
                            "title": "normalizedPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/precisionestimatesperpoint-3kx5a",
                            "title": "precisionEstimatesPerPoint",
                            "type": "property"
                          },
                          {
                            "title": "Computing Feature Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsinimageofsize:",
                            "title": "- pointsInImageOfSize:",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion2d",
                        "title": "VNFaceLandmarkRegion2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining Accuracy",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks/confidence",
                            "title": "confidence",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks",
                        "title": "VNFaceLandmarks",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion/pointcount",
                            "title": "pointCount",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion",
                        "title": "VNFaceLandmarkRegion",
                        "type": "class"
                      },
                      {
                        "title": "Determining Facial Orientation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/roll",
                        "title": "roll",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/yaw",
                        "title": "yaw",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/pitch",
                        "title": "pitch",
                        "type": "property"
                      },
                      {
                        "title": "Determining Capture Quality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/facecapturequality-2o4xv",
                        "title": "faceCaptureQuality",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservation",
                    "title": "VNFaceObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacerectanglesrequestrevision3",
                    "title": "VNDetectFaceRectanglesRequestRevision3",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacerectanglesrequestrevision2",
                    "title": "VNDetectFaceRectanglesRequestRevision2",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectfacerectanglesrequestrevision1",
                    "title": "VNDetectFaceRectanglesRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectfacerectanglesrequest",
                "title": "VNDetectFaceRectanglesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequest/upperbodyonly",
                    "title": "upperBodyOnly",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequestrevision2",
                    "title": "VNDetectHumanRectanglesRequestRevision2",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequestrevision1",
                    "title": "VNDetectHumanRectanglesRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanrectanglesrequest",
                "title": "VNDetectHumanRectanglesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanobservation/upperbodyonly",
                    "title": "upperBodyOnly",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnhumanobservation",
                "title": "VNHumanObservation",
                "type": "class"
              },
              {
                "title": "Body and hand pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-human-body-poses-in-images",
                "title": "Detecting Human Body Poses in Images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-hand-poses-with-vision",
                "title": "Detecting Hand Poses with Vision",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointnames(forrevision:)",
                    "title": "+ supportedJointNamesForRevision:error:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointsgroupnames(forrevision:)",
                    "title": "+ supportedJointsGroupNamesForRevision:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointnamesandreturnerror:",
                    "title": "- supportedJointNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointsgroupnamesandreturnerror:",
                    "title": "- supportedJointsGroupNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Body Pose Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequestrevision1",
                    "title": "VNDetectHumanBodyPoseRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanbodyposerequest",
                "title": "VNDetectHumanBodyPoseRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/maximumhandcount",
                    "title": "maximumHandCount",
                    "type": "property"
                  },
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointnames(forrevision:)",
                    "title": "+ supportedJointNamesForRevision:error:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointsgroupnames(forrevision:)",
                    "title": "+ supportedJointsGroupNamesForRevision:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointnamesandreturnerror:",
                    "title": "- supportedJointNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointsgroupnamesandreturnerror:",
                    "title": "- supportedJointsGroupNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Hand Pose Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequestrevision1",
                    "title": "VNDetectHumanHandPoseRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanhandposerequest",
                "title": "VNDetectHumanHandPoseRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/availablekeys",
                    "title": "availableKeys",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/availablegroupkeys",
                    "title": "availableGroupKeys",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/recognizedpoint(forkey:)",
                    "title": "- recognizedPointForKey:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/recognizedpoints(forgroupkey:)",
                    "title": "- recognizedPointsForGroupKey:error:",
                    "type": "method"
                  },
                  {
                    "title": "Converting Points for Core ML",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/keypointsmultiarray()",
                    "title": "- keypointsMultiArrayAndReturnError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpointsobservation",
                "title": "VNRecognizedPointsObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/availablejointnames",
                    "title": "availableJointNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Head",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftear",
                        "title": "VNHumanBodyPoseObservationJointNameLeftEar",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/lefteye",
                        "title": "VNHumanBodyPoseObservationJointNameLeftEye",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightear",
                        "title": "VNHumanBodyPoseObservationJointNameRightEar",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/righteye",
                        "title": "VNHumanBodyPoseObservationJointNameRightEye",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/neck",
                        "title": "VNHumanBodyPoseObservationJointNameNeck",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/nose",
                        "title": "VNHumanBodyPoseObservationJointNameNose",
                        "type": "var"
                      },
                      {
                        "title": "Arms",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftshoulder",
                        "title": "VNHumanBodyPoseObservationJointNameLeftShoulder",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftelbow",
                        "title": "VNHumanBodyPoseObservationJointNameLeftElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftwrist",
                        "title": "VNHumanBodyPoseObservationJointNameLeftWrist",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightshoulder",
                        "title": "VNHumanBodyPoseObservationJointNameRightShoulder",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightelbow",
                        "title": "VNHumanBodyPoseObservationJointNameRightElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightwrist",
                        "title": "VNHumanBodyPoseObservationJointNameRightWrist",
                        "type": "var"
                      },
                      {
                        "title": "Waist",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/root",
                        "title": "VNHumanBodyPoseObservationJointNameRoot",
                        "type": "var"
                      },
                      {
                        "title": "Legs",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/lefthip",
                        "title": "VNHumanBodyPoseObservationJointNameLeftHip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftknee",
                        "title": "VNHumanBodyPoseObservationJointNameLeftKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftankle",
                        "title": "VNHumanBodyPoseObservationJointNameLeftAnkle",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/righthip",
                        "title": "VNHumanBodyPoseObservationJointNameRightHip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightknee",
                        "title": "VNHumanBodyPoseObservationJointNameRightKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightankle",
                        "title": "VNHumanBodyPoseObservationJointNameRightAnkle",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodyposeobservation/jointname",
                    "title": "VNHumanBodyPoseObservationJointName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/availablejointsgroupnames",
                    "title": "availableJointsGroupNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Head",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/face",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameFace",
                        "type": "var"
                      },
                      {
                        "title": "Body",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/torso",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameTorso",
                        "type": "var"
                      },
                      {
                        "title": "Arms",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/leftarm",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameLeftArm",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/rightarm",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameRightArm",
                        "type": "var"
                      },
                      {
                        "title": "Legs",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/leftleg",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameLeftLeg",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/rightleg",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameRightLeg",
                        "type": "var"
                      },
                      {
                        "title": "All",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/all",
                        "title": "VNHumanBodyPoseObservationJointsGroupNameAll",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname",
                    "title": "VNHumanBodyPoseObservationJointsGroupName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/recognizedpoint(_:)",
                    "title": "- recognizedPointForJointName:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/recognizedpoints(_:)",
                    "title": "- recognizedPointsForJointsGroupName:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodyposeobservation",
                "title": "VNHumanBodyPoseObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/availablejointnames",
                    "title": "availableJointNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Thumb",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbtip",
                        "title": "VNHumanHandPoseObservationJointNameThumbTip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbip",
                        "title": "VNHumanHandPoseObservationJointNameThumbIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbmp",
                        "title": "VNHumanHandPoseObservationJointNameThumbMP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbcmc",
                        "title": "VNHumanHandPoseObservationJointNameThumbCMC",
                        "type": "var"
                      },
                      {
                        "title": "Index",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indextip",
                        "title": "VNHumanHandPoseObservationJointNameIndexTip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indexdip",
                        "title": "VNHumanHandPoseObservationJointNameIndexDIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indexpip",
                        "title": "VNHumanHandPoseObservationJointNameIndexPIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indexmcp",
                        "title": "VNHumanHandPoseObservationJointNameIndexMCP",
                        "type": "var"
                      },
                      {
                        "title": "Middle",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middletip",
                        "title": "VNHumanHandPoseObservationJointNameMiddleTip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middledip",
                        "title": "VNHumanHandPoseObservationJointNameMiddleDIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middlepip",
                        "title": "VNHumanHandPoseObservationJointNameMiddlePIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middlemcp",
                        "title": "VNHumanHandPoseObservationJointNameMiddleMCP",
                        "type": "var"
                      },
                      {
                        "title": "Ring",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringtip",
                        "title": "VNHumanHandPoseObservationJointNameRingTip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringdip",
                        "title": "VNHumanHandPoseObservationJointNameRingDIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringpip",
                        "title": "VNHumanHandPoseObservationJointNameRingPIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringmcp",
                        "title": "VNHumanHandPoseObservationJointNameRingMCP",
                        "type": "var"
                      },
                      {
                        "title": "Little",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littletip",
                        "title": "VNHumanHandPoseObservationJointNameLittleTip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littledip",
                        "title": "VNHumanHandPoseObservationJointNameLittleDIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littlepip",
                        "title": "VNHumanHandPoseObservationJointNameLittlePIP",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littlemcp",
                        "title": "VNHumanHandPoseObservationJointNameLittleMCP",
                        "type": "var"
                      },
                      {
                        "title": "Wrist",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/wrist",
                        "title": "VNHumanHandPoseObservationJointNameWrist",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanhandposeobservation/jointname",
                    "title": "VNHumanHandPoseObservationJointName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/availablejointsgroupnames",
                    "title": "availableJointsGroupNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Group Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/thumb",
                        "title": "VNHumanHandPoseObservationJointsGroupNameThumb",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/indexfinger",
                        "title": "VNHumanHandPoseObservationJointsGroupNameIndexFinger",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/littlefinger",
                        "title": "VNHumanHandPoseObservationJointsGroupNameLittleFinger",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/middlefinger",
                        "title": "VNHumanHandPoseObservationJointsGroupNameMiddleFinger",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/ringfinger",
                        "title": "VNHumanHandPoseObservationJointsGroupNameRingFinger",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/all",
                        "title": "VNHumanHandPoseObservationJointsGroupNameAll",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname",
                    "title": "VNHumanHandPoseObservationJointsGroupName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/recognizedpoint(_:)",
                    "title": "- recognizedPointForJointName:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/recognizedpoints(_:)",
                    "title": "- recognizedPointsForJointsGroupName:error:",
                    "type": "method"
                  },
                  {
                    "title": "Determining the Chirality",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/chirality",
                    "title": "chirality",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Chirality Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/left",
                        "title": "VNChiralityLeft",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/right",
                        "title": "VNChiralityRight",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/unknown",
                        "title": "VNChiralityUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnchirality",
                    "title": "VNChirality",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/vnhumanhandposeobservation",
                "title": "VNHumanHandPoseObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/init(x:y:)",
                    "title": "- initWithX:y:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/init(location:)",
                    "title": "- initWithLocation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/apply(_:to:)",
                    "title": "+ pointByApplyingVector:toPoint:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/zero",
                    "title": "zeroPoint",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/x",
                    "title": "x",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/y",
                    "title": "y",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/location",
                    "title": "location",
                    "type": "property"
                  },
                  {
                    "title": "Calculating Distance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/distance(_:)",
                    "title": "- distanceToPoint:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnpoint/distance(_:_:)",
                    "title": "+ distanceBetweenPoint:point:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnpoint",
                "title": "VNPoint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedpoint/confidence",
                    "title": "confidence",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetectedpoint",
                "title": "VNDetectedPoint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoint/identifier",
                    "title": "identifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpoint",
                "title": "VNRecognizedPoint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Landmarks",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Head",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeylefteye",
                        "title": "VNBodyLandmarkKeyLeftEye",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrighteye",
                        "title": "VNBodyLandmarkKeyRightEye",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftear",
                        "title": "VNBodyLandmarkKeyLeftEar",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightear",
                        "title": "VNBodyLandmarkKeyRightEar",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeynose",
                        "title": "VNBodyLandmarkKeyNose",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyface",
                        "title": "VNBodyLandmarkRegionKeyFace",
                        "type": "var"
                      },
                      {
                        "title": "Torso",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyneck",
                        "title": "VNBodyLandmarkKeyNeck",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftshoulder",
                        "title": "VNBodyLandmarkKeyLeftShoulder",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightshoulder",
                        "title": "VNBodyLandmarkKeyRightShoulder",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeylefthip",
                        "title": "VNBodyLandmarkKeyLeftHip",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrighthip",
                        "title": "VNBodyLandmarkKeyRightHip",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyroot",
                        "title": "VNBodyLandmarkKeyRoot",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeytorso",
                        "title": "VNBodyLandmarkRegionKeyTorso",
                        "type": "var"
                      },
                      {
                        "title": "Arms",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightwrist",
                        "title": "VNBodyLandmarkKeyRightWrist",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightelbow",
                        "title": "VNBodyLandmarkKeyRightElbow",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightarm",
                        "title": "VNBodyLandmarkRegionKeyRightArm",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftwrist",
                        "title": "VNBodyLandmarkKeyLeftWrist",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftelbow",
                        "title": "VNBodyLandmarkKeyLeftElbow",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftarm",
                        "title": "VNBodyLandmarkRegionKeyLeftArm",
                        "type": "var"
                      },
                      {
                        "title": "Legs",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightknee",
                        "title": "VNBodyLandmarkKeyRightKnee",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightankle",
                        "title": "VNBodyLandmarkKeyRightAnkle",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightleg",
                        "title": "VNBodyLandmarkRegionKeyRightLeg",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftknee",
                        "title": "VNBodyLandmarkKeyLeftKnee",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftankle",
                        "title": "VNBodyLandmarkKeyLeftAnkle",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftleg",
                        "title": "VNBodyLandmarkRegionKeyLeftLeg",
                        "type": "var"
                      },
                      {
                        "title": "All Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/all",
                        "title": "VNRecognizedPointGroupKeyAll",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/body-landmarks",
                    "title": "Body Landmarks",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "All Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/all",
                        "title": "VNRecognizedPointGroupKeyAll",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/hand-landmarks",
                    "title": "Hand Landmarks",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpointkey",
                "title": "VNRecognizedPointKey",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Body Regions",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyface",
                    "title": "VNBodyLandmarkRegionKeyFace",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeytorso",
                    "title": "VNBodyLandmarkRegionKeyTorso",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightarm",
                    "title": "VNBodyLandmarkRegionKeyRightArm",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftarm",
                    "title": "VNBodyLandmarkRegionKeyLeftArm",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightleg",
                    "title": "VNBodyLandmarkRegionKeyRightLeg",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftleg",
                    "title": "VNBodyLandmarkRegionKeyLeftLeg",
                    "type": "var"
                  },
                  {
                    "title": "All Regions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/all",
                    "title": "VNRecognizedPointGroupKeyAll",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/point3dgroupkeyall",
                    "title": "VNRecognizedPoint3DGroupKeyAll",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpointgroupkey",
                "title": "VNRecognizedPointGroupKey",
                "type": "typealias"
              },
              {
                "title": "3D body pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/identifying-3d-human-body-poses-in-images",
                "title": "Identifying 3D human body poses in images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-human-body-poses-in-3d-with-vision",
                "title": "Detecting human body poses in 3D with Vision",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/init(completionhandler:)",
                    "title": "- initWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/supportedjointnamesandreturnerror:",
                    "title": "- supportedJointNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/supportedjointsgroupnamesandreturnerror:",
                    "title": "- supportedJointsGroupNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanbodypose3drequest",
                "title": "VNDetectHumanBodyPose3DRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/availablejointnames",
                    "title": "availableJointNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Head Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/tophead",
                        "title": "VNHumanBodyPose3DObservationJointNameTopHead",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centerhead",
                        "title": "VNHumanBodyPose3DObservationJointNameCenterHead",
                        "type": "var"
                      },
                      {
                        "title": "Getting the Arm Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centershoulder",
                        "title": "VNHumanBodyPose3DObservationJointNameCenterShoulder",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftshoulder",
                        "title": "VNHumanBodyPose3DObservationJointNameLeftShoulder",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightshoulder",
                        "title": "VNHumanBodyPose3DObservationJointNameRightShoulder",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftelbow",
                        "title": "VNHumanBodyPose3DObservationJointNameLeftElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightelbow",
                        "title": "VNHumanBodyPose3DObservationJointNameRightElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftwrist",
                        "title": "VNHumanBodyPose3DObservationJointNameLeftWrist",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightwrist",
                        "title": "VNHumanBodyPose3DObservationJointNameRightWrist",
                        "type": "var"
                      },
                      {
                        "title": "Getting the Leg Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/lefthip",
                        "title": "VNHumanBodyPose3DObservationJointNameLeftHip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/righthip",
                        "title": "VNHumanBodyPose3DObservationJointNameRightHip",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftknee",
                        "title": "VNHumanBodyPose3DObservationJointNameLeftKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightknee",
                        "title": "VNHumanBodyPose3DObservationJointNameRightKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftankle",
                        "title": "VNHumanBodyPose3DObservationJointNameLeftAnkle",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightankle",
                        "title": "VNHumanBodyPose3DObservationJointNameRightAnkle",
                        "type": "var"
                      },
                      {
                        "title": "Getting the Root Joint Name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/root",
                        "title": "VNHumanBodyPose3DObservationJointNameRoot",
                        "type": "var"
                      },
                      {
                        "title": "Getting the Spine",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/spine",
                        "title": "VNHumanBodyPose3DObservationJointNameSpine",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname",
                    "title": "VNHumanBodyPose3DObservationJointName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/availablejointsgroupnames",
                    "title": "availableJointsGroupNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Group Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/all",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameAll",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/head",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameHead",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftarm",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameLeftArm",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftleg",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameLeftLeg",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightarm",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameRightArm",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightleg",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameRightLeg",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/torso",
                        "title": "VNHumanBodyPose3DObservationJointsGroupNameTorso",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname",
                    "title": "VNHumanBodyPose3DObservationJointsGroupName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/recognizedpoint(_:)",
                    "title": "- recognizedPointForJointName:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/recognizedpoints(_:)",
                    "title": "- recognizedPointsForJointsGroupName:error:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Joint Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/pointinimage(_:)",
                    "title": "- pointInImageForJointName:error:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Parent Joint Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/parentjointname(_:)",
                    "title": "- parentJointNameForJointName:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Body Height",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.property",
                    "title": "heightEstimation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Techniques",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/measured",
                        "title": "VNHumanBodyPose3DObservationHeightEstimationMeasured",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/reference",
                        "title": "VNHumanBodyPose3DObservationHeightEstimationReference",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/measured",
                        "title": "VNHumanBodyPose3DObservationHeightEstimationMeasured",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/reference",
                        "title": "VNHumanBodyPose3DObservationHeightEstimationReference",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum",
                    "title": "VNHumanBodyPose3DObservationHeightEstimation",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/bodyheight",
                    "title": "bodyHeight",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Camera Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/cameraoriginmatrix",
                    "title": "cameraOriginMatrix",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/getcamerarelativeposition:forjointname:error:",
                    "title": "- getCameraRelativePosition:forJointName:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodypose3dobservation",
                "title": "VNHumanBodyPose3DObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/availablekeys",
                    "title": "availableKeys",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/availablegroupkeys",
                    "title": "availableGroupKeys",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/recognizedpoint(forkey:)",
                    "title": "- recognizedPointForKey:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/recognizedpoints(forgroupkey:)",
                    "title": "- recognizedPointsForGroupKey:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpoints3dobservation",
                "title": "VNRecognizedPoints3DObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyrecognizedpoint3d/localposition",
                    "title": "localPosition",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Parent Joint",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyrecognizedpoint3d/parentjoint",
                    "title": "parentJoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodyrecognizedpoint3d",
                "title": "VNHumanBodyRecognizedPoint3D",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint3d/init(position:)",
                    "title": "- initWithPosition:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint3d/position",
                    "title": "position",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnpoint3d",
                "title": "VNPoint3D",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoint3d/identifier",
                    "title": "identifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpoint3d",
                "title": "VNRecognizedPoint3D",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Head Joint Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/tophead",
                    "title": "VNHumanBodyPose3DObservationJointNameTopHead",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centerhead",
                    "title": "VNHumanBodyPose3DObservationJointNameCenterHead",
                    "type": "var"
                  },
                  {
                    "title": "Getting the Arm Joint Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centershoulder",
                    "title": "VNHumanBodyPose3DObservationJointNameCenterShoulder",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftshoulder",
                    "title": "VNHumanBodyPose3DObservationJointNameLeftShoulder",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightshoulder",
                    "title": "VNHumanBodyPose3DObservationJointNameRightShoulder",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftelbow",
                    "title": "VNHumanBodyPose3DObservationJointNameLeftElbow",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightelbow",
                    "title": "VNHumanBodyPose3DObservationJointNameRightElbow",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftwrist",
                    "title": "VNHumanBodyPose3DObservationJointNameLeftWrist",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightwrist",
                    "title": "VNHumanBodyPose3DObservationJointNameRightWrist",
                    "type": "var"
                  },
                  {
                    "title": "Getting the Leg Joint Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/lefthip",
                    "title": "VNHumanBodyPose3DObservationJointNameLeftHip",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/righthip",
                    "title": "VNHumanBodyPose3DObservationJointNameRightHip",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftknee",
                    "title": "VNHumanBodyPose3DObservationJointNameLeftKnee",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightknee",
                    "title": "VNHumanBodyPose3DObservationJointNameRightKnee",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftankle",
                    "title": "VNHumanBodyPose3DObservationJointNameLeftAnkle",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightankle",
                    "title": "VNHumanBodyPose3DObservationJointNameRightAnkle",
                    "type": "var"
                  },
                  {
                    "title": "Getting the Root Joint Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/root",
                    "title": "VNHumanBodyPose3DObservationJointNameRoot",
                    "type": "var"
                  },
                  {
                    "title": "Getting the Spine",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/spine",
                    "title": "VNHumanBodyPose3DObservationJointNameSpine",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname",
                "title": "VNHumanBodyPose3DObservationJointName",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting the Group Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/all",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameAll",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/head",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameHead",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftarm",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameLeftArm",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftleg",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameLeftLeg",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightarm",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameRightArm",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightleg",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameRightLeg",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/torso",
                    "title": "VNHumanBodyPose3DObservationJointsGroupNameTorso",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname",
                "title": "VNHumanBodyPose3DObservationJointsGroupName",
                "type": "typealias"
              },
              {
                "title": "Animal detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Animals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequest/supportedidentifiers()",
                    "title": "- supportedIdentifiersAndReturnError:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Animals",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalidentifier/cat",
                        "title": "VNAnimalIdentifierCat",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalidentifier/dog",
                        "title": "VNAnimalIdentifierDog",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnanimalidentifier",
                    "title": "VNAnimalIdentifier",
                    "type": "typealias"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizeanimalsrequest/knownanimalidentifiers(forrevision:)",
                    "title": "+ knownAnimalIdentifiersForRevision:error:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequestrevision2",
                    "title": "VNRecognizeAnimalsRequestRevision2",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequestrevision1",
                    "title": "VNRecognizeAnimalsRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnrecognizeanimalsrequest",
                "title": "VNRecognizeAnimalsRequest",
                "type": "class"
              },
              {
                "title": "Animal body pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-animal-body-poses-with-vision",
                "title": "Detecting animal body poses with Vision",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectanimalbodyposerequest/supportedjointnamesandreturnerror:",
                    "title": "- supportedJointNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetectanimalbodyposerequest/supportedjointsgroupnamesandreturnerror:",
                    "title": "- supportedJointsGroupNamesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectanimalbodyposerequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetectanimalbodyposerequest",
                "title": "VNDetectAnimalBodyPoseRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/availablejointnames",
                    "title": "availableJointNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Head Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/lefteartop",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftEarTop",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftearmiddle",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftEarMiddle",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftearbottom",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftEarBottom",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/lefteye",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftEye",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/neck",
                        "title": "VNAnimalBodyPoseObservationJointNameNeck",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/nose",
                        "title": "VNAnimalBodyPoseObservationJointNameNose",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/righteye",
                        "title": "VNAnimalBodyPoseObservationJointNameRightEye",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/righteartop",
                        "title": "VNAnimalBodyPoseObservationJointNameRightEarTop",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightearmiddle",
                        "title": "VNAnimalBodyPoseObservationJointNameRightEarMiddle",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightearbottom",
                        "title": "VNAnimalBodyPoseObservationJointNameRightEarBottom",
                        "type": "var"
                      },
                      {
                        "title": "Getting the Leg Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftbackelbow",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftBackElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftfrontelbow",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftFrontElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightfrontelbow",
                        "title": "VNAnimalBodyPoseObservationJointNameRightFrontElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightbackelbow",
                        "title": "VNAnimalBodyPoseObservationJointNameRightBackElbow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftbackknee",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftBackKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftfrontknee",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftFrontKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightbackknee",
                        "title": "VNAnimalBodyPoseObservationJointNameRightBackKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightfrontknee",
                        "title": "VNAnimalBodyPoseObservationJointNameRightFrontKnee",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftbackpaw",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftBackPaw",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftfrontpaw",
                        "title": "VNAnimalBodyPoseObservationJointNameLeftFrontPaw",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightbackpaw",
                        "title": "VNAnimalBodyPoseObservationJointNameRightBackPaw",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightfrontpaw",
                        "title": "VNAnimalBodyPoseObservationJointNameRightFrontPaw",
                        "type": "var"
                      },
                      {
                        "title": "Getting the Tail Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/tailtop",
                        "title": "VNAnimalBodyPoseObservationJointNameTailTop",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/tailmiddle",
                        "title": "VNAnimalBodyPoseObservationJointNameTailMiddle",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/tailbottom",
                        "title": "VNAnimalBodyPoseObservationJointNameTailBottom",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnanimalbodyposeobservation/jointname",
                    "title": "VNAnimalBodyPoseObservationJointName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/availablejointgroupnames",
                    "title": "availableJointGroupNames",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Group Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/all",
                        "title": "VNAnimalBodyPoseObservationJointsGroupNameAll",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/forelegs",
                        "title": "VNAnimalBodyPoseObservationJointsGroupNameForelegs",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/head",
                        "title": "VNAnimalBodyPoseObservationJointsGroupNameHead",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/hindlegs",
                        "title": "VNAnimalBodyPoseObservationJointsGroupNameHindlegs",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/tail",
                        "title": "VNAnimalBodyPoseObservationJointsGroupNameTail",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/trunk",
                        "title": "VNAnimalBodyPoseObservationJointsGroupNameTrunk",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname",
                    "title": "VNAnimalBodyPoseObservationJointsGroupName",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/recognizedpoint(_:)",
                    "title": "- recognizedPointForJointName:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/recognizedpoints(_:)",
                    "title": "- recognizedPointsForJointsGroupName:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnanimalbodyposeobservation",
                "title": "VNAnimalBodyPoseObservation",
                "type": "class"
              },
              {
                "title": "Trajectory detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/identifying-trajectories-in-video",
                "title": "Identifying Trajectories in Video",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-moving-objects-in-a-video",
                "title": "Detecting moving objects in a video",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/init(frameanalysisspacing:trajectorylength:completionhandler:)",
                    "title": "- initWithFrameAnalysisSpacing:trajectoryLength:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/targetframetime",
                    "title": "targetFrameTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/trajectorylength",
                    "title": "trajectoryLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/objectminimumnormalizedradius",
                    "title": "objectMinimumNormalizedRadius",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/objectmaximumnormalizedradius",
                    "title": "objectMaximumNormalizedRadius",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/minimumobjectsize",
                    "title": "minimumObjectSize",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/maximumobjectsize",
                    "title": "maximumObjectSize",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Evaluating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/detectedpoints",
                        "title": "detectedPoints",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/projectedpoints",
                        "title": "projectedPoints",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/equationcoefficients",
                        "title": "equationCoefficients",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/movingaverageradius",
                        "title": "movingAverageRadius",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vntrajectoryobservation",
                    "title": "VNTrajectoryObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequestrevision1",
                    "title": "VNDetectTrajectoriesRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecttrajectoriesrequest",
                "title": "VNDetectTrajectoriesRequest",
                "type": "class"
              },
              {
                "title": "Contour detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/contrastadjustment",
                    "title": "contrastAdjustment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/contrastpivot",
                    "title": "contrastPivot",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/detectsdarkonlight",
                    "title": "detectsDarkOnLight",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/maximumimagedimension",
                    "title": "maximumImageDimension",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectcontoursrequest/detectdarkonlight",
                    "title": "detectDarkOnLight",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting the Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/contourcount",
                        "title": "contourCount",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/normalizedpath",
                        "title": "normalizedPath",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/toplevelcontours",
                        "title": "topLevelContours",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/toplevelcontourcount",
                        "title": "topLevelContourCount",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/contour(at:)-9on0y",
                        "title": "- contourAtIndex:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/contour(at:)-52odo",
                        "title": "- contourAtIndexPath:error:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting the Contour",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vncontour/aspectratio",
                            "title": "aspectRatio",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/indexpath",
                            "title": "indexPath",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/normalizedpath",
                            "title": "normalizedPath",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/pointcount",
                            "title": "pointCount",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/normalizedpoints-2orqj",
                            "title": "normalizedPoints",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/polygonapproximation(epsilon:)",
                            "title": "- polygonApproximationWithEpsilon:error:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Child Contours",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vncontour/childcontourcount",
                            "title": "childContourCount",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/childcontours",
                            "title": "childContours",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/childcontour(at:)",
                            "title": "- childContourAtIndex:error:",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vncontour",
                        "title": "VNContour",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/vision/vncontoursobservation",
                    "title": "VNContoursObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontourrequestrevision1",
                    "title": "VNDetectContourRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectcontoursrequest",
                "title": "VNDetectContoursRequest",
                "type": "class"
              },
              {
                "title": "Optical flow",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.property",
                    "title": "computationAccuracy",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accuracy Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/low",
                        "title": "VNGenerateOpticalFlowRequestComputationAccuracyLow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/medium",
                        "title": "VNGenerateOpticalFlowRequestComputationAccuracyMedium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/high",
                        "title": "VNGenerateOpticalFlowRequestComputationAccuracyHigh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                        "title": "VNGenerateOpticalFlowRequestComputationAccuracyVeryHigh",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum",
                    "title": "VNGenerateOpticalFlowRequestComputationAccuracy",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/outputpixelformat",
                    "title": "outputPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/keepnetworkoutput",
                    "title": "keepNetworkOutput",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequestrevision2",
                    "title": "VNGenerateOpticalFlowRequestRevision2",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequestrevision1",
                    "title": "VNGenerateOpticalFlowRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateopticalflowrequest",
                "title": "VNGenerateOpticalFlowRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Optical Flow",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/init(completionhandler:)",
                    "title": "- initWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.property",
                    "title": "computationAccuracy",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/low",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyLow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/medium",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyMedium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/high",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyHigh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyVeryHigh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/low",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyLow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/medium",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyMedium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/high",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyHigh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                        "title": "VNTrackOpticalFlowRequestComputationAccuracyVeryHigh",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum",
                    "title": "VNTrackOpticalFlowRequestComputationAccuracy",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/keepnetworkoutput",
                    "title": "keepNetworkOutput",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/outputpixelformat",
                    "title": "outputPixelFormat",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntrackopticalflowrequest",
                "title": "VNTrackOpticalFlowRequest",
                "type": "class"
              },
              {
                "title": "Barcode detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Symbologies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/supportedsymbologies()",
                    "title": "- supportedSymbologiesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/symbologies",
                    "title": "symbologies",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/coalescecompositesymbologies",
                    "title": "coalesceCompositeSymbologies",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Supported Symbologies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/aztec-s3va",
                        "title": "VNBarcodeSymbologyAztec",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/codabar",
                        "title": "VNBarcodeSymbologyCodabar",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39-2ggrb",
                        "title": "VNBarcodeSymbologyCode39",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39checksum-3jdl6",
                        "title": "VNBarcodeSymbologyCode39Checksum",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39fullascii-942jj",
                        "title": "VNBarcodeSymbologyCode39FullASCII",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39fullasciichecksum-6700",
                        "title": "VNBarcodeSymbologyCode39FullASCIIChecksum",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code93-2geph",
                        "title": "VNBarcodeSymbologyCode93",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code93i-t5q5",
                        "title": "VNBarcodeSymbologyCode93i",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code128-1lkm2",
                        "title": "VNBarcodeSymbologyCode128",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/datamatrix-6tg7m",
                        "title": "VNBarcodeSymbologyDataMatrix",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/ean8-9qg0n",
                        "title": "VNBarcodeSymbologyEAN8",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/ean13-7gb2d",
                        "title": "VNBarcodeSymbologyEAN13",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/gs1databar",
                        "title": "VNBarcodeSymbologyGS1DataBar",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/gs1databarexpanded",
                        "title": "VNBarcodeSymbologyGS1DataBarExpanded",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/gs1databarlimited",
                        "title": "VNBarcodeSymbologyGS1DataBarLimited",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/i2of5-cyk4",
                        "title": "VNBarcodeSymbologyI2of5",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/i2of5checksum-999jm",
                        "title": "VNBarcodeSymbologyI2of5Checksum",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/itf14-9mbkq",
                        "title": "VNBarcodeSymbologyITF14",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/micropdf417",
                        "title": "VNBarcodeSymbologyMicroPDF417",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/microqr",
                        "title": "VNBarcodeSymbologyMicroQR",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/msiplessey",
                        "title": "VNBarcodeSymbologyMSIPlessey",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/pdf417-8n3oh",
                        "title": "VNBarcodeSymbologyPDF417",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/qr-2l1ve",
                        "title": "VNBarcodeSymbologyQR",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/upce-1jtoc",
                        "title": "VNBarcodeSymbologyUPCE",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnbarcodesymbology",
                    "title": "VNBarcodeSymbology",
                    "type": "typealias"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectbarcodesrequest/supportedsymbologies",
                    "title": "supportedSymbologies",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing the Payload",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/payloadstringvalue",
                        "title": "payloadStringValue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/payloaddata",
                        "title": "payloadData",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/supplementalpayloadstring",
                        "title": "supplementalPayloadString",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/supplementalpayloaddata",
                        "title": "supplementalPayloadData",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/supplementalcompositetype",
                        "title": "supplementalCompositeType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/isgs1datacarrier",
                        "title": "isGS1DataCarrier",
                        "type": "property"
                      },
                      {
                        "title": "Reading Barcode Descriptors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/barcodedescriptor",
                        "title": "barcodeDescriptor",
                        "type": "property"
                      },
                      {
                        "title": "Identifying Barcode Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/symbology",
                        "title": "symbology",
                        "type": "property"
                      },
                      {
                        "title": "Identifying Barcode Colors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/iscolorinverted",
                        "title": "isColorInverted",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnbarcodeobservation",
                    "title": "VNBarcodeObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequestrevision3",
                    "title": "VNDetectBarcodesRequestRevision3",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectbarcodesrequestrevision2",
                    "title": "VNDetectBarcodesRequestRevision2",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectbarcodesrequestrevision1",
                    "title": "VNDetectBarcodesRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectbarcodesrequest",
                "title": "VNDetectBarcodesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Composite Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/gs1typea",
                    "title": "VNBarcodeCompositeTypeGS1TypeA",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/gs1typeb",
                    "title": "VNBarcodeCompositeTypeGS1TypeB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/gs1typec",
                    "title": "VNBarcodeCompositeTypeGS1TypeC",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/linked",
                    "title": "VNBarcodeCompositeTypeLinked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/none",
                    "title": "VNBarcodeCompositeTypeNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/vnbarcodecompositetype",
                "title": "VNBarcodeCompositeType",
                "type": "enum"
              },
              {
                "title": "Text detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttextrectanglesrequest/reportcharacterboxes",
                    "title": "reportCharacterBoxes",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttextrectanglesrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttextrectanglesrequestrevision1",
                    "title": "VNDetectTextRectanglesRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecttextrectanglesrequest",
                "title": "VNDetectTextRectanglesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Finding Individual Characters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntextobservation/characterboxes",
                    "title": "characterBoxes",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntextobservation",
                "title": "VNTextObservation",
                "type": "class"
              },
              {
                "title": "Text recognition",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizing-text-in-images",
                "title": "Recognizing Text in Images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/extracting-phone-numbers-from-text-in-images",
                "title": "Extracting phone numbers from text in images",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/locating-and-displaying-recognized-text",
                "title": "Locating and displaying recognized text",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Customizing Recognition Constraints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/minimumtextheight",
                    "title": "minimumTextHeight",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/recognitionlevel",
                    "title": "recognitionLevel",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Recognition Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttextrecognitionlevel/fast",
                        "title": "VNRequestTextRecognitionLevelFast",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttextrecognitionlevel/accurate",
                        "title": "VNRequestTextRecognitionLevelAccurate",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnrequesttextrecognitionlevel",
                    "title": "VNRequestTextRecognitionLevel",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Language",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/automaticallydetectslanguage",
                    "title": "automaticallyDetectsLanguage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/recognitionlanguages",
                    "title": "recognitionLanguages",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/useslanguagecorrection",
                    "title": "usesLanguageCorrection",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/customwords",
                    "title": "customWords",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/supportedrecognitionlanguages()",
                    "title": "- supportedRecognitionLanguagesAndReturnError:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizetextrequest/supportedrecognitionlanguages(for:revision:)",
                    "title": "+ supportedRecognitionLanguagesForTextRecognitionLevel:revision:error:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequestrevision3",
                    "title": "VNRecognizeTextRequestRevision3",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizetextrequestrevision2",
                    "title": "VNRecognizeTextRequestRevision2",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizetextrequestrevision1",
                    "title": "VNRecognizeTextRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnrecognizetextrequest",
                "title": "VNRecognizeTextRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Recognized Text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedtextobservation/topcandidates(_:)",
                    "title": "- topCandidates:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Recognized Text",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedtext/string",
                        "title": "string",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedtext/confidence",
                        "title": "confidence",
                        "type": "property"
                      },
                      {
                        "title": "Locating Recognized Text",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedtext/boundingboxforrange:error:",
                        "title": "- boundingBoxForRange:error:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnrecognizedtext",
                    "title": "VNRecognizedText",
                    "type": "class"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedtextobservation",
                "title": "VNRecognizedTextObservation",
                "type": "class"
              },
              {
                "title": "Object recognition",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizing-objects-in-live-capture",
                "title": "Recognizing Objects in Live Capture",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/coreml/model_integration_samples/understanding_a_dice_roll_with_vision_and_object_detection",
                "title": "Understanding a Dice Roll with Vision and Object Detection",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Classifying a Recognized Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedobjectobservation/labels",
                    "title": "labels",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Classification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/identifier",
                        "title": "identifier",
                        "type": "property"
                      },
                      {
                        "title": "Measuring Confidence and Precision",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasprecisionrecallcurve",
                        "title": "hasPrecisionRecallCurve",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumprecision(_:forrecall:)",
                        "title": "- hasMinimumPrecision:forRecall:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumrecall(_:forprecision:)",
                        "title": "- hasMinimumRecall:forPrecision:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnclassificationobservation",
                    "title": "VNClassificationObservation",
                    "type": "class"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedobjectobservation",
                "title": "VNRecognizedObjectObservation",
                "type": "class"
              },
              {
                "title": "Request progress tracking",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Tracking Progress",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequestprogressproviding/progresshandler",
                    "title": "progressHandler",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequestprogressproviding/indeterminate",
                    "title": "indeterminate",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrequestprogressproviding",
                "title": "VNRequestProgressProviding",
                "type": "protocol"
              },
              {
                "path": "/documentation/vision/vnrequestprogresshandler",
                "title": "VNRequestProgressHandler",
                "type": "typealias"
              },
              {
                "title": "Horizon detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthorizonrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthorizonrequestrevision1",
                    "title": "VNDetectHorizonRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthorizonrequest",
                "title": "VNDetectHorizonRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Evaluating the Horizon",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhorizonobservation/angle",
                    "title": "angle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhorizonobservation/transform",
                    "title": "transform",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhorizonobservation/transform(forimagewidth:height:)",
                    "title": "- transformForImageWidth:height:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnhorizonobservation",
                "title": "VNHorizonObservation",
                "type": "class"
              },
              {
                "title": "Image alignment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/aligning-similar-images",
                "title": "Aligning Similar Images",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedcgimage:options:",
                    "title": "- initWithTargetedCGImage:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcgimage:options:completionhandler:)",
                    "title": "- initWithTargetedCGImage:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedcgimage:orientation:options:",
                    "title": "- initWithTargetedCGImage:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcgimage:orientation:options:completionhandler:)",
                    "title": "- initWithTargetedCGImage:orientation:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedciimage:options:",
                    "title": "- initWithTargetedCIImage:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedciimage:options:completionhandler:)",
                    "title": "- initWithTargetedCIImage:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedciimage:orientation:options:",
                    "title": "- initWithTargetedCIImage:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedciimage:orientation:options:completionhandler:)",
                    "title": "- initWithTargetedCIImage:orientation:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedcvpixelbuffer:options:",
                    "title": "- initWithTargetedCVPixelBuffer:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcvpixelbuffer:options:completionhandler:)",
                    "title": "- initWithTargetedCVPixelBuffer:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedcvpixelbuffer:orientation:options:",
                    "title": "- initWithTargetedCVPixelBuffer:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcvpixelbuffer:orientation:options:completionhandler:)",
                    "title": "- initWithTargetedCVPixelBuffer:orientation:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedcmsamplebuffer:options:",
                    "title": "- initWithTargetedCMSampleBuffer:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcmsamplebuffer:options:completionhandler:)",
                    "title": "- initWithTargetedCMSampleBuffer:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedcmsamplebuffer:orientation:options:",
                    "title": "- initWithTargetedCMSampleBuffer:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcmsamplebuffer:orientation:options:completionhandler:)",
                    "title": "- initWithTargetedCMSampleBuffer:orientation:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedimagedata:options:",
                    "title": "- initWithTargetedImageData:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimagedata:options:completionhandler:)",
                    "title": "- initWithTargetedImageData:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedimagedata:orientation:options:",
                    "title": "- initWithTargetedImageData:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimagedata:orientation:options:completionhandler:)",
                    "title": "- initWithTargetedImageData:orientation:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedimageurl:options:",
                    "title": "- initWithTargetedImageURL:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimageurl:options:completionhandler:)",
                    "title": "- initWithTargetedImageURL:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/initwithtargetedimageurl:orientation:options:",
                    "title": "- initWithTargetedImageURL:orientation:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimageurl:orientation:options:completionhandler:)",
                    "title": "- initWithTargetedImageURL:orientation:options:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vntargetedimagerequest",
                "title": "VNTargetedImageRequest",
                "type": "class"
              },
              {
                "path": "/documentation/vision/vnimageregistrationrequest",
                "title": "VNImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntranslationalimageregistrationrequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntranslationalimageregistrationrequest",
                "title": "VNTranslationalImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Translational Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntracktranslationalimageregistrationrequest/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntracktranslationalimageregistrationrequest/init(completionhandler:)",
                    "title": "- initWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntracktranslationalimageregistrationrequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntracktranslationalimageregistrationrequest",
                "title": "VNTrackTranslationalImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhomographicimageregistrationrequest/results",
                    "title": "results",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhomographicimageregistrationrequestrevision1",
                    "title": "VNHomographicImageRegistrationRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnhomographicimageregistrationrequest",
                "title": "VNHomographicImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Homographic Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackhomographicimageregistrationrequest/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vntrackhomographicimageregistrationrequest/init(completionhandler:)",
                    "title": "- initWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackhomographicimageregistrationrequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntrackhomographicimageregistrationrequest",
                "title": "VNTrackHomographicImageRegistrationRequest",
                "type": "class"
              },
              {
                "path": "/documentation/vision/vnimagealignmentobservation",
                "title": "VNImageAlignmentObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Determining Alignment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagetranslationalignmentobservation/alignmenttransform",
                    "title": "alignmentTransform",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntranslationalimageregistrationrequestrevision1",
                    "title": "VNTranslationalImageRegistrationRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnimagetranslationalignmentobservation",
                "title": "VNImageTranslationAlignmentObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagehomographicalignmentobservation/warptransform",
                    "title": "warpTransform",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnimagehomographicalignmentobservation",
                "title": "VNImageHomographicAlignmentObservation",
                "type": "class"
              },
              {
                "title": "Image background removal",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/applying-visual-effects-to-foreground-subjects",
                "title": "Applying visual effects to foreground subjects",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Accessing Instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/allinstances",
                    "title": "allInstances",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/instancemask",
                    "title": "instanceMask",
                    "type": "property"
                  },
                  {
                    "title": "Creating a Mask",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/generatemask(forinstances:)",
                    "title": "- generateMaskForInstances:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/generatemaskedimage(ofinstances:from:croppedtoinstancesextent:)",
                    "title": "- generateMaskedImageOfInstances:fromRequestHandler:croppedToInstancesExtent:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/generatescaledmaskforimage(forinstances:from:)",
                    "title": "- generateScaledMaskForImageForInstances:fromRequestHandler:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vninstancemaskobservation",
                "title": "VNInstanceMaskObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateforegroundinstancemaskrequest/results",
                    "title": "results",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vngenerateforegroundinstancemaskrequest",
                "title": "VNGenerateForegroundInstanceMaskRequest",
                "type": "class"
              },
              {
                "path": "/documentation/vision/vngenerateforegroundinstancemaskrequestrevision1",
                "title": "VNGenerateForegroundInstanceMaskRequestRevision1",
                "type": "var"
              },
              {
                "title": "Machine learning image analysis",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/coreml/model_integration_samples/classifying_images_with_vision_and_core_ml",
                "title": "Classifying Images with Vision and Core ML",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/training-a-create-ml-model-to-classify-flowers",
                "title": "Training a Create ML Model to Classify Flowers",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing with a Core ML Model",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/init(model:)",
                    "title": "- initWithModel:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/init(model:completionhandler:)",
                    "title": "- initWithModel:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/model",
                    "title": "model",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing a Model",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vncoremlmodel/init(for:)",
                        "title": "+ modelForMLModel:error:",
                        "type": "method"
                      },
                      {
                        "title": "Providing Features",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vncoremlmodel/featureprovider",
                        "title": "featureProvider",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncoremlmodel/inputimagefeaturename",
                        "title": "inputImageFeatureName",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vncoremlmodel",
                    "title": "VNCoreMLModel",
                    "type": "class"
                  },
                  {
                    "title": "Configuring Image Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/imagecropandscaleoption",
                    "title": "imageCropAndScaleOption",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Crop and Scale Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/centercrop",
                        "title": "VNImageCropAndScaleOptionCenterCrop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefit",
                        "title": "VNImageCropAndScaleOptionScaleFit",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefill",
                        "title": "VNImageCropAndScaleOptionScaleFill",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefitrotate90ccw",
                        "title": "VNImageCropAndScaleOptionScaleFitRotate90CCW",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefillrotate90ccw",
                        "title": "VNImageCropAndScaleOptionScaleFillRotate90CCW",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/vnimagecropandscaleoption",
                    "title": "VNImageCropAndScaleOption",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequestrevision1",
                    "title": "VNCoreMLRequestRevision1",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vncoremlrequest",
                "title": "VNCoreMLRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Determining Classification",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "title": "Measuring Confidence and Precision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/hasprecisionrecallcurve",
                    "title": "hasPrecisionRecallCurve",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/hasminimumprecision(_:forrecall:)",
                    "title": "- hasMinimumPrecision:forRecall:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/hasminimumrecall(_:forprecision:)",
                    "title": "- hasMinimumRecall:forPrecision:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnclassificationobservation",
                "title": "VNClassificationObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Parsing Observation Content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpixelbufferobservation/pixelbuffer",
                    "title": "pixelBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnpixelbufferobservation/featurename",
                    "title": "featureName",
                    "type": "property"
                  },
                  {
                    "title": "Getting the supported pixel formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/supportedoutputpixelformats()",
                    "title": "- supportedOutputPixelFormatsAndReturnError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnpixelbufferobservation",
                "title": "VNPixelBufferObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Feature Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlfeaturevalueobservation/featurevalue",
                    "title": "featureValue",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncoremlfeaturevalueobservation/featurename",
                    "title": "featureName",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vncoremlfeaturevalueobservation",
                "title": "VNCoreMLFeatureValueObservation",
                "type": "class"
              },
              {
                "title": "Coordinate conversion",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vnimagepointfornormalizedpoint(_:_:_:)",
                "title": "VNImagePointForNormalizedPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedpointforimagepoint(_:_:_:)",
                "title": "VNNormalizedPointForImagePoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagepointfornormalizedpointusingregionofinterest(_:_:_:_:)",
                "title": "VNImagePointForNormalizedPointUsingRegionOfInterest",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedpointforimagepointusingregionofinterest(_:_:_:_:)",
                "title": "VNNormalizedPointForImagePointUsingRegionOfInterest",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagerectfornormalizedrect(_:_:_:)",
                "title": "VNImageRectForNormalizedRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedrectforimagerect(_:_:_:)",
                "title": "VNNormalizedRectForImageRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagerectfornormalizedrectusingregionofinterest(_:_:_:_:)",
                "title": "VNImageRectForNormalizedRectUsingRegionOfInterest",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedrectforimagerectusingregionofinterest(_:_:_:_:)",
                "title": "VNNormalizedRectForImageRectUsingRegionOfInterest",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedidentityrect",
                "title": "VNNormalizedIdentityRect",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnnormalizedrectisidentityrect(_:)",
                "title": "VNNormalizedRectIsIdentityRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagepointforfacelandmarkpoint(_:_:_:_:)",
                "title": "VNImagePointForFaceLandmarkPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedfaceboundingboxpointforlandmarkpoint(_:_:_:_:)",
                "title": "VNNormalizedFaceBoundingBoxPointForLandmarkPoint",
                "type": "func"
              },
              {
                "title": "Utilities",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Get the Compute Stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncomputestage/main",
                    "title": "VNComputeStageMain",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vncomputestage/postprocessing",
                    "title": "VNComputeStagePostProcessing",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vncomputestage",
                "title": "VNComputeStage",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Calculating Bounding Circles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/boundingcircle(for:)-423ll",
                    "title": "+ boundingCircleForContour:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/boundingcircle(for:)-9dggv",
                    "title": "+ boundingCircleForPoints:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/boundingcircle(forsimdpoints:pointcount:)",
                    "title": "+ boundingCircleForSIMDPoints:pointCount:error:",
                    "type": "method"
                  },
                  {
                    "title": "Calculating Area and Perimeter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/calculatearea(_:for:orientedarea:)",
                    "title": "+ calculateArea:forContour:orientedArea:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/calculateperimeter(_:for:)",
                    "title": "+ calculatePerimeter:forContour:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vngeometryutils",
                "title": "VNGeometryUtils",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Video Processor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/init(url:)",
                    "title": "- initWithURL:",
                    "type": "method"
                  },
                  {
                    "title": "Performing Requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/addrequest(_:processingoptions:)",
                    "title": "- addRequest:processingOptions:error:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnvideoprocessor/requestprocessingoptions/cadence",
                        "title": "cadence",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnvideoprocessor/cadence",
                        "title": "VNVideoProcessorCadence",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Cadence",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/frameratecadence/init(_:)",
                            "title": "- initWithFrameRate:",
                            "type": "method"
                          },
                          {
                            "title": "Inspecting the Frame Rate",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/frameratecadence/framerate",
                            "title": "frameRate",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnvideoprocessor/frameratecadence",
                        "title": "VNVideoProcessorFrameRateCadence",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Cadence",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/timeintervalcadence/init(_:)",
                            "title": "- initWithTimeInterval:",
                            "type": "method"
                          },
                          {
                            "title": "Inspecting the Time Interval",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/timeintervalcadence/timeinterval",
                            "title": "timeInterval",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnvideoprocessor/timeintervalcadence",
                        "title": "VNVideoProcessorTimeIntervalCadence",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/vision/vnvideoprocessor/requestprocessingoptions",
                    "title": "VNVideoProcessorRequestProcessingOptions",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/removerequest(_:)",
                    "title": "- removeRequest:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/analyze(_:)",
                    "title": "- analyzeTimeRange:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/cancel()",
                    "title": "- cancel",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Video Processing Options",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Options",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/vision/vnvideoprocessingoption/framecadence",
                            "title": "VNVideoProcessingOptionFrameCadence",
                            "type": "var"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/vision/vnvideoprocessingoption/timeinterval",
                            "title": "VNVideoProcessingOptionTimeInterval",
                            "type": "var"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/vision/vnvideoprocessingoption",
                        "title": "VNVideoProcessingOption",
                        "type": "typealias"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/vision/vnvideoprocessor/add(_:withprocessingoptions:)",
                    "title": "- addRequest:withProcessingOptions:error:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnvideoprocessor/analyze(with:)",
                    "title": "- analyzeWithTimeRange:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnvideoprocessor",
                "title": "VNVideoProcessor",
                "type": "class"
              },
              {
                "title": "Common data types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Circle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncircle/init(center:radius:)",
                    "title": "- initWithCenter:radius:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vncircle/init(center:diameter:)",
                    "title": "- initWithCenter:diameter:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vncircle/zero",
                    "title": "zeroCircle",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting a Circle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncircle/center",
                    "title": "center",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncircle/diameter",
                    "title": "diameter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncircle/radius",
                    "title": "radius",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncircle/contains(_:)",
                    "title": "- containsPoint:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vncircle/contains(_:incircumferentialringofwidth:)",
                    "title": "- containsPoint:inCircumferentialRingOfWidth:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vncircle",
                "title": "VNCircle",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Vector",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(byadding:to:)",
                    "title": "+ vectorByAddingVector:toVector:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(bysubtracting:from:)",
                    "title": "+ vectorBySubtractingVector:fromVector:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(bymultiplying:byscalar:)",
                    "title": "+ vectorByMultiplyingVector:byScalar:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(r:theta:)",
                    "title": "- initWithR:theta:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(vectorhead:tail:)",
                    "title": "- initWithVectorHead:tail:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(xcomponent:ycomponent:)",
                    "title": "- initWithXComponent:yComponent:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/zero",
                    "title": "zeroVector",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting a Vector",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvector/length",
                    "title": "length",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/r",
                    "title": "r",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/theta",
                    "title": "theta",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/squaredlength",
                    "title": "squaredLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/x",
                    "title": "x",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/y",
                    "title": "y",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/dotproduct(of:vector:)",
                    "title": "+ dotProductOfVector:vector:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/unitvector(for:)",
                    "title": "+ unitVectorForVector:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnvector",
                "title": "VNVector",
                "type": "class"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vnerrordomain",
                "title": "VNErrorDomain",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/turicoreerrorcode",
                    "title": "VNErrorTuriCoreErrorCode",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/ok",
                    "title": "VNErrorOK",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/dataunavailable",
                    "title": "VNErrorDataUnavailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/internalerror",
                    "title": "VNErrorInternalError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidargument",
                    "title": "VNErrorInvalidArgument",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidformat",
                    "title": "VNErrorInvalidFormat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidimage",
                    "title": "VNErrorInvalidImage",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidmodel",
                    "title": "VNErrorInvalidModel",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidoperation",
                    "title": "VNErrorInvalidOperation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidoption",
                    "title": "VNErrorInvalidOption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/ioerror",
                    "title": "VNErrorIOError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/missingoption",
                    "title": "VNErrorMissingOption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/notimplemented",
                    "title": "VNErrorNotImplemented",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/operationfailed",
                    "title": "VNErrorOperationFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/outofboundserror",
                    "title": "VNErrorOutOfBoundsError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/outofmemory",
                    "title": "VNErrorOutOfMemory",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/requestcancelled",
                    "title": "VNErrorRequestCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/timestampnotfound",
                    "title": "VNErrorTimeStampNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unknownerror",
                    "title": "VNErrorUnknownError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedrevision",
                    "title": "VNErrorUnsupportedRevision",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedrequest",
                    "title": "VNErrorUnsupportedRequest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedcomputedevice",
                    "title": "VNErrorUnsupportedComputeDevice",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedcomputestage",
                    "title": "VNErrorUnsupportedComputeStage",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/timeout",
                    "title": "VNErrorTimeout",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/vnerrorcode",
                "title": "VNErrorCode",
                "type": "enum"
              },
              {
                "title": "Version and revision numbers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vnvisionversionnumber",
                "title": "VNVisionVersionNumber",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetectanimalbodyposerequestrevision1",
                "title": "VNDetectAnimalBodyPoseRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetecthumanbodypose3drequestrevision1",
                "title": "VNDetectHumanBodyPose3DRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vntrackhomographicimageregistrationrequestrevision1",
                "title": "VNTrackHomographicImageRegistrationRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vntracktranslationalimageregistrationrequestrevision1",
                "title": "VNTrackTranslationalImageRegistrationRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vntrackopticalflowrequestrevision1",
                "title": "VNTrackOpticalFlowRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnclassifyimagerequestrevision1",
                "title": "VNClassifyImageRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnclassifyimagerequestrevision2",
                "title": "VNClassifyImageRequestRevision2",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequestrevision2",
                "title": "VNGenerateObjectnessBasedSaliencyImageRequestRevision2",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequestrevision2",
                "title": "VNGenerateAttentionBasedSaliencyImageRequestRevision2",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision1",
                "title": "VNGenerateImageFeaturePrintRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision2",
                "title": "VNGenerateImageFeaturePrintRequestRevision2",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision3",
                "title": "VNDetectFaceCaptureQualityRequestRevision3",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetectbarcodesrequestrevision4",
                "title": "VNDetectBarcodesRequestRevision4",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vncalculateimageaestheticsscoresrequestrevision1",
                "title": "VNCalculateImageAestheticsScoresRequestRevision1",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnrequestrevisionunspecified",
                "title": "VNRequestRevisionUnspecified",
                "type": "var"
              },
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vision-macros",
                "title": "Macros",
                "type": "collection"
              }
            ],
            "path": "/documentation/vision/original-objective-c-and-swift-api",
            "title": "Original Objective-C and Swift API",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Options",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/vision/vnvideoprocessingoption/framecadence",
                "title": "VNVideoProcessingOptionFrameCadence",
                "type": "var"
              },
              {
                "deprecated": true,
                "path": "/documentation/vision/vnvideoprocessingoption/timeinterval",
                "title": "VNVideoProcessingOptionTimeInterval",
                "type": "var"
              }
            ],
            "deprecated": true,
            "path": "/documentation/vision/vnvideoprocessingoption",
            "title": "VNVideoProcessingOption",
            "type": "typealias"
          },
          {
            "title": "Type Aliases",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/vision",
        "title": "Vision",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Still-image analysis",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/classifying-images-for-categorization-and-search",
            "title": "Classifying images for categorization and search",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/classifyimagerequest/init(_:)",
                "title": "init(ClassifyImageRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/classifyimagerequest/revision-swift.property",
                "title": "let revision: ClassifyImageRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/classifyimagerequest/supportedrevisions",
                "title": "static let supportedRevisions: [ClassifyImageRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/classifyimagerequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/classifyimagerequest/revision-swift.enum",
                "title": "ClassifyImageRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/classifyimagerequest/cropandscaleaction",
                "title": "var cropAndScaleAction: ImageCropAndScaleAction",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/centercrop",
                    "title": "case centerCrop",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofit",
                    "title": "case scaleToFit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofill",
                    "title": "case scaleToFill",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofitplus90ccwrotation",
                    "title": "case scaleToFitPlus90CCWRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofillplus90ccwrotation",
                    "title": "case scaleToFillPlus90CCWRotation",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/imagecropandscaleaction",
                "title": "ImageCropAndScaleAction",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/classifyimagerequest/supportedidentifiers",
                "title": "var supportedIdentifiers: [String]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/classificationobservation/init(_:)",
                    "title": "init(VNClassificationObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/classificationobservation/hasprecisionrecallcurve",
                    "title": "var hasPrecisionRecallCurve: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/classificationobservation/identifier",
                    "title": "let identifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Determining precision and recall",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/classificationobservation/hasminimumprecision(_:forrecall:)",
                    "title": "func hasMinimumPrecision(Float, forRecall: Float) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/classificationobservation/hasminimumrecall(_:forprecision:)",
                    "title": "func hasMinimumRecall(Float, forPrecision: Float) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/classificationobservation",
                "title": "ClassificationObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/classifyimagerequest",
            "title": "ClassifyImageRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Setting the region",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/regionofinterest",
                "title": "var regionOfInterest: NormalizedRect",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/imageprocessingrequest",
            "title": "ImageProcessingRequest",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a request handler",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-6imw8",
                "title": "convenience init(URL, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-8cwes",
                "title": "convenience init(Data, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-8nodt",
                "title": "convenience init(CGImage, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:depthdata:orientation:)-3ebxg",
                "title": "convenience init(CVPixelBuffer, depthData: AVDepthData?, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:depthdata:orientation:)-5itte",
                "title": "convenience init(CMSampleBuffer, depthData: AVDepthData?, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-2hvfr",
                "title": "convenience init(CIImage, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "title": "Performing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/perform(_:)-l6er",
                "title": "func perform<each T>(repeat each T) async throws -> (repeat (each T).Result)",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/perform(_:)-7b6g5",
                "title": "func perform<T>(T) async throws -> T.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/performall(_:)",
                "title": "func performAll(some Collection<any VisionRequest>) -> some AsyncSequence<VisionResult, Never>\n",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/imagerequesthandler",
            "title": "ImageRequestHandler",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the compute device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionrequest/computedevice(for:)",
                "title": "func computeDevice(for: ComputeStage) -> MLComputeDevice?",
                "type": "method"
              },
              {
                "path": "/documentation/vision/visionrequest/supportedcomputestagedevices",
                "title": "var supportedComputeStageDevices: [ComputeStage : [MLComputeDevice]]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the compute stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/computestage/main",
                    "title": "case main",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/computestage/postprocessing",
                    "title": "case postProcessing",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/computestage",
                "title": "ComputeStage",
                "type": "enum"
              },
              {
                "title": "Setting the compute device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionrequest/setcomputedevice(_:for:)",
                "title": "func setComputeDevice(MLComputeDevice?, for: ComputeStage)",
                "type": "method"
              },
              {
                "title": "Performing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionrequest/result",
                "title": "Result",
                "type": "associatedtype"
              },
              {
                "children": [
                  {
                    "title": "Getting the still-image result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/classifyimage(_:_:)",
                    "title": "case classifyImage(ClassifyImageRequest, [ClassificationObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image sequence result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/generatepersoninstancemask(_:_:)",
                    "title": "case generatePersonInstanceMask(GeneratePersonInstanceMaskRequest, InstanceMaskObservation?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectdocumentsegmentation(_:_:)",
                    "title": "case detectDocumentSegmentation(DetectDocumentSegmentationRequest, DetectedDocumentObservation?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/generatepersonsegmentation(_:_:)",
                    "title": "case generatePersonSegmentation(GeneratePersonSegmentationRequest, PixelBufferObservation)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image aesthetics result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/calculateimageaestheticsscores(_:_:)",
                    "title": "case calculateImageAestheticsScores(CalculateImageAestheticsScoresRequest, ImageAestheticsScoresObservation)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the saliency result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/generateobjectnessbasedsaliencyimage(_:_:)",
                    "title": "case generateObjectnessBasedSaliencyImage(GenerateObjectnessBasedSaliencyImageRequest, SaliencyImageObservation)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/generateattentionbasedsaliencyimage(_:_:)",
                    "title": "case generateAttentionBasedSaliencyImage(GenerateAttentionBasedSaliencyImageRequest, SaliencyImageObservation)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the object-tracking result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/trackrectangle(_:_:)",
                    "title": "case trackRectangle(TrackRectangleRequest, RectangleObservation?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/trackobject(_:_:)",
                    "title": "case trackObject(TrackObjectRequest, DetectedObjectObservation?)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the face and body detection result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectfacecapturequality(_:_:)",
                    "title": "case detectFaceCaptureQuality(DetectFaceCaptureQualityRequest, [FaceObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectfacelandmarks(_:_:)",
                    "title": "case detectFaceLandmarks(DetectFaceLandmarksRequest, [FaceObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectfacerectangles(_:_:)",
                    "title": "case detectFaceRectangles(DetectFaceRectanglesRequest, [FaceObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecthumanrectangles(_:_:)",
                    "title": "case detectHumanRectangles(DetectHumanRectanglesRequest, [HumanObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the body and hand pose detection result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecthumanbodypose(_:_:)",
                    "title": "case detectHumanBodyPose(DetectHumanBodyPoseRequest, [HumanBodyPoseObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecthumanhandpose(_:_:)",
                    "title": "case detectHumanHandPose(DetectHumanHandPoseRequest, [HumanHandPoseObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecthumanbodypose3d(_:_:)",
                    "title": "case detectHumanBodyPose3D(DetectHumanBodyPose3DRequest, [HumanBodyPose3DObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the animal detection result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/recognizeanimals(_:_:)",
                    "title": "case recognizeAnimals(RecognizeAnimalsRequest, [RecognizedObjectObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectanimalbodypose(_:_:)",
                    "title": "case detectAnimalBodyPose(DetectAnimalBodyPoseRequest, [AnimalBodyPoseObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the text result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecttextrectangles(_:_:)",
                    "title": "case detectTextRectangles(DetectTextRectanglesRequest, [TextObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/recognizetext(_:_:)",
                    "title": "case recognizeText(RecognizeTextRequest, [RecognizedTextObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image alignment, feature print, and background removal result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/tracktranslationalimageregistration(_:_:)",
                    "title": "case trackTranslationalImageRegistration(TrackTranslationalImageRegistrationRequest, ImageTranslationAlignmentObservation)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/trackhomographicimageregistration(_:_:)",
                    "title": "case trackHomographicImageRegistration(TrackHomographicImageRegistrationRequest, ImageHomographicAlignmentObservation)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/generateforegroundinstancemask(_:_:)",
                    "title": "case generateForegroundInstanceMask(GenerateForegroundInstanceMaskRequest, InstanceMaskObservation?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/generateimagefeatureprint(_:_:)",
                    "title": "case generateImageFeaturePrint(GenerateImageFeaturePrintRequest, FeaturePrintObservation)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the trajectory, contour, and horizon detection result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecttrajectories(_:_:)",
                    "title": "case detectTrajectories(DetectTrajectoriesRequest, [TrajectoryObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectcontours(_:_:)",
                    "title": "case detectContours(DetectContoursRequest, ContoursObservation)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detecthorizon(_:_:)",
                    "title": "case detectHorizon(DetectHorizonRequest, HorizonObservation?)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the optical flow, rectangle and barcode detection result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/trackopticalflow(_:_:)",
                    "title": "case trackOpticalFlow(TrackOpticalFlowRequest, OpticalFlowObservation?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectrectangles(_:_:)",
                    "title": "case detectRectangles(DetectRectanglesRequest, [RectangleObservation])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/visionresult/detectbarcodes(_:_:)",
                    "title": "case detectBarcodes(DetectBarcodesRequest, [BarcodeObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the machine learning image-analysis result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/coreml(_:_:)",
                    "title": "case coreML(CoreMLRequest, [any VisionObservation])",
                    "type": "case"
                  },
                  {
                    "title": "Getting the error result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionresult/error(_:_:)",
                    "title": "case error(any VisionRequest, any Error)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/visionresult",
                "title": "VisionResult",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionrequest/descriptor",
                "title": "var descriptor: RequestDescriptor",
                "type": "property"
              }
            ],
            "path": "/documentation/vision/visionrequest",
            "title": "VisionRequest",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Inspecting an observation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionobservation/uuid",
                "title": "var uuid: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/vision/visionobservation/confidence",
                "title": "var confidence: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/visionobservation/description",
                "title": "var description: String",
                "type": "property"
              },
              {
                "path": "/documentation/vision/visionobservation/originatingrequestdescriptor",
                "title": "var originatingRequestDescriptor: RequestDescriptor?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the still-image descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                    "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image sequence descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                    "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                    "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                    "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image aesthetics descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                    "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the saliency descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                    "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                    "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the object-tracking descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                    "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                    "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the face and body detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                    "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                    "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                    "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                    "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the body and hand pose detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                    "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                    "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                    "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the animal detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                    "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                    "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the text descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                    "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                    "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image alignment, feature print, and background removal descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                    "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                    "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                    "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                    "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the trajectory, contour, and horizon detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                    "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                    "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                    "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                    "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                    "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                    "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the machine learning image-analysis descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                    "title": "case coreMLRequest(CoreMLRequest.Revision)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/requestdescriptor",
                "title": "RequestDescriptor",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/visionobservation/timerange",
                "title": "var timeRange: CMTimeRange?",
                "type": "property"
              },
              {
                "title": "Hashing the observation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionobservation/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/visionobservation/hash(into:)-8aqw6",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/visionobservation/hashable-implementations",
                "title": "Hashable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/vision/visionobservation",
            "title": "VisionObservation",
            "type": "protocol"
          },
          {
            "title": "Image sequence analysis",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generatepersonsegmentationrequest/init(_:frameanalysisspacing:)",
                "title": "init(GeneratePersonSegmentationRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generatepersonsegmentationrequest/revision-swift.property",
                "title": "let revision: GeneratePersonSegmentationRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generatepersonsegmentationrequest/supportedrevisions",
                "title": "static let supportedRevisions: [GeneratePersonSegmentationRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generatepersonsegmentationrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generatepersonsegmentationrequest/revision-swift.enum",
                "title": "GeneratePersonSegmentationRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generatepersonsegmentationrequest/qualitylevel-swift.property",
                "title": "var qualityLevel: GeneratePersonSegmentationRequest.QualityLevel",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the quality levels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generatepersonsegmentationrequest/qualitylevel-swift.enum/accurate",
                    "title": "case accurate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/generatepersonsegmentationrequest/qualitylevel-swift.enum/balanced",
                    "title": "case balanced",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/generatepersonsegmentationrequest/qualitylevel-swift.enum/fast",
                    "title": "case fast",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generatepersonsegmentationrequest/qualitylevel-swift.enum",
                "title": "GeneratePersonSegmentationRequest.QualityLevel",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/generatepersonsegmentationrequest/outputpixelformattype",
                "title": "var outputPixelFormatType: OSType",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generatepersonsegmentationrequest/supportedoutputpixelformats",
                "title": "var supportedOutputPixelFormats: [OSType]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                    "title": "init?(VNPixelBufferObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/pixelbufferobservation/cgimage",
                    "title": "var cgImage: CGImage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                    "title": "var pixelFormat: OSType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/pixelbufferobservation/size",
                    "title": "var size: CGSize",
                    "type": "property"
                  },
                  {
                    "title": "Getting pixel data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                    "title": "func pixel(at: NormalizedPoint) -> Float",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the memory",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                    "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/pixelbufferobservation",
                "title": "PixelBufferObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/generatepersonsegmentationrequest",
            "title": "GeneratePersonSegmentationRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generatepersoninstancemaskrequest/init(_:)",
                "title": "init(GeneratePersonInstanceMaskRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generatepersoninstancemaskrequest/revision-swift.property",
                "title": "let revision: GeneratePersonInstanceMaskRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generatepersoninstancemaskrequest/supportedrevisions",
                "title": "static let supportedRevisions: [GeneratePersonInstanceMaskRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generatepersoninstancemaskrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generatepersoninstancemaskrequest/revision-swift.enum",
                "title": "GeneratePersonInstanceMaskRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/init(_:)",
                    "title": "init?(VNInstanceMaskObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "title": "Generating a mask",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/generatemask(for:)",
                    "title": "func generateMask(for: IndexSet) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/generatemaskedimage(for:imagefrom:croppedtoinstancesextent:)",
                    "title": "func generateMaskedImage(for: IndexSet, imageFrom: ImageRequestHandler, croppedToInstancesExtent: Bool) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/generatescaledmask(for:scaledtoimagefrom:)",
                    "title": "func generateScaledMask(for: IndexSet, scaledToImageFrom: ImageRequestHandler) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "title": "Getting instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/instanceatpoint(_:)",
                    "title": "func instanceAtPoint(NormalizedPoint) -> IndexSet",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/allinstances",
                    "title": "let allInstances: IndexSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/allinstancesmask",
                    "title": "let allInstancesMask: PixelBufferObservation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                        "title": "init?(VNPixelBufferObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/cgimage",
                        "title": "var cgImage: CGImage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                        "title": "var pixelFormat: OSType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/size",
                        "title": "var size: CGSize",
                        "type": "property"
                      },
                      {
                        "title": "Getting pixel data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                        "title": "func pixel(at: NormalizedPoint) -> Float",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                        "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/pixelbufferobservation",
                    "title": "PixelBufferObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/instancemaskobservation",
                "title": "InstanceMaskObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/generatepersoninstancemaskrequest",
            "title": "GeneratePersonInstanceMaskRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectdocumentsegmentationrequest/init(_:)",
                "title": "init(DetectDocumentSegmentationRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectdocumentsegmentationrequest/revision-swift.property",
                "title": "let revision: DetectDocumentSegmentationRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectdocumentsegmentationrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectDocumentSegmentationRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectdocumentsegmentationrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectdocumentsegmentationrequest/revision-swift.enum",
                "title": "DetectDocumentSegmentationRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecteddocumentobservation/init(_:)",
                    "title": "init?(VNRectangleObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/detecteddocumentobservation/globalsegmentationmask",
                    "title": "var globalSegmentationMask: PixelBufferObservation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                        "title": "init?(VNPixelBufferObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/cgimage",
                        "title": "var cgImage: CGImage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                        "title": "var pixelFormat: OSType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/size",
                        "title": "var size: CGSize",
                        "type": "property"
                      },
                      {
                        "title": "Getting pixel data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                        "title": "func pixel(at: NormalizedPoint) -> Float",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                        "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/pixelbufferobservation",
                    "title": "PixelBufferObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/detecteddocumentobservation",
                "title": "DetectedDocumentObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectdocumentsegmentationrequest",
            "title": "DetectDocumentSegmentationRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Inspecting the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/statefulrequest/frameanalysisspacing",
                "title": "var frameAnalysisSpacing: CMTime",
                "type": "property"
              },
              {
                "path": "/documentation/vision/statefulrequest/minimumlatencyframecount",
                "title": "var minimumLatencyFrameCount: Int",
                "type": "property"
              },
              {
                "title": "Comparing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/statefulrequest/==(_:_:)",
                "title": "static func == (Self, Self) -> Bool",
                "type": "op"
              },
              {
                "title": "Hashing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/statefulrequest/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/statefulrequest/==(_:_:)",
                    "title": "static func == (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/vision/statefulrequest/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/statefulrequest/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/statefulrequest/hashable-implementations",
                "title": "Hashable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/vision/statefulrequest",
            "title": "StatefulRequest",
            "type": "protocol"
          },
          {
            "title": "Image aesthetics analysis",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/generating-thumbnails-from-videos",
            "title": "Generating high-quality thumbnails from videos",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/calculateimageaestheticsscoresrequest/init(_:)",
                "title": "init(CalculateImageAestheticsScoresRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/calculateimageaestheticsscoresrequest/revision-swift.property",
                "title": "let revision: CalculateImageAestheticsScoresRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/calculateimageaestheticsscoresrequest/supportedrevisions",
                "title": "static let supportedRevisions: [CalculateImageAestheticsScoresRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/calculateimageaestheticsscoresrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/calculateimageaestheticsscoresrequest/revision-swift.enum",
                "title": "CalculateImageAestheticsScoresRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/calculateimageaestheticsscoresrequest/cropandscaleaction",
                "title": "var cropAndScaleAction: ImageCropAndScaleAction",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/centercrop",
                    "title": "case centerCrop",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofit",
                    "title": "case scaleToFit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofill",
                    "title": "case scaleToFill",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofitplus90ccwrotation",
                    "title": "case scaleToFitPlus90CCWRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofillplus90ccwrotation",
                    "title": "case scaleToFillPlus90CCWRotation",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/imagecropandscaleaction",
                "title": "ImageCropAndScaleAction",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imageaestheticsscoresobservation/init(_:)",
                    "title": "init(VNImageAestheticsScoresObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/imageaestheticsscoresobservation/isutility",
                    "title": "let isUtility: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/imageaestheticsscoresobservation/overallscore",
                    "title": "let overallScore: Float",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/imageaestheticsscoresobservation",
                "title": "ImageAestheticsScoresObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/calculateimageaestheticsscoresrequest",
            "title": "CalculateImageAestheticsScoresRequest",
            "type": "struct"
          },
          {
            "title": "Saliency analysis",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateattentionbasedsaliencyimagerequest/init(_:)",
                "title": "init(GenerateAttentionBasedSaliencyImageRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateattentionbasedsaliencyimagerequest/revision-swift.property",
                "title": "let revision: GenerateAttentionBasedSaliencyImageRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generateattentionbasedsaliencyimagerequest/supportedrevisions",
                "title": "static let supportedRevisions: [GenerateAttentionBasedSaliencyImageRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generateattentionbasedsaliencyimagerequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generateattentionbasedsaliencyimagerequest/revision-swift.enum",
                "title": "GenerateAttentionBasedSaliencyImageRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/saliencyimageobservation/init(_:)",
                    "title": "init?(VNSaliencyImageObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/saliencyimageobservation/heatmap",
                    "title": "let heatMap: PixelBufferObservation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                        "title": "init?(VNPixelBufferObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/cgimage",
                        "title": "var cgImage: CGImage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                        "title": "var pixelFormat: OSType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/size",
                        "title": "var size: CGSize",
                        "type": "property"
                      },
                      {
                        "title": "Getting pixel data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                        "title": "func pixel(at: NormalizedPoint) -> Float",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                        "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/pixelbufferobservation",
                    "title": "PixelBufferObservation",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/saliencyimageobservation/salientobjects",
                    "title": "let salientObjects: [RectangleObservation]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/rectangleobservation/init(_:)",
                        "title": "init(VNRectangleObservation)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/vision/rectangleobservation/init(topleft:topright:bottomright:bottomleft:)",
                        "title": "init(topLeft: NormalizedPoint, topRight: NormalizedPoint, bottomRight: NormalizedPoint, bottomLeft: NormalizedPoint)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/vision/rectangleobservation",
                    "title": "RectangleObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/saliencyimageobservation",
                "title": "SaliencyImageObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/generateattentionbasedsaliencyimagerequest",
            "title": "GenerateAttentionBasedSaliencyImageRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateobjectnessbasedsaliencyimagerequest/init(_:)",
                "title": "init(GenerateObjectnessBasedSaliencyImageRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateobjectnessbasedsaliencyimagerequest/revision-swift.property",
                "title": "let revision: GenerateObjectnessBasedSaliencyImageRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generateobjectnessbasedsaliencyimagerequest/supportedrevisions",
                "title": "static let supportedRevisions: [GenerateObjectnessBasedSaliencyImageRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generateobjectnessbasedsaliencyimagerequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generateobjectnessbasedsaliencyimagerequest/revision-swift.enum",
                "title": "GenerateObjectnessBasedSaliencyImageRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/saliencyimageobservation/init(_:)",
                    "title": "init?(VNSaliencyImageObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/saliencyimageobservation/heatmap",
                    "title": "let heatMap: PixelBufferObservation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                        "title": "init?(VNPixelBufferObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/cgimage",
                        "title": "var cgImage: CGImage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                        "title": "var pixelFormat: OSType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/size",
                        "title": "var size: CGSize",
                        "type": "property"
                      },
                      {
                        "title": "Getting pixel data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                        "title": "func pixel(at: NormalizedPoint) -> Float",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                        "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/pixelbufferobservation",
                    "title": "PixelBufferObservation",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/saliencyimageobservation/salientobjects",
                    "title": "let salientObjects: [RectangleObservation]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/rectangleobservation/init(_:)",
                        "title": "init(VNRectangleObservation)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/vision/rectangleobservation/init(topleft:topright:bottomright:bottomleft:)",
                        "title": "init(topLeft: NormalizedPoint, topRight: NormalizedPoint, bottomRight: NormalizedPoint, bottomLeft: NormalizedPoint)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/vision/rectangleobservation",
                    "title": "RectangleObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/saliencyimageobservation",
                "title": "SaliencyImageObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/generateobjectnessbasedsaliencyimagerequest",
            "title": "GenerateObjectnessBasedSaliencyImageRequest",
            "type": "struct"
          },
          {
            "title": "Object tracking",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackobjectrequest/init(detectedobject:_:frameanalysisspacing:)",
                "title": "init(detectedObject: any BoundingBoxProviding & VisionObservation, TrackObjectRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Getting the bounding box",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/boundingboxproviding/boundingbox",
                    "title": "var boundingBox: NormalizedRect",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/boundingboxproviding",
                "title": "BoundingBoxProviding",
                "type": "protocol"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackobjectrequest/revision-swift.property",
                "title": "let revision: TrackObjectRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/trackobjectrequest/supportedrevisions",
                "title": "static let supportedRevisions: [TrackObjectRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trackobjectrequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/trackobjectrequest/revision-swift.enum",
                "title": "TrackObjectRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackobjectrequest/inputobservation",
                "title": "let inputObservation: any BoundingBoxProviding & VisionObservation",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectedobjectobservation/init(_:)",
                    "title": "init(VNDetectedObjectObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/detectedobjectobservation/init(boundingbox:)",
                    "title": "init(boundingBox: NormalizedRect)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/detectedobjectobservation",
                "title": "DetectedObjectObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/trackobjectrequest",
            "title": "TrackObjectRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackrectanglerequest/init(detectedrectangle:_:frameanalysisspacing:)",
                "title": "init(detectedRectangle: any QuadrilateralProviding & VisionObservation, TrackRectangleRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackrectanglerequest/revision-swift.property",
                "title": "let revision: TrackRectangleRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/trackrectanglerequest/supportedrevisions",
                "title": "static let supportedRevisions: [TrackRectangleRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trackrectanglerequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/trackrectanglerequest/revision-swift.enum",
                "title": "TrackRectangleRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackrectanglerequest/inputobservation",
                "title": "let inputObservation: any QuadrilateralProviding & VisionObservation",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the normalized points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/quadrilateralproviding/bottomleft",
                    "title": "var bottomLeft: NormalizedPoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/quadrilateralproviding/bottomright",
                    "title": "var bottomRight: NormalizedPoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/quadrilateralproviding/topleft",
                    "title": "var topLeft: NormalizedPoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/quadrilateralproviding/topright",
                    "title": "var topRight: NormalizedPoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/quadrilateralproviding",
                "title": "QuadrilateralProviding",
                "type": "protocol"
              },
              {
                "path": "/documentation/vision/trackrectanglerequest/trackinglevel-swift.property",
                "title": "var trackingLevel: TrackRectangleRequest.TrackingLevel",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the tracking levels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trackrectanglerequest/trackinglevel-swift.enum/accurate",
                    "title": "case accurate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/trackrectanglerequest/trackinglevel-swift.enum/fast",
                    "title": "case fast",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/trackrectanglerequest/trackinglevel-swift.enum",
                "title": "TrackRectangleRequest.TrackingLevel",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/rectangleobservation/init(_:)",
                    "title": "init(VNRectangleObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/rectangleobservation/init(topleft:topright:bottomright:bottomleft:)",
                    "title": "init(topLeft: NormalizedPoint, topRight: NormalizedPoint, bottomRight: NormalizedPoint, bottomLeft: NormalizedPoint)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/rectangleobservation",
                "title": "RectangleObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/trackrectanglerequest",
            "title": "TrackRectangleRequest",
            "type": "class"
          },
          {
            "title": "Face and body detection",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/analyzing-a-selfie-and-visualizing-its-content",
            "title": "Analyzing a selfie and visualizing its content",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacerectanglesrequest/init(_:)",
                "title": "init(DetectFaceRectanglesRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacerectanglesrequest/revision-swift.property",
                "title": "let revision: DetectFaceRectanglesRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectfacerectanglesrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectFaceRectanglesRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectfacerectanglesrequest/revision-swift.enum/revision3",
                    "title": "case revision3",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectfacerectanglesrequest/revision-swift.enum",
                "title": "DetectFaceRectanglesRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/init(_:)",
                    "title": "init(VNFaceObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/init(boundingbox:revision:)",
                    "title": "init(boundingBox: NormalizedRect, revision: DetectFaceRectanglesRequest.Revision?)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/facecontour",
                        "title": "var faceContour: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/innerlips",
                        "title": "var innerLips: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/lefteye",
                        "title": "var leftEye: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/lefteyebrow",
                        "title": "var leftEyebrow: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/leftpupil",
                        "title": "var leftPupil: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/medianline",
                        "title": "var medianLine: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/nose",
                        "title": "var nose: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/nosecrest",
                        "title": "var noseCrest: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/outerlips",
                        "title": "var outerLips: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/righteye",
                        "title": "var rightEye: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/righteyebrow",
                        "title": "var rightEyebrow: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/rightpupil",
                        "title": "var rightPupil: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "title": "Inspecting a landmark",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/originatingrequestdescriptor",
                        "title": "let originatingRequestDescriptor: RequestDescriptor?",
                        "type": "property"
                      },
                      {
                        "title": "Getting all landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/allpoints",
                        "title": "var allPoints: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting a region",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/originatingrequestdescriptor",
                            "title": "let originatingRequestDescriptor: RequestDescriptor?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/points",
                            "title": "let points: [NormalizedPoint]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.property",
                            "title": "let pointsClassification: FaceObservation.Landmarks2D.Region.PointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the point classifications",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/closedpath",
                                "title": "case closedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/disconnected",
                                "title": "case disconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/openpath",
                                "title": "case openPath",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum",
                            "title": "FaceObservation.Landmarks2D.Region.PointsClassification",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/precisionestimatesperpoint",
                            "title": "let precisionEstimatesPerPoint: [Float]?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsinimagecoordinates(_:origin:)",
                            "title": "func pointsInImageCoordinates(CGSize, origin: CoordinateOrigin) -> [CGPoint]",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/faceobservation/landmarks2d/region",
                        "title": "FaceObservation.Landmarks2D.Region",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/vision/faceobservation/landmarks2d",
                    "title": "FaceObservation.Landmarks2D",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/landmarks",
                    "title": "let landmarks: FaceObservation.Landmarks2D?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/pitch",
                    "title": "let pitch: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/roll",
                    "title": "let roll: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/yaw",
                    "title": "let yaw: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/capturequality-swift.struct/originatingrequestdescriptor",
                        "title": "let originatingRequestDescriptor: RequestDescriptor?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/capturequality-swift.struct/score",
                        "title": "let score: Float",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/faceobservation/capturequality-swift.struct",
                    "title": "FaceObservation.CaptureQuality",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/capturequality-swift.property",
                    "title": "let captureQuality: FaceObservation.CaptureQuality?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/faceobservation",
                "title": "FaceObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectfacerectanglesrequest",
            "title": "DetectFaceRectanglesRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacelandmarksrequest/init(_:)",
                "title": "init(DetectFaceLandmarksRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacelandmarksrequest/revision-swift.property",
                "title": "let revision: DetectFaceLandmarksRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectfacelandmarksrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectFaceLandmarksRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectfacelandmarksrequest/revision-swift.enum/revision3",
                    "title": "case revision3",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectfacelandmarksrequest/revision-swift.enum",
                "title": "DetectFaceLandmarksRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacelandmarksrequest/inputfaceobservations",
                "title": "var inputFaceObservations: [FaceObservation]?",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/init(_:)",
                    "title": "init(VNFaceObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/init(boundingbox:revision:)",
                    "title": "init(boundingBox: NormalizedRect, revision: DetectFaceRectanglesRequest.Revision?)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/facecontour",
                        "title": "var faceContour: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/innerlips",
                        "title": "var innerLips: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/lefteye",
                        "title": "var leftEye: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/lefteyebrow",
                        "title": "var leftEyebrow: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/leftpupil",
                        "title": "var leftPupil: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/medianline",
                        "title": "var medianLine: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/nose",
                        "title": "var nose: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/nosecrest",
                        "title": "var noseCrest: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/outerlips",
                        "title": "var outerLips: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/righteye",
                        "title": "var rightEye: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/righteyebrow",
                        "title": "var rightEyebrow: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/rightpupil",
                        "title": "var rightPupil: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "title": "Inspecting a landmark",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/originatingrequestdescriptor",
                        "title": "let originatingRequestDescriptor: RequestDescriptor?",
                        "type": "property"
                      },
                      {
                        "title": "Getting all landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/allpoints",
                        "title": "var allPoints: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting a region",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/originatingrequestdescriptor",
                            "title": "let originatingRequestDescriptor: RequestDescriptor?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/points",
                            "title": "let points: [NormalizedPoint]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.property",
                            "title": "let pointsClassification: FaceObservation.Landmarks2D.Region.PointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the point classifications",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/closedpath",
                                "title": "case closedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/disconnected",
                                "title": "case disconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/openpath",
                                "title": "case openPath",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum",
                            "title": "FaceObservation.Landmarks2D.Region.PointsClassification",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/precisionestimatesperpoint",
                            "title": "let precisionEstimatesPerPoint: [Float]?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsinimagecoordinates(_:origin:)",
                            "title": "func pointsInImageCoordinates(CGSize, origin: CoordinateOrigin) -> [CGPoint]",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/faceobservation/landmarks2d/region",
                        "title": "FaceObservation.Landmarks2D.Region",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/vision/faceobservation/landmarks2d",
                    "title": "FaceObservation.Landmarks2D",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/landmarks",
                    "title": "let landmarks: FaceObservation.Landmarks2D?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/pitch",
                    "title": "let pitch: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/roll",
                    "title": "let roll: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/yaw",
                    "title": "let yaw: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/capturequality-swift.struct/originatingrequestdescriptor",
                        "title": "let originatingRequestDescriptor: RequestDescriptor?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/capturequality-swift.struct/score",
                        "title": "let score: Float",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/faceobservation/capturequality-swift.struct",
                    "title": "FaceObservation.CaptureQuality",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/capturequality-swift.property",
                    "title": "let captureQuality: FaceObservation.CaptureQuality?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/faceobservation",
                "title": "FaceObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectfacelandmarksrequest",
            "title": "DetectFaceLandmarksRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacecapturequalityrequest/init(_:)",
                "title": "init(DetectFaceCaptureQualityRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacecapturequalityrequest/revision-swift.property",
                "title": "let revision: DetectFaceCaptureQualityRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectfacecapturequalityrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectFaceCaptureQualityRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectfacecapturequalityrequest/revision-swift.enum/revision3",
                    "title": "case revision3",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectfacecapturequalityrequest/revision-swift.enum",
                "title": "DetectFaceCaptureQualityRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectfacecapturequalityrequest/inputfaceobservations",
                "title": "var inputFaceObservations: [FaceObservation]?",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/init(_:)",
                    "title": "init(VNFaceObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/init(boundingbox:revision:)",
                    "title": "init(boundingBox: NormalizedRect, revision: DetectFaceRectanglesRequest.Revision?)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/facecontour",
                        "title": "var faceContour: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/innerlips",
                        "title": "var innerLips: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/lefteye",
                        "title": "var leftEye: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/lefteyebrow",
                        "title": "var leftEyebrow: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/leftpupil",
                        "title": "var leftPupil: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/medianline",
                        "title": "var medianLine: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/nose",
                        "title": "var nose: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/nosecrest",
                        "title": "var noseCrest: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/outerlips",
                        "title": "var outerLips: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/righteye",
                        "title": "var rightEye: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/righteyebrow",
                        "title": "var rightEyebrow: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/rightpupil",
                        "title": "var rightPupil: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "title": "Inspecting a landmark",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/originatingrequestdescriptor",
                        "title": "let originatingRequestDescriptor: RequestDescriptor?",
                        "type": "property"
                      },
                      {
                        "title": "Getting all landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/landmarks2d/allpoints",
                        "title": "var allPoints: FaceObservation.Landmarks2D.Region",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting a region",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/originatingrequestdescriptor",
                            "title": "let originatingRequestDescriptor: RequestDescriptor?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/points",
                            "title": "let points: [NormalizedPoint]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.property",
                            "title": "let pointsClassification: FaceObservation.Landmarks2D.Region.PointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the point classifications",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/closedpath",
                                "title": "case closedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/disconnected",
                                "title": "case disconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum/openpath",
                                "title": "case openPath",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsclassification-swift.enum",
                            "title": "FaceObservation.Landmarks2D.Region.PointsClassification",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/precisionestimatesperpoint",
                            "title": "let precisionEstimatesPerPoint: [Float]?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/faceobservation/landmarks2d/region/pointsinimagecoordinates(_:origin:)",
                            "title": "func pointsInImageCoordinates(CGSize, origin: CoordinateOrigin) -> [CGPoint]",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/faceobservation/landmarks2d/region",
                        "title": "FaceObservation.Landmarks2D.Region",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/vision/faceobservation/landmarks2d",
                    "title": "FaceObservation.Landmarks2D",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/landmarks",
                    "title": "let landmarks: FaceObservation.Landmarks2D?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/pitch",
                    "title": "let pitch: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/roll",
                    "title": "let roll: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/yaw",
                    "title": "let yaw: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/capturequality-swift.struct/originatingrequestdescriptor",
                        "title": "let originatingRequestDescriptor: RequestDescriptor?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/faceobservation/capturequality-swift.struct/score",
                        "title": "let score: Float",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/faceobservation/capturequality-swift.struct",
                    "title": "FaceObservation.CaptureQuality",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/faceobservation/capturequality-swift.property",
                    "title": "let captureQuality: FaceObservation.CaptureQuality?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/faceobservation",
                "title": "FaceObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectfacecapturequalityrequest",
            "title": "DetectFaceCaptureQualityRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanrectanglesrequest/init(_:)",
                "title": "init(DetectHumanRectanglesRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanrectanglesrequest/revision-swift.property",
                "title": "let revision: DetectHumanRectanglesRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanrectanglesrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectHumanRectanglesRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecthumanrectanglesrequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecthumanrectanglesrequest/revision-swift.enum",
                "title": "DetectHumanRectanglesRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanrectanglesrequest/upperbodyonly",
                "title": "var upperBodyOnly: Bool",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanobservation/init(_:)",
                    "title": "init(VNHumanObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanobservation/isupperbodyonly",
                    "title": "let isUpperBodyOnly: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanobservation/init(boundingbox:revision:)",
                    "title": "init(boundingBox: NormalizedRect, revision: DetectHumanRectanglesRequest.Revision?)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/humanobservation",
                "title": "HumanObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecthumanrectanglesrequest",
            "title": "DetectHumanRectanglesRequest",
            "type": "struct"
          },
          {
            "title": "Body and hand pose detection",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanbodyposerequest/init(_:)",
                "title": "init(DetectHumanBodyPoseRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanbodyposerequest/revision-swift.property",
                "title": "let revision: DetectHumanBodyPoseRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanbodyposerequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectHumanBodyPoseRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecthumanbodyposerequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecthumanbodyposerequest/revision-swift.enum",
                "title": "DetectHumanBodyPoseRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanbodyposerequest/detectshands",
                "title": "var detectsHands: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanbodyposerequest/supportedjointnames",
                "title": "var supportedJointNames: [HumanBodyPoseObservation.JointName]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanbodyposerequest/supportedjointsgroupnames",
                "title": "var supportedJointsGroupNames: [HumanBodyPoseObservation.JointsGroupName]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanbodyposeobservation/init(_:)",
                    "title": "init(VNHumanBodyPoseObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanbodyposeobservation/lefthand",
                    "title": "let leftHand: HumanHandPoseObservation?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/humanbodyposeobservation/righthand",
                    "title": "let rightHand: HumanHandPoseObservation?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/init(_:)",
                        "title": "init(VNHumanHandPoseObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/chirality-swift.property",
                        "title": "let chirality: HumanHandPoseObservation.Chirality?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the handedness",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/chirality-swift.enum/left",
                            "title": "case left",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/chirality-swift.enum/right",
                            "title": "case right",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/humanhandposeobservation/chirality-swift.enum",
                        "title": "HumanHandPoseObservation.Chirality",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/keypoints",
                        "title": "var keypoints: MLMultiArray",
                        "type": "property"
                      },
                      {
                        "title": "Getting the joints",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the group name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/indexfinger",
                            "title": "case indexFinger",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/littlefinger",
                            "title": "case littleFinger",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/middlefinger",
                            "title": "case middleFinger",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/ringfinger",
                            "title": "case ringFinger",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/thumb",
                            "title": "case thumb",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/humanhandposeobservation/jointsgroupname",
                        "title": "HumanHandPoseObservation.JointsGroupName",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the thumb finger joint name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/thumbcmc",
                            "title": "case thumbCMC",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/thumbip",
                            "title": "case thumbIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/thumbmp",
                            "title": "case thumbMP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/thumbtip",
                            "title": "case thumbTip",
                            "type": "case"
                          },
                          {
                            "title": "Getting the index finger joint name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/indexdip",
                            "title": "case indexDIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/indexmcp",
                            "title": "case indexMCP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/indexpip",
                            "title": "case indexPIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/indextip",
                            "title": "case indexTip",
                            "type": "case"
                          },
                          {
                            "title": "Getting the middle finger joint name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/middledip",
                            "title": "case middleDIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/middlemcp",
                            "title": "case middleMCP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/middlepip",
                            "title": "case middlePIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/middletip",
                            "title": "case middleTip",
                            "type": "case"
                          },
                          {
                            "title": "Getting the ring finger joint name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/ringdip",
                            "title": "case ringDIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/ringmcp",
                            "title": "case ringMCP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/ringpip",
                            "title": "case ringPIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/ringtip",
                            "title": "case ringTip",
                            "type": "case"
                          },
                          {
                            "title": "Getting the little finger joint name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/littledip",
                            "title": "case littleDIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/littlemcp",
                            "title": "case littleMCP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/littlepip",
                            "title": "case littlePIP",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/littletip",
                            "title": "case littleTip",
                            "type": "case"
                          },
                          {
                            "title": "Getting the wrist joint name",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/humanhandposeobservation/jointname/wrist",
                            "title": "case wrist",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/humanhandposeobservation/jointname",
                        "title": "HumanHandPoseObservation.JointName",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/vision/humanhandposeobservation",
                    "title": "HumanHandPoseObservation",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/humanbodyposeobservation/keypoints",
                    "title": "var keypoints: MLMultiArray",
                    "type": "property"
                  },
                  {
                    "title": "Getting the joints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the group names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname/face",
                        "title": "case face",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname/leftarm",
                        "title": "case leftArm",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname/leftleg",
                        "title": "case leftLeg",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname/rightarm",
                        "title": "case rightArm",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname/rightleg",
                        "title": "case rightLeg",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname/torso",
                        "title": "case torso",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanbodyposeobservation/jointsgroupname",
                    "title": "HumanBodyPoseObservation.JointsGroupName",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the joint names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/leftankle",
                        "title": "case leftAnkle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/leftear",
                        "title": "case leftEar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/leftelbow",
                        "title": "case leftElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/lefteye",
                        "title": "case leftEye",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/lefthip",
                        "title": "case leftHip",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/leftknee",
                        "title": "case leftKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/leftshoulder",
                        "title": "case leftShoulder",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/leftwrist",
                        "title": "case leftWrist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/neck",
                        "title": "case neck",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/nose",
                        "title": "case nose",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/rightankle",
                        "title": "case rightAnkle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/rightear",
                        "title": "case rightEar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/rightelbow",
                        "title": "case rightElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/righteye",
                        "title": "case rightEye",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/righthip",
                        "title": "case rightHip",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/rightknee",
                        "title": "case rightKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/rightshoulder",
                        "title": "case rightShoulder",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/rightwrist",
                        "title": "case rightWrist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodyposeobservation/jointname/root",
                        "title": "case root",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanbodyposeobservation/jointname",
                    "title": "HumanBodyPoseObservation.JointName",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/humanbodyposeobservation",
                "title": "HumanBodyPoseObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecthumanbodyposerequest",
            "title": "DetectHumanBodyPoseRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanhandposerequest/init(_:)",
                "title": "init(DetectHumanHandPoseRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanhandposerequest/revision-swift.property",
                "title": "let revision: DetectHumanHandPoseRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanhandposerequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectHumanHandPoseRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecthumanhandposerequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecthumanhandposerequest/revision-swift.enum",
                "title": "DetectHumanHandPoseRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanhandposerequest/maximumhandcount",
                "title": "var maximumHandCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanhandposerequest/supportedjointnames",
                "title": "var supportedJointNames: [HumanHandPoseObservation.JointName]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanhandposerequest/supportedjointsgroupnames",
                "title": "var supportedJointsGroupNames: [HumanHandPoseObservation.JointsGroupName]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanhandposeobservation/init(_:)",
                    "title": "init(VNHumanHandPoseObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanhandposeobservation/chirality-swift.property",
                    "title": "let chirality: HumanHandPoseObservation.Chirality?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the handedness",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/chirality-swift.enum/left",
                        "title": "case left",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/chirality-swift.enum/right",
                        "title": "case right",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanhandposeobservation/chirality-swift.enum",
                    "title": "HumanHandPoseObservation.Chirality",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanhandposeobservation/keypoints",
                    "title": "var keypoints: MLMultiArray",
                    "type": "property"
                  },
                  {
                    "title": "Getting the joints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the group name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/indexfinger",
                        "title": "case indexFinger",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/littlefinger",
                        "title": "case littleFinger",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/middlefinger",
                        "title": "case middleFinger",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/ringfinger",
                        "title": "case ringFinger",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointsgroupname/thumb",
                        "title": "case thumb",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanhandposeobservation/jointsgroupname",
                    "title": "HumanHandPoseObservation.JointsGroupName",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the thumb finger joint name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/thumbcmc",
                        "title": "case thumbCMC",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/thumbip",
                        "title": "case thumbIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/thumbmp",
                        "title": "case thumbMP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/thumbtip",
                        "title": "case thumbTip",
                        "type": "case"
                      },
                      {
                        "title": "Getting the index finger joint name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/indexdip",
                        "title": "case indexDIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/indexmcp",
                        "title": "case indexMCP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/indexpip",
                        "title": "case indexPIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/indextip",
                        "title": "case indexTip",
                        "type": "case"
                      },
                      {
                        "title": "Getting the middle finger joint name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/middledip",
                        "title": "case middleDIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/middlemcp",
                        "title": "case middleMCP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/middlepip",
                        "title": "case middlePIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/middletip",
                        "title": "case middleTip",
                        "type": "case"
                      },
                      {
                        "title": "Getting the ring finger joint name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/ringdip",
                        "title": "case ringDIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/ringmcp",
                        "title": "case ringMCP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/ringpip",
                        "title": "case ringPIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/ringtip",
                        "title": "case ringTip",
                        "type": "case"
                      },
                      {
                        "title": "Getting the little finger joint name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/littledip",
                        "title": "case littleDIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/littlemcp",
                        "title": "case littleMCP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/littlepip",
                        "title": "case littlePIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/littletip",
                        "title": "case littleTip",
                        "type": "case"
                      },
                      {
                        "title": "Getting the wrist joint name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanhandposeobservation/jointname/wrist",
                        "title": "case wrist",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanhandposeobservation/jointname",
                    "title": "HumanHandPoseObservation.JointName",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/humanhandposeobservation",
                "title": "HumanHandPoseObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecthumanhandposerequest",
            "title": "DetectHumanHandPoseRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the joints",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/poseproviding/joint(for:)",
                "title": "func joint(for: Self.PoseJointName) -> Joint?",
                "type": "method"
              },
              {
                "path": "/documentation/vision/poseproviding/alljoints(in:)",
                "title": "func allJoints(in: Self.PoseJointsGroupName?) -> [Self.PoseJointName : Joint]",
                "type": "method"
              },
              {
                "title": "Getting the joint names",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/poseproviding/availablejointnames",
                "title": "var availableJointNames: [Self.PoseJointName]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/poseproviding/posejointname",
                "title": "PoseJointName",
                "type": "associatedtype"
              },
              {
                "title": "Getting the joint group names",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/poseproviding/availablejointsgroupnames",
                "title": "var availableJointsGroupNames: [Self.PoseJointsGroupName]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/poseproviding/posejointsgroupname",
                "title": "PoseJointsGroupName",
                "type": "associatedtype"
              }
            ],
            "path": "/documentation/vision/poseproviding",
            "title": "PoseProviding",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Getting the hand sidedness",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/chirality/left",
                "title": "case left",
                "type": "case"
              },
              {
                "path": "/documentation/vision/chirality/right",
                "title": "case right",
                "type": "case"
              }
            ],
            "path": "/documentation/vision/chirality",
            "title": "Chirality",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Inspecting a joint",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/joint/confidence",
                "title": "let confidence: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/joint/jointname",
                "title": "let jointName: String",
                "type": "property"
              },
              {
                "path": "/documentation/vision/joint/location",
                "title": "let location: NormalizedPoint",
                "type": "property"
              },
              {
                "title": "Getting the distance to a joint",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/joint/distance(to:)",
                "title": "func distance(to: Joint) -> CGFloat",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/joint",
            "title": "Joint",
            "type": "struct"
          },
          {
            "title": "3D body pose detection",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanbodypose3drequest/init(_:frameanalysisspacing:)",
                "title": "init(DetectHumanBodyPose3DRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanbodypose3drequest/revision-swift.property",
                "title": "let revision: DetectHumanBodyPose3DRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanbodypose3drequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectHumanBodyPose3DRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecthumanbodypose3drequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecthumanbodypose3drequest/revision-swift.enum",
                "title": "DetectHumanBodyPose3DRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthumanbodypose3drequest/supportedjointnames",
                "title": "var supportedJointNames: [HumanBodyPose3DObservation.JointName]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthumanbodypose3drequest/supportedjointsgroupnames",
                "title": "var supportedJointsGroupNames: [HumanBodyPose3DObservation.JointsGroupName]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/init(_:)",
                    "title": "init(VNHumanBodyPose3DObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/bodyheight",
                    "title": "let bodyHeight: Measurement<UnitLength>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/cameraoriginmatrix",
                    "title": "let cameraOriginMatrix: simd_float4x4",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting estimation techniques",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/estimationtechnique/measured",
                        "title": "case measured",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/estimationtechnique/reference",
                        "title": "case reference",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanbodypose3dobservation/estimationtechnique",
                    "title": "HumanBodyPose3DObservation.EstimationTechnique",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/heightestimationtechnique",
                    "title": "let heightEstimationTechnique: HumanBodyPose3DObservation.EstimationTechnique",
                    "type": "property"
                  },
                  {
                    "title": "Getting the joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/alljoints(in:)",
                    "title": "func allJoints(in: HumanBodyPose3DObservation.JointsGroupName?) -> [HumanBodyPose3DObservation.JointName : Joint3D]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/availablejointsgroupnames",
                    "title": "var availableJointsGroupNames: [HumanBodyPose3DObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the group names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname/head",
                        "title": "case head",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname/leftarm",
                        "title": "case leftArm",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname/leftleg",
                        "title": "case leftLeg",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname/rightarm",
                        "title": "case rightArm",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname/rightleg",
                        "title": "case rightLeg",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname/torso",
                        "title": "case torso",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanbodypose3dobservation/jointsgroupname",
                    "title": "HumanBodyPose3DObservation.JointsGroupName",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/joint(for:)",
                    "title": "func joint(for: HumanBodyPose3DObservation.JointName) -> Joint3D?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/availablejointnames",
                    "title": "var availableJointNames: [HumanBodyPose3DObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the joint names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/centerhead",
                        "title": "case centerHead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/centershoulder",
                        "title": "case centerShoulder",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/leftankle",
                        "title": "case leftAnkle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/leftelbow",
                        "title": "case leftElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/lefthip",
                        "title": "case leftHip",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/leftknee",
                        "title": "case leftKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/leftshoulder",
                        "title": "case leftShoulder",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/leftwrist",
                        "title": "case leftWrist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/rightankle",
                        "title": "case rightAnkle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/rightelbow",
                        "title": "case rightElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/righthip",
                        "title": "case rightHip",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/rightknee",
                        "title": "case rightKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/rightshoulder",
                        "title": "case rightShoulder",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/rightwrist",
                        "title": "case rightWrist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/root",
                        "title": "case root",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/spine",
                        "title": "case spine",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/humanbodypose3dobservation/jointname/tophead",
                        "title": "case topHead",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/humanbodypose3dobservation/jointname",
                    "title": "HumanBodyPose3DObservation.JointName",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the joint name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/parentjointname(for:)",
                    "title": "func parentJointName(for: HumanBodyPose3DObservation.JointName) -> HumanBodyPose3DObservation.JointName",
                    "type": "method"
                  },
                  {
                    "title": "Getting the camera position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/camerarelativeposition(for:)",
                    "title": "func cameraRelativePosition(for: HumanBodyPose3DObservation.JointName) -> simd_float4x4",
                    "type": "method"
                  },
                  {
                    "title": "Getting the joint position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/humanbodypose3dobservation/pointinimage(for:)",
                    "title": "func pointInImage(for: HumanBodyPose3DObservation.JointName) -> NormalizedPoint",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/humanbodypose3dobservation",
                "title": "HumanBodyPose3DObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecthumanbodypose3drequest",
            "title": "DetectHumanBodyPose3DRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a joint",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/joint3d/init(position:localposition:identifer:parentjoint:)",
                "title": "init(position: simd_float4x4, localPosition: simd_float4x4, identifer: String, parentJoint: String)",
                "type": "init"
              },
              {
                "title": "Inspecting a joint",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/joint3d/localposition",
                "title": "let localPosition: simd_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/vision/joint3d/position",
                "title": "let position: simd_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/vision/joint3d/parentjoint",
                "title": "let parentJoint: String",
                "type": "property"
              },
              {
                "path": "/documentation/vision/joint3d/identifier",
                "title": "let identifier: String",
                "type": "property"
              }
            ],
            "path": "/documentation/vision/joint3d",
            "title": "Joint3D",
            "type": "struct"
          },
          {
            "title": "Text detection",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/locating-and-displaying-recognized-text",
            "title": "Locating and displaying recognized text",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecttextrectanglesrequest/init(_:)",
                "title": "init(DetectTextRectanglesRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecttextrectanglesrequest/revision-swift.property",
                "title": "let revision: DetectTextRectanglesRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecttextrectanglesrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectTextRectanglesRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecttextrectanglesrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecttextrectanglesrequest/revision-swift.enum",
                "title": "DetectTextRectanglesRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecttextrectanglesrequest/reportcharacterboxes",
                "title": "var reportCharacterBoxes: Bool",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/textobservation/init(_:)",
                    "title": "init(VNTextObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/textobservation/characterboxes",
                    "title": "let characterBoxes: [RectangleObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/rectangleobservation/init(_:)",
                        "title": "init(VNRectangleObservation)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/vision/rectangleobservation/init(topleft:topright:bottomright:bottomleft:)",
                        "title": "init(topLeft: NormalizedPoint, topRight: NormalizedPoint, bottomRight: NormalizedPoint, bottomLeft: NormalizedPoint)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/vision/rectangleobservation",
                    "title": "RectangleObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/textobservation",
                "title": "TextObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecttextrectanglesrequest",
            "title": "DetectTextRectanglesRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/init(_:)",
                "title": "init(RecognizeTextRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/revision-swift.property",
                "title": "let revision: RecognizeTextRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/supportedrevisions",
                "title": "static let supportedRevisions: [RecognizeTextRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizetextrequest/revision-swift.enum/revision3",
                    "title": "case revision3",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/recognizetextrequest/revision-swift.enum",
                "title": "RecognizeTextRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/automaticallydetectslanguage",
                "title": "var automaticallyDetectsLanguage: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/useslanguagecorrection",
                "title": "var usesLanguageCorrection: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/supportedrecognitionlanguages",
                "title": "var supportedRecognitionLanguages: [Locale.Language]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/customwords",
                "title": "var customWords: [String]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/minimumtextheightfraction",
                "title": "var minimumTextHeightFraction: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/recognitionlanguages",
                "title": "var recognitionLanguages: [Locale.Language]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizetextrequest/recognitionlevel-swift.property",
                "title": "var recognitionLevel: RecognizeTextRequest.RecognitionLevel",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the recognition levels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizetextrequest/recognitionlevel-swift.enum/accurate",
                    "title": "case accurate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/recognizetextrequest/recognitionlevel-swift.enum/fast",
                    "title": "case fast",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/recognizetextrequest/recognitionlevel-swift.enum",
                "title": "RecognizeTextRequest.RecognitionLevel",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizedtextobservation/init(_:)",
                    "title": "init(VNRecognizedTextObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the recognized text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizedtextobservation/topcandidates(_:)",
                    "title": "func topCandidates(Int) -> [RecognizedText]",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the bounding box",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/recognizedtext/boundingbox(for:)",
                        "title": "func boundingBox(for: Range<String.Index>) -> RectangleObservation?",
                        "type": "method"
                      },
                      {
                        "title": "Inspecting the recognized text",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/recognizedtext/string",
                        "title": "var string: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/recognizedtext/confidence",
                        "title": "var confidence: Float",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/recognizedtext",
                    "title": "RecognizedText",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/recognizedtextobservation",
                "title": "RecognizedTextObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/recognizetextrequest",
            "title": "RecognizeTextRequest",
            "type": "struct"
          },
          {
            "title": "Barcode detection",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectbarcodesrequest/init(_:)",
                "title": "init(DetectBarcodesRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectbarcodesrequest/revision-swift.property",
                "title": "let revision: DetectBarcodesRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectbarcodesrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectBarcodesRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectbarcodesrequest/revision-swift.enum/revision4",
                    "title": "case revision4",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectbarcodesrequest/revision-swift.enum",
                "title": "DetectBarcodesRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectbarcodesrequest/symbologies",
                "title": "var symbologies: [BarcodeSymbology]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectbarcodesrequest/supportedsymbologies",
                "title": "var supportedSymbologies: [BarcodeSymbology]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the symbologies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/aztec",
                    "title": "case aztec",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/codabar",
                    "title": "case codabar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code128",
                    "title": "case code128",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code39",
                    "title": "case code39",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code39checksum",
                    "title": "case code39Checksum",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code39fullascii",
                    "title": "case code39FullASCII",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code39fullasciichecksum",
                    "title": "case code39FullASCIIChecksum",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code93",
                    "title": "case code93",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/code93i",
                    "title": "case code93i",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/datamatrix",
                    "title": "case dataMatrix",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/ean13",
                    "title": "case ean13",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/ean8",
                    "title": "case ean8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/gs1databar",
                    "title": "case gs1DataBar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/gs1databarexpanded",
                    "title": "case gs1DataBarExpanded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/gs1databarlimited",
                    "title": "case gs1DataBarLimited",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/i2of5",
                    "title": "case i2of5",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/i2of5checksum",
                    "title": "case i2of5Checksum",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/itf14",
                    "title": "case itf14",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/micropdf417",
                    "title": "case microPDF417",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/microqr",
                    "title": "case microQR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/msiplessey",
                    "title": "case msiPlessey",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/pdf417",
                    "title": "case pdf417",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/qr",
                    "title": "case qr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/barcodesymbology/upce",
                    "title": "case upce",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/barcodesymbology",
                "title": "BarcodeSymbology",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/detectbarcodesrequest/coalescescompositesymbologies",
                "title": "var coalescesCompositeSymbologies: Bool",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/init(_:)",
                    "title": "init(VNBarcodeObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/iscolorinverted",
                    "title": "let isColorInverted: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/isgs1datacarrier",
                    "title": "let isGS1DataCarrier: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting the payload",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/payloaddata",
                    "title": "let payloadData: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/payloadstring",
                    "title": "let payloadString: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/supplementalpayloaddata",
                    "title": "let supplementalPayloadData: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/supplementalpayloadstring",
                    "title": "let supplementalPayloadString: String?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the symbology",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/symbology",
                    "title": "let symbology: BarcodeSymbology",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the symbologies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/aztec",
                        "title": "case aztec",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/codabar",
                        "title": "case codabar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code128",
                        "title": "case code128",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code39",
                        "title": "case code39",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code39checksum",
                        "title": "case code39Checksum",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code39fullascii",
                        "title": "case code39FullASCII",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code39fullasciichecksum",
                        "title": "case code39FullASCIIChecksum",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code93",
                        "title": "case code93",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/code93i",
                        "title": "case code93i",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/datamatrix",
                        "title": "case dataMatrix",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/ean13",
                        "title": "case ean13",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/ean8",
                        "title": "case ean8",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/gs1databar",
                        "title": "case gs1DataBar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/gs1databarexpanded",
                        "title": "case gs1DataBarExpanded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/gs1databarlimited",
                        "title": "case gs1DataBarLimited",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/i2of5",
                        "title": "case i2of5",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/i2of5checksum",
                        "title": "case i2of5Checksum",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/itf14",
                        "title": "case itf14",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/micropdf417",
                        "title": "case microPDF417",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/microqr",
                        "title": "case microQR",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/msiplessey",
                        "title": "case msiPlessey",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/pdf417",
                        "title": "case pdf417",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/qr",
                        "title": "case qr",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodesymbology/upce",
                        "title": "case upce",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/barcodesymbology",
                    "title": "BarcodeSymbology",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the composite type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/barcodeobservation/supplementalcompositetype",
                    "title": "let supplementalCompositeType: BarcodeObservation.CompositeType?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the composite types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/barcodeobservation/compositetype/gs1typea",
                        "title": "case gs1TypeA",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodeobservation/compositetype/gs1typeb",
                        "title": "case gs1TypeB",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodeobservation/compositetype/gs1typec",
                        "title": "case gs1TypeC",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/barcodeobservation/compositetype/linked",
                        "title": "case linked",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/barcodeobservation/compositetype",
                    "title": "BarcodeObservation.CompositeType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/barcodeobservation",
                "title": "BarcodeObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectbarcodesrequest",
            "title": "DetectBarcodesRequest",
            "type": "struct"
          },
          {
            "title": "Trajectory, contour, and horizon detection",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/init(trajectorylength:_:frameanalysisspacing:)",
                "title": "init(trajectoryLength: Int, DetectTrajectoriesRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/revision-swift.property",
                "title": "let revision: DetectTrajectoriesRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectTrajectoriesRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecttrajectoriesrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecttrajectoriesrequest/revision-swift.enum",
                "title": "DetectTrajectoriesRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/objectmaximumnormalizedradius",
                "title": "var objectMaximumNormalizedRadius: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/objectminimumnormalizedradius",
                "title": "var objectMinimumNormalizedRadius: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/targetframetime",
                "title": "var targetFrameTime: CMTime",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecttrajectoriesrequest/trajectorylength",
                "title": "let trajectoryLength: Int",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trajectoryobservation/init(_:)",
                    "title": "init(VNTrajectoryObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trajectoryobservation/detectedpoints",
                    "title": "let detectedPoints: [NormalizedPoint]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/trajectoryobservation/projectedpoints",
                    "title": "let projectedPoints: [NormalizedPoint]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/trajectoryobservation/equationcoefficients",
                    "title": "let equationCoefficients: simd_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/trajectoryobservation/movingaverageradius",
                    "title": "let movingAverageRadius: CGFloat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/trajectoryobservation",
                "title": "TrajectoryObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecttrajectoriesrequest",
            "title": "DetectTrajectoriesRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/init(_:)",
                "title": "init(DetectContoursRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/revision-swift.property",
                "title": "let revision: DetectContoursRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectContoursRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectcontoursrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectcontoursrequest/revision-swift.enum",
                "title": "DetectContoursRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/contrastadjustment",
                "title": "var contrastAdjustment: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/contrastpivot",
                "title": "var contrastPivot: Float?",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/detectsdarkonlight",
                "title": "var detectsDarkOnLight: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectcontoursrequest/maximumimagedimension",
                "title": "var maximumImageDimension: Int",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/contoursobservation/init(_:)",
                    "title": "init(VNContoursObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/contoursobservation/contourcount",
                    "title": "var contourCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/contoursobservation/normalizedpath",
                    "title": "var normalizedPath: CGPath",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/contoursobservation/toplevelcontours",
                    "title": "var topLevelContours: [ContoursObservation.Contour]",
                    "type": "property"
                  },
                  {
                    "title": "Getting the contours",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting a contour",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/aspectratio",
                        "title": "var aspectRatio: Float",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/childcontours",
                        "title": "var childContours: [ContoursObservation.Contour]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/indexpath",
                        "title": "var indexPath: IndexPath",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/normalizedpath",
                        "title": "var normalizedPath: CGPath",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/normalizedpoints",
                        "title": "var normalizedPoints: [simd_float2]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/pointcount",
                        "title": "var pointCount: Int",
                        "type": "property"
                      },
                      {
                        "title": "Calculating area and perimeter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/calculatearea(useorientedarea:)",
                        "title": "func calculateArea(useOrientedArea: Bool) -> Double",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/calculateperimeter()",
                        "title": "func calculatePerimeter() -> Double",
                        "type": "method"
                      },
                      {
                        "title": "Getting the bounding circle",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/boundingcircle()",
                        "title": "func boundingCircle() -> NormalizedCircle",
                        "type": "method"
                      },
                      {
                        "title": "Getting the approximation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/contoursobservation/contour/polygonapproximation(epsilon:)",
                        "title": "func polygonApproximation(epsilon: Float) throws -> ContoursObservation.Contour",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/contoursobservation/contour",
                    "title": "ContoursObservation.Contour",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/contoursobservation/contouratindex(_:)",
                    "title": "func contourAtIndex(Int) -> ContoursObservation.Contour?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/contoursobservation/countouratindexpath(_:)",
                    "title": "func countourAtIndexPath(IndexPath) -> ContoursObservation.Contour?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/contoursobservation",
                "title": "ContoursObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectcontoursrequest",
            "title": "DetectContoursRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthorizonrequest/init(_:)",
                "title": "init(DetectHorizonRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecthorizonrequest/revision-swift.property",
                "title": "let revision: DetectHorizonRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detecthorizonrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectHorizonRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detecthorizonrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detecthorizonrequest/revision-swift.enum",
                "title": "DetectHorizonRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/horizonobservation/init(_:)",
                    "title": "init(VNHorizonObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/horizonobservation/angle",
                    "title": "let angle: Measurement<UnitAngle>",
                    "type": "property"
                  },
                  {
                    "title": "Getting the transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/horizonobservation/transform",
                    "title": "let transform: CGAffineTransform",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/horizonobservation/transform(for:)",
                    "title": "func transform(for: CGSize) -> CGAffineTransform",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/horizonobservation",
                "title": "HorizonObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detecthorizonrequest",
            "title": "DetectHorizonRequest",
            "type": "struct"
          },
          {
            "title": "Animal detection",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectanimalbodyposerequest/init(_:)",
                "title": "init(DetectAnimalBodyPoseRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectanimalbodyposerequest/revision-swift.property",
                "title": "let revision: DetectAnimalBodyPoseRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectanimalbodyposerequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectAnimalBodyPoseRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectanimalbodyposerequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectanimalbodyposerequest/revision-swift.enum",
                "title": "DetectAnimalBodyPoseRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectanimalbodyposerequest/supportedjointnames",
                "title": "var supportedJointNames: [AnimalBodyPoseObservation.JointName]",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectanimalbodyposerequest/supportedjointsgroupnames",
                "title": "var supportedJointsGroupNames: [AnimalBodyPoseObservation.JointsGroupName]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/animalbodyposeobservation/init(_:)",
                    "title": "init(VNAnimalBodyPoseObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the joints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the group names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointsgroupname/forelegs",
                        "title": "case forelegs",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointsgroupname/head",
                        "title": "case head",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointsgroupname/hindlegs",
                        "title": "case hindlegs",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointsgroupname/tail",
                        "title": "case tail",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointsgroupname/trunk",
                        "title": "case trunk",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/animalbodyposeobservation/jointsgroupname",
                    "title": "AnimalBodyPoseObservation.JointsGroupName",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the joint names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftbackelbow",
                        "title": "case leftBackElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftbackknee",
                        "title": "case leftBackKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftbackpaw",
                        "title": "case leftBackPaw",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftearbottom",
                        "title": "case leftEarBottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftearmiddle",
                        "title": "case leftEarMiddle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/lefteartop",
                        "title": "case leftEarTop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/lefteye",
                        "title": "case leftEye",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftfrontelbow",
                        "title": "case leftFrontElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftfrontknee",
                        "title": "case leftFrontKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/leftfrontpaw",
                        "title": "case leftFrontPaw",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/neck",
                        "title": "case neck",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/nose",
                        "title": "case nose",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightbackelbow",
                        "title": "case rightBackElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightbackknee",
                        "title": "case rightBackKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightbackpaw",
                        "title": "case rightBackPaw",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightearbottom",
                        "title": "case rightEarBottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightearmiddle",
                        "title": "case rightEarMiddle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/righteartop",
                        "title": "case rightEarTop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/righteye",
                        "title": "case rightEye",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightfrontelbow",
                        "title": "case rightFrontElbow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightfrontknee",
                        "title": "case rightFrontKnee",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/rightfrontpaw",
                        "title": "case rightFrontPaw",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/tailbottom",
                        "title": "case tailBottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/tailmiddle",
                        "title": "case tailMiddle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/animalbodyposeobservation/jointname/tailtop",
                        "title": "case tailTop",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/animalbodyposeobservation/jointname",
                    "title": "AnimalBodyPoseObservation.JointName",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/animalbodyposeobservation",
                "title": "AnimalBodyPoseObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectanimalbodyposerequest",
            "title": "DetectAnimalBodyPoseRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizeanimalsrequest/init(_:)",
                "title": "init(RecognizeAnimalsRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizeanimalsrequest/revision-swift.property",
                "title": "let revision: RecognizeAnimalsRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/recognizeanimalsrequest/supportedrevisions",
                "title": "static let supportedRevisions: [RecognizeAnimalsRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizeanimalsrequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/recognizeanimalsrequest/revision-swift.enum",
                "title": "RecognizeAnimalsRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizeanimalsrequest/supportedanimals",
                "title": "var supportedAnimals: [RecognizeAnimalsRequest.Animal]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the animals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizeanimalsrequest/animal/cat",
                    "title": "case cat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/recognizeanimalsrequest/animal/dog",
                    "title": "case dog",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/recognizeanimalsrequest/animal",
                "title": "RecognizeAnimalsRequest.Animal",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/recognizedobjectobservation/init(_:)",
                    "title": "init(VNRecognizedObjectObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/recognizedobjectobservation/labels",
                    "title": "let labels: [ClassificationObservation]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/classificationobservation/init(_:)",
                        "title": "init(VNClassificationObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/classificationobservation/hasprecisionrecallcurve",
                        "title": "var hasPrecisionRecallCurve: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/classificationobservation/identifier",
                        "title": "let identifier: String",
                        "type": "property"
                      },
                      {
                        "title": "Determining precision and recall",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/classificationobservation/hasminimumprecision(_:forrecall:)",
                        "title": "func hasMinimumPrecision(Float, forRecall: Float) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/classificationobservation/hasminimumrecall(_:forprecision:)",
                        "title": "func hasMinimumRecall(Float, forPrecision: Float) -> Bool",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/classificationobservation",
                    "title": "ClassificationObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/recognizedobjectobservation",
                "title": "RecognizedObjectObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/recognizeanimalsrequest",
            "title": "RecognizeAnimalsRequest",
            "type": "struct"
          },
          {
            "title": "Optical flow and rectangle detection",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackopticalflowrequest/init(_:frameanalysisspacing:)",
                "title": "init(TrackOpticalFlowRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackopticalflowrequest/revision-swift.property",
                "title": "let revision: TrackOpticalFlowRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/trackopticalflowrequest/supportedrevisions",
                "title": "static let supportedRevisions: [TrackOpticalFlowRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trackopticalflowrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/trackopticalflowrequest/revision-swift.enum",
                "title": "TrackOpticalFlowRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackopticalflowrequest/computationaccuracy-swift.property",
                "title": "var computationAccuracy: TrackOpticalFlowRequest.ComputationAccuracy",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the accuracies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trackopticalflowrequest/computationaccuracy-swift.enum/high",
                    "title": "case high",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/trackopticalflowrequest/computationaccuracy-swift.enum/low",
                    "title": "case low",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/trackopticalflowrequest/computationaccuracy-swift.enum/medium",
                    "title": "case medium",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/trackopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                    "title": "case veryHigh",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/trackopticalflowrequest/computationaccuracy-swift.enum",
                "title": "TrackOpticalFlowRequest.ComputationAccuracy",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/trackopticalflowrequest/outputpixelformattype",
                "title": "var outputPixelFormatType: OSType",
                "type": "property"
              },
              {
                "path": "/documentation/vision/trackopticalflowrequest/supportedoutputpixelformattypes",
                "title": "var supportedOutputPixelFormatTypes: [OSType]",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/opticalflowobservation/init(_:)",
                    "title": "init?(VNPixelBufferObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/opticalflowobservation/pixelformat",
                    "title": "var pixelFormat: OSType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/opticalflowobservation/size",
                    "title": "var size: CGSize",
                    "type": "property"
                  },
                  {
                    "title": "Getting the optical flow",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/opticalflowobservation/flow(at:)",
                    "title": "func flow(at: NormalizedPoint) -> (Float, Float)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the memory",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/opticalflowobservation/withunsafepointer(_:)",
                    "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/opticalflowobservation",
                "title": "OpticalFlowObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/trackopticalflowrequest",
            "title": "TrackOpticalFlowRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/init(_:)",
                "title": "init(DetectRectanglesRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/revision-swift.property",
                "title": "let revision: DetectRectanglesRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/supportedrevisions",
                "title": "static let supportedRevisions: [DetectRectanglesRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/detectrectanglesrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/detectrectanglesrequest/revision-swift.enum",
                "title": "DetectRectanglesRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/maximumaspectratio",
                "title": "var maximumAspectRatio: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/maximumobservations",
                "title": "var maximumObservations: Int",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/minimumaspectratio",
                "title": "var minimumAspectRatio: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/minimumconfidence",
                "title": "var minimumConfidence: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/minimumsize",
                "title": "var minimumSize: Float",
                "type": "property"
              },
              {
                "path": "/documentation/vision/detectrectanglesrequest/quadraturetolerancedegrees",
                "title": "var quadratureToleranceDegrees: Float",
                "type": "property"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/rectangleobservation/init(_:)",
                    "title": "init(VNRectangleObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/rectangleobservation/init(topleft:topright:bottomright:bottomleft:)",
                    "title": "init(topLeft: NormalizedPoint, topRight: NormalizedPoint, bottomRight: NormalizedPoint, bottomLeft: NormalizedPoint)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/rectangleobservation",
                "title": "RectangleObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/detectrectanglesrequest",
            "title": "DetectRectanglesRequest",
            "type": "struct"
          },
          {
            "title": "Image alignment",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/tracktranslationalimageregistrationrequest/init(_:frameanalysisspacing:)",
                "title": "init(TrackTranslationalImageRegistrationRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/tracktranslationalimageregistrationrequest/revision-swift.property",
                "title": "let revision: TrackTranslationalImageRegistrationRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/tracktranslationalimageregistrationrequest/supportedrevisions",
                "title": "static let supportedRevisions: [TrackTranslationalImageRegistrationRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/tracktranslationalimageregistrationrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/tracktranslationalimageregistrationrequest/revision-swift.enum",
                "title": "TrackTranslationalImageRegistrationRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the compute stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/computestage/main",
                    "title": "case main",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/computestage/postprocessing",
                    "title": "case postProcessing",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/computestage",
                "title": "ComputeStage",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagetranslationalignmentobservation/init(_:)",
                    "title": "init(VNImageTranslationAlignmentObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagetranslationalignmentobservation/alignmenttransform",
                    "title": "let alignmentTransform: CGAffineTransform",
                    "type": "property"
                  },
                  {
                    "title": "Applying a transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagetranslationalignmentobservation/applytransform(to:)",
                    "title": "func applyTransform(to: CIImage) -> CIImage",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/imagetranslationalignmentobservation",
                "title": "ImageTranslationAlignmentObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/tracktranslationalimageregistrationrequest",
            "title": "TrackTranslationalImageRegistrationRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackhomographicimageregistrationrequest/init(_:frameanalysisspacing:)",
                "title": "init(TrackHomographicImageRegistrationRequest.Revision?, frameAnalysisSpacing: CMTime?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/trackhomographicimageregistrationrequest/revision-swift.property",
                "title": "let revision: TrackHomographicImageRegistrationRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/trackhomographicimageregistrationrequest/supportedrevisions",
                "title": "static let supportedRevisions: [TrackHomographicImageRegistrationRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/trackhomographicimageregistrationrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/trackhomographicimageregistrationrequest/revision-swift.enum",
                "title": "TrackHomographicImageRegistrationRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagehomographicalignmentobservation/init(_:)",
                    "title": "init(VNImageHomographicAlignmentObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagehomographicalignmentobservation/warptransform",
                    "title": "let warpTransform: matrix_float3x3",
                    "type": "property"
                  },
                  {
                    "title": "Applying a transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagehomographicalignmentobservation/applytransform(to:)",
                    "title": "func applyTransform(to: CIImage) -> CIImage",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/imagehomographicalignmentobservation",
                "title": "ImageHomographicAlignmentObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/trackhomographicimageregistrationrequest",
            "title": "TrackHomographicImageRegistrationRequest",
            "type": "class"
          },
          {
            "path": "/documentation/vision/targetedrequest",
            "title": "TargetedRequest",
            "type": "protocol"
          },
          {
            "title": "Image feature print and background removal",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateimagefeatureprintrequest/init(_:)",
                "title": "init(GenerateImageFeaturePrintRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateimagefeatureprintrequest/revision-swift.property",
                "title": "let revision: GenerateImageFeaturePrintRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generateimagefeatureprintrequest/supportedrevisions",
                "title": "static let supportedRevisions: [GenerateImageFeaturePrintRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generateimagefeatureprintrequest/revision-swift.enum/revision2",
                    "title": "case revision2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generateimagefeatureprintrequest/revision-swift.enum",
                "title": "GenerateImageFeaturePrintRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateimagefeatureprintrequest/cropandscaleaction",
                "title": "var cropAndScaleAction: ImageCropAndScaleAction",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/centercrop",
                    "title": "case centerCrop",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofit",
                    "title": "case scaleToFit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofill",
                    "title": "case scaleToFill",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofitplus90ccwrotation",
                    "title": "case scaleToFitPlus90CCWRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofillplus90ccwrotation",
                    "title": "case scaleToFillPlus90CCWRotation",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/imagecropandscaleaction",
                "title": "ImageCropAndScaleAction",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/featureprintobservation/init(_:)",
                    "title": "init(VNFeaturePrintObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/featureprintobservation/data",
                    "title": "let data: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/featureprintobservation/elementcount",
                    "title": "let elementCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/featureprintobservation/elementtype",
                    "title": "let elementType: ElementType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the element types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/elementtype/double",
                        "title": "case double",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/elementtype/float",
                        "title": "case float",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/elementtype",
                    "title": "ElementType",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the distance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/featureprintobservation/distance(to:)",
                    "title": "func distance(to: FeaturePrintObservation) throws -> Double",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/featureprintobservation",
                "title": "FeaturePrintObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/generateimagefeatureprintrequest",
            "title": "GenerateImageFeaturePrintRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateforegroundinstancemaskrequest/init(_:)",
                "title": "init(GenerateForegroundInstanceMaskRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/generateforegroundinstancemaskrequest/revision-swift.property",
                "title": "let revision: GenerateForegroundInstanceMaskRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/generateforegroundinstancemaskrequest/supportedrevisions",
                "title": "static let supportedRevisions: [GenerateForegroundInstanceMaskRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/generateforegroundinstancemaskrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/generateforegroundinstancemaskrequest/revision-swift.enum",
                "title": "GenerateForegroundInstanceMaskRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/init(_:)",
                    "title": "init?(VNInstanceMaskObservation)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting an observation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the still-image descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                        "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image sequence descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                        "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                        "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                        "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image aesthetics descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                        "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the saliency descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                        "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                        "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the object-tracking descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                        "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                        "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the face and body detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                        "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                        "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                        "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                        "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the body and hand pose detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                        "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                        "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                        "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the animal detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                        "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                        "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the text descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                        "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                        "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the image alignment, feature print, and background removal descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                        "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                        "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                        "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                        "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the trajectory, contour, and horizon detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                        "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                        "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                        "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                        "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                        "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                        "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the machine learning image-analysis descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                        "title": "case coreMLRequest(CoreMLRequest.Revision)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/vision/requestdescriptor",
                    "title": "RequestDescriptor",
                    "type": "enum"
                  },
                  {
                    "title": "Generating a mask",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/generatemask(for:)",
                    "title": "func generateMask(for: IndexSet) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/generatemaskedimage(for:imagefrom:croppedtoinstancesextent:)",
                    "title": "func generateMaskedImage(for: IndexSet, imageFrom: ImageRequestHandler, croppedToInstancesExtent: Bool) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/generatescaledmask(for:scaledtoimagefrom:)",
                    "title": "func generateScaledMask(for: IndexSet, scaledToImageFrom: ImageRequestHandler) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "title": "Getting instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/instanceatpoint(_:)",
                    "title": "func instanceAtPoint(NormalizedPoint) -> IndexSet",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/allinstances",
                    "title": "let allInstances: IndexSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/instancemaskobservation/allinstancesmask",
                    "title": "let allInstancesMask: PixelBufferObservation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                        "title": "init?(VNPixelBufferObservation)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting an observation",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the still-image descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                            "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image sequence descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                            "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                            "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                            "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image aesthetics descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                            "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the saliency descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                            "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                            "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the object-tracking descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                            "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                            "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the face and body detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                            "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                            "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                            "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                            "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the body and hand pose detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                            "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                            "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                            "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the animal detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                            "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                            "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the text descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                            "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                            "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the image alignment, feature print, and background removal descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                            "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                            "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                            "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                            "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the trajectory, contour, and horizon detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                            "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                            "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                            "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                            "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                            "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                            "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the machine learning image-analysis descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                            "title": "case coreMLRequest(CoreMLRequest.Revision)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/vision/requestdescriptor",
                        "title": "RequestDescriptor",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/cgimage",
                        "title": "var cgImage: CGImage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                        "title": "var pixelFormat: OSType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/size",
                        "title": "var size: CGSize",
                        "type": "property"
                      },
                      {
                        "title": "Getting pixel data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                        "title": "func pixel(at: NormalizedPoint) -> Float",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                        "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/pixelbufferobservation",
                    "title": "PixelBufferObservation",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/instancemaskobservation",
                "title": "InstanceMaskObservation",
                "type": "struct"
              }
            ],
            "path": "/documentation/vision/generateforegroundinstancemaskrequest",
            "title": "GenerateForegroundInstanceMaskRequest",
            "type": "struct"
          },
          {
            "title": "Machine learning image analysis",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/coremlrequest/init(model:_:)",
                "title": "init(model: CoreMLModelContainer, CoreMLRequest.Revision?)",
                "type": "init"
              },
              {
                "title": "Getting the revision",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/coremlrequest/revision-swift.property",
                "title": "let revision: CoreMLRequest.Revision",
                "type": "property"
              },
              {
                "path": "/documentation/vision/coremlrequest/supportedrevisions",
                "title": "static let supportedRevisions: [CoreMLRequest.Revision]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/coremlrequest/revision-swift.enum/revision1",
                    "title": "case revision1",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/coremlrequest/revision-swift.enum",
                "title": "CoreMLRequest.Revision",
                "type": "enum"
              },
              {
                "title": "Inspecting a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/coremlrequest/supportedidentifiers",
                "title": "var supportedIdentifiers: [String]?",
                "type": "property"
              },
              {
                "path": "/documentation/vision/coremlrequest/modelcontainer",
                "title": "let modelContainer: CoreMLModelContainer",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating a model container",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/coremlmodelcontainer/init(model:featureprovider:)",
                    "title": "init(model: MLModel, featureProvider: (any MLFeatureProvider)?) throws",
                    "type": "init"
                  },
                  {
                    "title": "Getting the feature name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/coremlmodelcontainer/inputimagefeaturename",
                    "title": "var inputImageFeatureName: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/coremlmodelcontainer",
                "title": "CoreMLModelContainer",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the compute stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/computestage/main",
                    "title": "case main",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/computestage/postprocessing",
                    "title": "case postProcessing",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/computestage",
                "title": "ComputeStage",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/coremlrequest/cropandscaleaction",
                "title": "var cropAndScaleAction: ImageCropAndScaleAction",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/centercrop",
                    "title": "case centerCrop",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofit",
                    "title": "case scaleToFit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofill",
                    "title": "case scaleToFill",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofitplus90ccwrotation",
                    "title": "case scaleToFitPlus90CCWRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/imagecropandscaleaction/scaletofillplus90ccwrotation",
                    "title": "case scaleToFillPlus90CCWRotation",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/imagecropandscaleaction",
                "title": "ImageCropAndScaleAction",
                "type": "enum"
              },
              {
                "title": "Performing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-80bya",
                "title": "func perform(on: URL, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3f3f1",
                "title": "func perform(on: Data, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-qxxx",
                "title": "func perform(on: CGImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-xspx",
                "title": "func perform(on: CVPixelBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-3hddl",
                "title": "func perform(on: CMSampleBuffer, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imageprocessingrequest/perform(on:orientation:)-85ex1",
                "title": "func perform(on: CIImage, orientation: CGImagePropertyOrientation?) async throws -> Self.Result",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/coremlrequest",
            "title": "CoreMLRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating an observation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/coremlfeaturevalueobservation/init(_:)",
                "title": "init?(VNCoreMLFeatureValueObservation)",
                "type": "init"
              },
              {
                "title": "Inspecting an observation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the still-image descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                    "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image sequence descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                    "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                    "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                    "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image aesthetics descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                    "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the saliency descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                    "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                    "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the object-tracking descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                    "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                    "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the face and body detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                    "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                    "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                    "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                    "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the body and hand pose detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                    "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                    "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                    "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the animal detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                    "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                    "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the text descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                    "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                    "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image alignment, feature print, and background removal descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                    "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                    "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                    "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                    "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the trajectory, contour, and horizon detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                    "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                    "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                    "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                    "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                    "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                    "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the machine learning image-analysis descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                    "title": "case coreMLRequest(CoreMLRequest.Revision)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/requestdescriptor",
                "title": "RequestDescriptor",
                "type": "enum"
              },
              {
                "title": "Getting the feature name and value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/coremlfeaturevalueobservation/featurename",
                "title": "let featureName: String",
                "type": "property"
              },
              {
                "path": "/documentation/vision/coremlfeaturevalueobservation/featurevalue",
                "title": "let featureValue: MLSendableFeatureValue",
                "type": "property"
              }
            ],
            "path": "/documentation/vision/coremlfeaturevalueobservation",
            "title": "CoreMLFeatureValueObservation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating an observation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/classificationobservation/init(_:)",
                "title": "init(VNClassificationObservation)",
                "type": "init"
              },
              {
                "title": "Inspecting an observation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the still-image descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                    "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image sequence descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                    "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                    "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                    "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image aesthetics descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                    "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the saliency descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                    "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                    "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the object-tracking descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                    "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                    "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the face and body detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                    "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                    "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                    "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                    "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the body and hand pose detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                    "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                    "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                    "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the animal detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                    "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                    "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the text descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                    "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                    "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image alignment, feature print, and background removal descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                    "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                    "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                    "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                    "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the trajectory, contour, and horizon detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                    "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                    "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                    "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                    "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                    "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                    "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the machine learning image-analysis descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                    "title": "case coreMLRequest(CoreMLRequest.Revision)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/requestdescriptor",
                "title": "RequestDescriptor",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/classificationobservation/hasprecisionrecallcurve",
                "title": "var hasPrecisionRecallCurve: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/vision/classificationobservation/identifier",
                "title": "let identifier: String",
                "type": "property"
              },
              {
                "title": "Determining precision and recall",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/classificationobservation/hasminimumprecision(_:forrecall:)",
                "title": "func hasMinimumPrecision(Float, forRecall: Float) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/vision/classificationobservation/hasminimumrecall(_:forprecision:)",
                "title": "func hasMinimumRecall(Float, forPrecision: Float) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/classificationobservation",
            "title": "ClassificationObservation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating an observation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/pixelbufferobservation/init(_:)",
                "title": "init?(VNPixelBufferObservation)",
                "type": "init"
              },
              {
                "title": "Inspecting an observation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the still-image descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/classifyimagerequest(_:)",
                    "title": "case classifyImageRequest(ClassifyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image sequence descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectdocumentsegmentationrequest(_:)",
                    "title": "case detectDocumentSegmentationRequest(DetectDocumentSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersoninstancemaskrequest(_:)",
                    "title": "case generatePersonInstanceMaskRequest(GeneratePersonInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generatepersonsegmentationrequest(_:)",
                    "title": "case generatePersonSegmentationRequest(GeneratePersonSegmentationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image aesthetics descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/calculateimageaestheticsscoresrequest(_:)",
                    "title": "case calculateImageAestheticsScoresRequest(CalculateImageAestheticsScoresRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the saliency descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateattentionbasedsaliencyimagerequest(_:)",
                    "title": "case generateAttentionBasedSaliencyImageRequest(GenerateAttentionBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateobjectnessbasedsaliencyimagerequest(_:)",
                    "title": "case generateObjectnessBasedSaliencyImageRequest(GenerateObjectnessBasedSaliencyImageRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the object-tracking descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackobjectrequest(_:)",
                    "title": "case trackObjectRequest(TrackObjectRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackrectanglerequest(_:)",
                    "title": "case trackRectangleRequest(TrackRectangleRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the face and body detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacecapturequalityrequest(_:)",
                    "title": "case detectFaceCaptureQualityRequest(DetectFaceCaptureQualityRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacelandmarksrequest(_:)",
                    "title": "case detectFaceLandmarksRequest(DetectFaceLandmarksRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectfacerectanglesrequest(_:)",
                    "title": "case detectFaceRectanglesRequest(DetectFaceRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanrectanglesrequest(_:)",
                    "title": "case detectHumanRectanglesRequest(DetectHumanRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the body and hand pose detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodyposerequest(_:)",
                    "title": "case detectHumanBodyPoseRequest(DetectHumanBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanhandposerequest(_:)",
                    "title": "case detectHumanHandPoseRequest(DetectHumanHandPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthumanbodypose3drequest(_:)",
                    "title": "case detectHumanBodyPose3DRequest(DetectHumanBodyPose3DRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the animal detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectanimalbodyposerequest(_:)",
                    "title": "case detectAnimalBodyPoseRequest(DetectAnimalBodyPoseRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizeanimalsrequest(_:)",
                    "title": "case recognizeAnimalsRequest(RecognizeAnimalsRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the text descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttextrectanglesrequest(_:)",
                    "title": "case detectTextRectanglesRequest(DetectTextRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/recognizetextrequest(_:)",
                    "title": "case recognizeTextRequest(RecognizeTextRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the image alignment, feature print, and background removal descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/tracktranslationalimageregistrationrequest(_:)",
                    "title": "case trackTranslationalImageRegistrationRequest(TrackTranslationalImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackhomographicimageregistrationrequest(_:)",
                    "title": "case trackHomographicImageRegistrationRequest(TrackHomographicImageRegistrationRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateforegroundinstancemaskrequest(_:)",
                    "title": "case generateForegroundInstanceMaskRequest(GenerateForegroundInstanceMaskRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/generateimagefeatureprintrequest(_:)",
                    "title": "case generateImageFeaturePrintRequest(GenerateImageFeaturePrintRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the trajectory, contour, and horizon detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecttrajectoriesrequest(_:)",
                    "title": "case detectTrajectoriesRequest(DetectTrajectoriesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectcontoursrequest(_:)",
                    "title": "case detectContoursRequest(DetectContoursRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detecthorizonrequest(_:)",
                    "title": "case detectHorizonRequest(DetectHorizonRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the optical flow, rectangle and barcode detection descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/trackopticalflowrequest(_:)",
                    "title": "case trackOpticalFlowRequest(TrackOpticalFlowRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectrectanglesrequest(_:)",
                    "title": "case detectRectanglesRequest(DetectRectanglesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/detectbarcodesrequest(_:)",
                    "title": "case detectBarcodesRequest(DetectBarcodesRequest.Revision)",
                    "type": "case"
                  },
                  {
                    "title": "Getting the machine learning image-analysis descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/requestdescriptor/coremlrequest(_:)",
                    "title": "case coreMLRequest(CoreMLRequest.Revision)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/requestdescriptor",
                "title": "RequestDescriptor",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/pixelbufferobservation/cgimage",
                "title": "var cgImage: CGImage",
                "type": "property"
              },
              {
                "path": "/documentation/vision/pixelbufferobservation/pixelformat",
                "title": "var pixelFormat: OSType",
                "type": "property"
              },
              {
                "path": "/documentation/vision/pixelbufferobservation/size",
                "title": "var size: CGSize",
                "type": "property"
              },
              {
                "title": "Getting pixel data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/pixelbufferobservation/pixel(at:)",
                "title": "func pixel(at: NormalizedPoint) -> Float",
                "type": "method"
              },
              {
                "title": "Accessing the memory",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/pixelbufferobservation/withunsafepointer(_:)",
                "title": "func withUnsafePointer<R>((UnsafeRawPointer) -> R) -> R",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/pixelbufferobservation",
            "title": "PixelBufferObservation",
            "type": "struct"
          },
          {
            "title": "Coordinate conversion",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a normalized point",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedpoint/init(x:y:)",
                "title": "init(x: CGFloat, y: CGFloat)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedpoint/init(normalizedpoint:)",
                "title": "init(normalizedPoint: CGPoint)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedpoint/init(imagepoint:in:)",
                "title": "init(imagePoint: CGPoint, in: CGSize)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedpoint/init(imagepoint:in:normalizedto:)",
                "title": "init(imagePoint: CGPoint, in: CGSize, normalizedTo: NormalizedRect)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedpoint/zero",
                "title": "static var zero: NormalizedPoint",
                "type": "property"
              },
              {
                "title": "Inspecting a normalized point",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedpoint/cgpoint",
                "title": "let cgPoint: CGPoint",
                "type": "property"
              },
              {
                "path": "/documentation/vision/normalizedpoint/x",
                "title": "var x: CGFloat",
                "type": "property"
              },
              {
                "path": "/documentation/vision/normalizedpoint/y",
                "title": "var y: CGFloat",
                "type": "property"
              },
              {
                "title": "Converting points",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedpoint/toimagecoordinates(from:imagesize:origin:)",
                "title": "func toImageCoordinates(from: NormalizedRect, imageSize: CGSize, origin: CoordinateOrigin) -> CGPoint",
                "type": "method"
              },
              {
                "path": "/documentation/vision/normalizedpoint/toimagecoordinates(_:origin:)",
                "title": "func toImageCoordinates(CGSize, origin: CoordinateOrigin) -> CGPoint",
                "type": "method"
              },
              {
                "title": "Flipping a normalized point",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedpoint/verticallyflipped()",
                "title": "func verticallyFlipped() -> NormalizedPoint",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/normalizedpoint",
            "title": "NormalizedPoint",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a normalized rectangle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedrect/init(x:y:width:height:)",
                "title": "init(x: CGFloat, y: CGFloat, width: CGFloat, height: CGFloat)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedrect/init(imagerect:in:)",
                "title": "init(imageRect: CGRect, in: CGSize)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedrect/init(imagerect:in:normalizedto:)",
                "title": "init(imageRect: CGRect, in: CGSize, normalizedTo: NormalizedRect)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedrect/init(normalizedrect:)",
                "title": "init(normalizedRect: CGRect)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedrect/fullimage",
                "title": "static var fullImage: NormalizedRect",
                "type": "property"
              },
              {
                "title": "Inspecting a normalized rectangle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedrect/cgrect",
                "title": "let cgRect: CGRect",
                "type": "property"
              },
              {
                "path": "/documentation/vision/normalizedrect/origin",
                "title": "var origin: CGPoint",
                "type": "property"
              },
              {
                "path": "/documentation/vision/normalizedrect/width",
                "title": "var width: CGFloat",
                "type": "property"
              },
              {
                "path": "/documentation/vision/normalizedrect/height",
                "title": "var height: CGFloat",
                "type": "property"
              },
              {
                "title": "Converting rectangles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedrect/toimagecoordinates(_:origin:)",
                "title": "func toImageCoordinates(CGSize, origin: CoordinateOrigin) -> CGRect",
                "type": "method"
              },
              {
                "path": "/documentation/vision/normalizedrect/toimagecoordinates(from:imagesize:origin:)",
                "title": "func toImageCoordinates(from: NormalizedRect, imageSize: CGSize, origin: CoordinateOrigin) -> CGRect",
                "type": "method"
              },
              {
                "title": "Flipping a normalized rectangle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedrect/verticallyflipped()",
                "title": "func verticallyFlipped() -> NormalizedRect",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/normalizedrect",
            "title": "NormalizedRect",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a normalized circle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedcircle/init(center:radius:)",
                "title": "init(center: NormalizedPoint, radius: CGFloat)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/normalizedcircle/zero",
                "title": "static var zero: NormalizedCircle",
                "type": "property"
              },
              {
                "title": "Inspecting a normalized circle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedcircle/center",
                "title": "let center: NormalizedPoint",
                "type": "property"
              },
              {
                "path": "/documentation/vision/normalizedcircle/radius",
                "title": "let radius: CGFloat",
                "type": "property"
              },
              {
                "title": "Determining whether the circle contains a point",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedcircle/contains(_:)",
                "title": "func contains(NormalizedPoint) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/vision/normalizedcircle/contains(_:incircumferentialringofwidth:)",
                "title": "func contains(NormalizedPoint, inCircumferentialRingOfWidth: CGFloat) -> Bool",
                "type": "method"
              },
              {
                "title": "Getting the bounding circle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/normalizedcircle/boundingcircle(for:)",
                "title": "static func boundingCircle(for: [NormalizedPoint]) -> NormalizedCircle",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/normalizedcircle",
            "title": "NormalizedCircle",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the origins",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/coordinateorigin/upperleft",
                "title": "case upperLeft",
                "type": "case"
              },
              {
                "path": "/documentation/vision/coordinateorigin/lowerleft",
                "title": "case lowerLeft",
                "type": "case"
              }
            ],
            "path": "/documentation/vision/coordinateorigin",
            "title": "CoordinateOrigin",
            "type": "enum"
          },
          {
            "title": "Request Handlers",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a request handler",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-6imw8",
                "title": "convenience init(URL, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-8cwes",
                "title": "convenience init(Data, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-8nodt",
                "title": "convenience init(CGImage, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:depthdata:orientation:)-3ebxg",
                "title": "convenience init(CVPixelBuffer, depthData: AVDepthData?, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:depthdata:orientation:)-5itte",
                "title": "convenience init(CMSampleBuffer, depthData: AVDepthData?, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/init(_:orientation:)-2hvfr",
                "title": "convenience init(CIImage, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "title": "Performing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/perform(_:)-l6er",
                "title": "func perform<each T>(repeat each T) async throws -> (repeat (each T).Result)",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/perform(_:)-7b6g5",
                "title": "func perform<T>(T) async throws -> T.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagerequesthandler/performall(_:)",
                "title": "func performAll(some Collection<any VisionRequest>) -> some AsyncSequence<VisionResult, Never>\n",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/imagerequesthandler",
            "title": "ImageRequestHandler",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a request handler",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/init(sourceurl:targeturl:orientation:)",
                "title": "convenience init(sourceURL: URL, targetURL: URL, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/init(source:target:orientation:)-4wr1c",
                "title": "convenience init(source: Data, target: Data, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/init(source:target:orientation:)-66ft9",
                "title": "convenience init(source: CGImage, target: CGImage, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/init(source:target:orientation:)-64lxw",
                "title": "convenience init(source: CVPixelBuffer, target: CVPixelBuffer, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/init(source:target:orientation:)-9u6ta",
                "title": "convenience init(source: CMSampleBuffer, target: CMSampleBuffer, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/init(source:target:orientation:)-1nk14",
                "title": "convenience init(source: CIImage, target: CIImage, orientation: CGImagePropertyOrientation?)",
                "type": "init"
              },
              {
                "title": "Performing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/perform(_:)-1i4di",
                "title": "func perform<each T>(repeat each T) async throws -> (repeat (each T).Result)",
                "type": "method"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/perform(_:)-2r0k8",
                "title": "func perform<T>(T) async throws -> T.Result",
                "type": "method"
              },
              {
                "path": "/documentation/vision/targetedimagerequesthandler/performall(_:)",
                "title": "func performAll(some Collection<any TargetedRequest>) -> some AsyncSequence<VisionResult, Never>\n",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/targetedimagerequesthandler",
            "title": "TargetedImageRequestHandler",
            "type": "class"
          },
          {
            "title": "Utilities",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the compute stages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/computestage/main",
                "title": "case main",
                "type": "case"
              },
              {
                "path": "/documentation/vision/computestage/postprocessing",
                "title": "case postProcessing",
                "type": "case"
              }
            ],
            "path": "/documentation/vision/computestage",
            "title": "ComputeStage",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Creating a video processor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/videoprocessor/init(_:)",
                "title": "init(URL)",
                "type": "init"
              },
              {
                "title": "Adding and removing a request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/videoprocessor/addrequest(_:cadence:)",
                "title": "func addRequest<T>(T, cadence: VideoProcessor.Cadence?) async throws -> some AsyncSequence<T.Result, any Error>\n",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the intervals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/videoprocessor/cadence/timeinterval(_:)",
                    "title": "case timeInterval(CMTime)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/videoprocessor/cadence/frameinterval(_:)",
                    "title": "case frameInterval(Int)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/vision/videoprocessor/cadence",
                "title": "VideoProcessor.Cadence",
                "type": "enum"
              },
              {
                "path": "/documentation/vision/videoprocessor/removerequest(_:)",
                "title": "func removeRequest(any VisionRequest) async -> Bool",
                "type": "method"
              },
              {
                "title": "Starting the analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/videoprocessor/startanalysis(of:)",
                "title": "func startAnalysis(of: CMTimeRange?)",
                "type": "method"
              },
              {
                "title": "Cancelling the analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/videoprocessor/cancel()",
                "title": "func cancel() async",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/videoprocessor",
            "title": "VideoProcessor",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the error",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionerror/internalerror(_:)",
                "title": "case internalError(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/ioerror(_:)",
                "title": "case ioError(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/operationfailed(_:)",
                "title": "case operationFailed(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/outofboundserror(_:)",
                "title": "case outOfBoundsError(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/outofmemory(_:)",
                "title": "case outOfMemory(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/pixelbuffercreationfailed(_:)",
                "title": "case pixelBufferCreationFailed(CVReturn)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/requestcancelled(_:)",
                "title": "case requestCancelled(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/timestampnotfound(_:)",
                "title": "case timeStampNotFound(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/timeout(_:)",
                "title": "case timeout(String)",
                "type": "case"
              },
              {
                "title": "Getting the invalid error",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionerror/invalidargument(_:)",
                "title": "case invalidArgument(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/invalidformat(_:)",
                "title": "case invalidFormat(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/invalidimage(_:)",
                "title": "case invalidImage(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/invalidmodel(_:)",
                "title": "case invalidModel(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/invalidoperation(_:)",
                "title": "case invalidOperation(String)",
                "type": "case"
              },
              {
                "title": "Getting the data-unavailable error",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionerror/dataunavailable(_:)",
                "title": "case dataUnavailable(String)",
                "type": "case"
              },
              {
                "title": "Getting the unsupported error",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionerror/unsupportedcomputedevice(_:)",
                "title": "case unsupportedComputeDevice(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/unsupportedcomputestage(_:)",
                "title": "case unsupportedComputeStage(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/unsupportedrequest(_:)",
                "title": "case unsupportedRequest(String)",
                "type": "case"
              },
              {
                "path": "/documentation/vision/visionerror/unsupportedrevision(_:)",
                "title": "case unsupportedRevision(String)",
                "type": "case"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/visionerror/description",
                "title": "var description: String",
                "type": "property"
              }
            ],
            "path": "/documentation/vision/visionerror",
            "title": "VisionError",
            "type": "enum"
          },
          {
            "title": "Legacy API",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/building-a-feature-rich-app-for-sports-analysis",
                "title": "Building a feature-rich app for sports analysis",
                "type": "sampleCode"
              },
              {
                "title": "Still-image analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-objects-in-still-images",
                "title": "Detecting Objects in Still Images",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/classifying-images-for-categorization-and-search",
                "title": "Classifying images for categorization and search",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/analyzing-image-similarity-with-feature-print",
                "title": "Analyzing Image Similarity with Feature Print",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/init()",
                    "title": "convenience init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/init(completionhandler:)",
                    "title": "init(completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequestcompletionhandler",
                    "title": "VNRequestCompletionHandler",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/completionhandler",
                    "title": "var completionHandler: VNRequestCompletionHandler?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/preferbackgroundprocessing",
                    "title": "var preferBackgroundProcessing: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/results",
                    "title": "var results: [VNObservation]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/revision",
                    "title": "var revision: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrequest/usescpuonly",
                    "title": "var usesCPUOnly: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Compute Device",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/setcomputedevice(_:for:)",
                    "title": "func setComputeDevice(MLComputeDevice?, for: VNComputeStage)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/computedevice(for:)",
                    "title": "func computeDevice(for: VNComputeStage) -> MLComputeDevice?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/supportedcomputestagedevices",
                    "title": "var supportedComputeStageDevices: [VNComputeStage : [MLComputeDevice]]",
                    "type": "property"
                  },
                  {
                    "title": "Canceling a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/cancel()",
                    "title": "func cancel()",
                    "type": "method"
                  },
                  {
                    "title": "Executing a Completion Handler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequestcompletionhandler",
                    "title": "VNRequestCompletionHandler",
                    "type": "typealias"
                  },
                  {
                    "title": "Determining the Revision",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Revision Number",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestrevisionproviding/requestrevision",
                        "title": "var requestRevision: Int",
                        "type": "property"
                      },
                      {
                        "title": "Determining Revision Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestrevisionunspecified",
                        "title": "let VNRequestRevisionUnspecified: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectrectanglesrequestrevision1",
                        "title": "let VNDetectRectanglesRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vntrackrectanglerequestrevision1",
                        "title": "let VNTrackRectangleRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vntrackobjectrequestrevision1",
                        "title": "let VNTrackObjectRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacerectanglesrequestrevision2",
                        "title": "let VNDetectFaceRectanglesRequestRevision2: Int",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vndetectfacerectanglesrequestrevision1",
                        "title": "let VNDetectFaceRectanglesRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacelandmarksrequestrevision3",
                        "title": "let VNDetectFaceLandmarksRequestRevision3: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacelandmarksrequestrevision2",
                        "title": "let VNDetectFaceLandmarksRequestRevision2: Int",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vndetectfacelandmarksrequestrevision1",
                        "title": "let VNDetectFaceLandmarksRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizetextrequestrevision1",
                        "title": "let VNRecognizeTextRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetecttextrectanglesrequestrevision1",
                        "title": "let VNDetectTextRectanglesRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vndetectbarcodesrequestrevision1",
                        "title": "let VNDetectBarcodesRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetecthorizonrequestrevision1",
                        "title": "let VNDetectHorizonRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vntranslationalimageregistrationrequestrevision1",
                        "title": "let VNTranslationalImageRegistrationRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnhomographicimageregistrationrequestrevision1",
                        "title": "let VNHomographicImageRegistrationRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vncoremlrequestrevision1",
                        "title": "let VNCoreMLRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequestrevision1",
                        "title": "let VNGenerateAttentionBasedSaliencyImageRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequestrevision1",
                        "title": "let VNGenerateObjectnessBasedSaliencyImageRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vnclassifyimagerequestrevision1",
                        "title": "let VNClassifyImageRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision1",
                        "title": "let VNGenerateImageFeaturePrintRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision1",
                        "title": "let VNDetectFaceCaptureQualityRequestRevision1: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/vision/vndetecthumanrectanglesrequestrevision1",
                        "title": "let VNDetectHumanRectanglesRequestRevision1: Int",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/vision/vnrequestrevisionproviding",
                    "title": "VNRequestRevisionProviding",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/currentrevision",
                    "title": "class var currentRevision: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/defaultrevision",
                    "title": "class var defaultRevision: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequest/supportedrevisions",
                    "title": "class var supportedRevisions: IndexSet",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrequest",
                "title": "VNRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagebasedrequest/regionofinterest",
                    "title": "var regionOfInterest: CGRect",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnimagebasedrequest",
                "title": "VNImageBasedRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassifyimagerequest/supportedidentifiers()",
                    "title": "func supportedIdentifiers() throws -> [String]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnclassifyimagerequest/results",
                    "title": "var results: [VNClassificationObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Classification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/identifier",
                        "title": "var identifier: String",
                        "type": "property"
                      },
                      {
                        "title": "Measuring Confidence and Precision",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasprecisionrecallcurve",
                        "title": "var hasPrecisionRecallCurve: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumprecision(_:forrecall:)",
                        "title": "func hasMinimumPrecision(Float, forRecall: Float) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumrecall(_:forprecision:)",
                        "title": "func hasMinimumRecall(Float, forPrecision: Float) -> Bool",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnclassificationobservation",
                    "title": "VNClassificationObservation",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnclassifyimagerequest/knownclassifications(forrevision:)",
                    "title": "class func knownClassifications(forRevision: Int) throws -> [VNClassificationObservation]",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Algorithm Revision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassifyimagerequestrevision1",
                    "title": "let VNClassifyImageRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnclassifyimagerequest",
                "title": "VNClassifyImageRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Scaling and Cropping Images",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateimagefeatureprintrequest/imagecropandscaleoption",
                    "title": "var imageCropAndScaleOption: VNImageCropAndScaleOption",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Crop and Scale Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/centercrop",
                        "title": "case centerCrop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefit",
                        "title": "case scaleFit",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefill",
                        "title": "case scaleFill",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefitrotate90ccw",
                        "title": "case scaleFitRotate90CCW",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefillrotate90ccw",
                        "title": "case scaleFillRotate90CCW",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Scale Option",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnimagecropandscaleoption",
                    "title": "VNImageCropAndScaleOption",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateimagefeatureprintrequest/results",
                    "title": "var results: [VNFeaturePrintObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Fetching Feature Print Data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/data",
                        "title": "var data: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/elementcount",
                        "title": "var elementCount: Int",
                        "type": "property"
                      },
                      {
                        "title": "Determining Types of Feature Prints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/elementtype",
                        "title": "var elementType: VNElementType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Element Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/unknown",
                            "title": "case unknown",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/float",
                            "title": "case float",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/double",
                            "title": "case double",
                            "type": "case"
                          },
                          {
                            "title": "Creating an Element Type",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnelementtype/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/vision/vnelementtype",
                        "title": "VNElementType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/vision/vnelementtypesize(_:)",
                        "title": "func VNElementTypeSize(VNElementType) -> Int",
                        "type": "func"
                      },
                      {
                        "title": "Computing Distance Between Features",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfeatureprintobservation/computedistance(_:to:)",
                        "title": "func computeDistance(UnsafeMutablePointer<Float>, to: VNFeaturePrintObservation) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnfeatureprintobservation",
                    "title": "VNFeaturePrintObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision1",
                    "title": "let VNGenerateImageFeaturePrintRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateimagefeatureprintrequest",
                "title": "VNGenerateImageFeaturePrintRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Fetching Feature Print Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/data",
                    "title": "var data: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/elementcount",
                    "title": "var elementCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Determining Types of Feature Prints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/elementtype",
                    "title": "var elementType: VNElementType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Element Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/float",
                        "title": "case float",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/double",
                        "title": "case double",
                        "type": "case"
                      },
                      {
                        "title": "Creating an Element Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnelementtype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnelementtype",
                    "title": "VNElementType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vnelementtypesize(_:)",
                    "title": "func VNElementTypeSize(VNElementType) -> Int",
                    "type": "func"
                  },
                  {
                    "title": "Computing Distance Between Features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnfeatureprintobservation/computedistance(_:to:)",
                    "title": "func computeDistance(UnsafeMutablePointer<Float>, to: VNFeaturePrintObservation) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnfeatureprintobservation",
                "title": "VNFeaturePrintObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request Handler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cgimage:options:)",
                    "title": "init(cgImage: CGImage, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cgimage:orientation:options:)",
                    "title": "init(cgImage: CGImage, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(ciimage:options:)",
                    "title": "init(ciImage: CIImage, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(ciimage:orientation:options:)",
                    "title": "init(ciImage: CIImage, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cvpixelbuffer:options:)",
                    "title": "init(cvPixelBuffer: CVPixelBuffer, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cvpixelbuffer:orientation:options:)",
                    "title": "init(cvPixelBuffer: CVPixelBuffer, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cvpixelbuffer:depthdata:orientation:options:)",
                    "title": "init(cvPixelBuffer: CVPixelBuffer, depthData: AVDepthData, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cmsamplebuffer:options:)",
                    "title": "init(cmSampleBuffer: CMSampleBuffer, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cmsamplebuffer:orientation:options:)",
                    "title": "init(cmSampleBuffer: CMSampleBuffer, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(cmsamplebuffer:depthdata:orientation:options:)",
                    "title": "init(cmSampleBuffer: CMSampleBuffer, depthData: AVDepthData, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(data:options:)",
                    "title": "init(data: Data, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(data:orientation:options:)",
                    "title": "init(data: Data, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(url:options:)",
                    "title": "init(url: URL, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/init(url:orientation:options:)",
                    "title": "init(url: URL, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any])",
                    "type": "init"
                  },
                  {
                    "title": "Executing a Request Handler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagerequesthandler/perform(_:)",
                    "title": "func perform([VNRequest]) throws",
                    "type": "method"
                  },
                  {
                    "title": "Setting Image Options",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Options Dictionary Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/properties",
                        "title": "static let properties: VNImageOption",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/cameraintrinsics",
                        "title": "static let cameraIntrinsics: VNImageOption",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnimageoption/cicontext",
                        "title": "static let ciContext: VNImageOption",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnimageoption",
                    "title": "VNImageOption",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/vision/vnimagerequesthandler",
                "title": "VNImageRequestHandler",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Tracking Observations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnobservation/uuid",
                    "title": "var uuid: UUID",
                    "type": "property"
                  },
                  {
                    "title": "Evaluating Observations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnobservation/timerange",
                    "title": "var timeRange: CMTimeRange",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnobservation/confidence",
                    "title": "var confidence: VNConfidence",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnconfidence",
                    "title": "VNConfidence",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/vision/vnobservation",
                "title": "VNObservation",
                "type": "class"
              },
              {
                "title": "Image sequence analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/applying-matte-effects-to-people-in-images-and-video",
                "title": "Applying Matte Effects to People in Images and Video",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/createml/detecting_human_actions_in_a_live_video_feed",
                "title": "Detecting Human Actions in a Live Video Feed",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/segmenting-and-colorizing-individuals-from-a-surrounding-scene",
                "title": "Segmenting and colorizing individuals from a surrounding scene",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnstatefulrequest/init(frameanalysisspacing:completionhandler:)",
                    "title": "init(frameAnalysisSpacing: CMTime, completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnstatefulrequest/minimumlatencyframecount",
                    "title": "var minimumLatencyFrameCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnstatefulrequest/frameanalysisspacing",
                    "title": "var frameAnalysisSpacing: CMTime",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnstatefulrequest",
                "title": "VNStatefulRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/init(completionhandler:)",
                    "title": "init(completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/outputpixelformat",
                    "title": "var outputPixelFormat: OSType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.property",
                    "title": "var qualityLevel: VNGeneratePersonSegmentationRequest.QualityLevel",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Quality Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/accurate",
                        "title": "case accurate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/balanced",
                        "title": "case balanced",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/fast",
                        "title": "case fast",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Quality Level",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/qualitylevel-swift.enum",
                    "title": "VNGeneratePersonSegmentationRequest.QualityLevel",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/results",
                    "title": "var results: [VNPixelBufferObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing Observation Content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnpixelbufferobservation/pixelbuffer",
                        "title": "var pixelBuffer: CVPixelBuffer",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnpixelbufferobservation/featurename",
                        "title": "var featureName: String?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the supported pixel formats",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngeneratepersonsegmentationrequest/supportedoutputpixelformats()",
                        "title": "func supportedOutputPixelFormats() throws -> [NSNumber]",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnpixelbufferobservation",
                    "title": "VNPixelBufferObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequestrevision1",
                    "title": "let VNGeneratePersonSegmentationRequestRevision1: Int",
                    "type": "var"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/supportedoutputpixelformats()",
                    "title": "func supportedOutputPixelFormats() throws -> [NSNumber]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vngeneratepersonsegmentationrequest",
                "title": "VNGeneratePersonSegmentationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersoninstancemaskrequest/results",
                    "title": "var results: [VNInstanceMaskObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersoninstancemaskrequestrevision1",
                    "title": "let VNGeneratePersonInstanceMaskRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngeneratepersoninstancemaskrequest",
                "title": "VNGeneratePersonInstanceMaskRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectdocumentsegmentationrequest/results",
                    "title": "var results: [VNRectangleObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:topright:bottomright:bottomleft:)",
                        "title": "convenience init(requestRevision: Int, topLeft: CGPoint, topRight: CGPoint, bottomRight: CGPoint, bottomLeft: CGPoint)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:bottomleft:bottomright:topright:)",
                        "title": "convenience init(requestRevision: Int, topLeft: CGPoint, bottomLeft: CGPoint, bottomRight: CGPoint, topRight: CGPoint)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the Coordinates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomleft",
                        "title": "var bottomLeft: CGPoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomright",
                        "title": "var bottomRight: CGPoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topleft",
                        "title": "var topLeft: CGPoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topright",
                        "title": "var topRight: CGPoint",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnrectangleobservation",
                    "title": "VNRectangleObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectdocumentsegmentationrequestrevision1",
                    "title": "let VNDetectDocumentSegmentationRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectdocumentsegmentationrequest",
                "title": "VNDetectDocumentSegmentationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Sequence Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Performing a Sequence Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-3zt7l",
                    "title": "func perform([VNRequest], on: CGImage) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-3gcmv",
                    "title": "func perform([VNRequest], on: CGImage, orientation: CGImagePropertyOrientation) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-9jtgj",
                    "title": "func perform([VNRequest], on: CIImage) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-1bkm1",
                    "title": "func perform([VNRequest], on: CIImage, orientation: CGImagePropertyOrientation) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-3d7nt",
                    "title": "func perform([VNRequest], on: CVPixelBuffer) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-2wvt8",
                    "title": "func perform([VNRequest], on: CVPixelBuffer, orientation: CGImagePropertyOrientation) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:)-45e73",
                    "title": "func perform([VNRequest], on: CMSampleBuffer) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:on:orientation:)-6b7rk",
                    "title": "func perform([VNRequest], on: CMSampleBuffer, orientation: CGImagePropertyOrientation) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimagedata:)",
                    "title": "func perform([VNRequest], onImageData: Data) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimagedata:orientation:)",
                    "title": "func perform([VNRequest], onImageData: Data, orientation: CGImagePropertyOrientation) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimageurl:)",
                    "title": "func perform([VNRequest], onImageURL: URL) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnsequencerequesthandler/perform(_:onimageurl:orientation:)",
                    "title": "func perform([VNRequest], onImageURL: URL, orientation: CGImagePropertyOrientation) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnsequencerequesthandler",
                "title": "VNSequenceRequestHandler",
                "type": "class"
              },
              {
                "title": "Image aesthetics analysis",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncalculateimageaestheticsscoresrequest/results",
                    "title": "var results: [VNImageAestheticsScoresObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing Observation Content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimageaestheticsscoresobservation/overallscore",
                        "title": "var overallScore: Float",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnimageaestheticsscoresobservation/isutility",
                        "title": "var isUtility: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnimageaestheticsscoresobservation",
                    "title": "VNImageAestheticsScoresObservation",
                    "type": "class"
                  }
                ],
                "path": "/documentation/vision/vncalculateimageaestheticsscoresrequest",
                "title": "VNCalculateImageAestheticsScoresRequest",
                "type": "class"
              },
              {
                "title": "Saliency analysis",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/cropping-images-using-saliency",
                "title": "Cropping Images Using Saliency",
                "type": "article"
              },
              {
                "path": "/documentation/vision/highlighting-areas-of-interest-in-an-image-using-saliency",
                "title": "Highlighting Areas of Interest in an Image Using Saliency",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequest/results",
                    "title": "var results: [VNSaliencyImageObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequestrevision1",
                    "title": "let VNGenerateAttentionBasedSaliencyImageRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequest",
                "title": "VNGenerateAttentionBasedSaliencyImageRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequest/results",
                    "title": "var results: [VNSaliencyImageObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequestrevision1",
                    "title": "let VNGenerateObjectnessBasedSaliencyImageRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequest",
                "title": "VNGenerateObjectnessBasedSaliencyImageRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Locating Salient Regions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnsaliencyimageobservation/salientobjects",
                    "title": "var salientObjects: [VNRectangleObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnsaliencyimageobservation",
                "title": "VNSaliencyImageObservation",
                "type": "class"
              },
              {
                "title": "Object tracking",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/tracking-the-user-s-face-in-real-time",
                "title": "Tracking the Userâ€™s Face in Real Time",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/tracking-multiple-objects-or-rectangles-in-video",
                "title": "Tracking Multiple Objects or Rectangles in Video",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Tracking Request",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttrackinglevel/accurate",
                        "title": "case accurate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttrackinglevel/fast",
                        "title": "case fast",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Tracking Level",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttrackinglevel/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnrequesttrackinglevel",
                    "title": "VNRequestTrackingLevel",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/inputobservation",
                    "title": "var inputObservation: VNDetectedObjectObservation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/trackinglevel",
                    "title": "var trackingLevel: VNRequestTrackingLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/islastframe",
                    "title": "var isLastFrame: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Number of Trackers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackingrequest/supportednumber(oftrackersandreturnerror:)",
                    "title": "func supportedNumber(ofTrackersAndReturnError: NSErrorPointer) -> Int",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vntrackingrequest",
                "title": "VNTrackingRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Rectangle Tracking Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackrectanglerequest/init(rectangleobservation:)",
                    "title": "convenience init(rectangleObservation: VNRectangleObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntrackrectanglerequest/init(rectangleobservation:completionhandler:)",
                    "title": "init(rectangleObservation: VNRectangleObservation, completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackrectanglerequestrevision1",
                    "title": "let VNTrackRectangleRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vntrackrectanglerequest",
                "title": "VNTrackRectangleRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an Object Tracking Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequest/init(detectedobjectobservation:)",
                    "title": "init(detectedObjectObservation: VNDetectedObjectObservation)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequest/init(detectedobjectobservation:completionhandler:)",
                    "title": "init(detectedObjectObservation: VNDetectedObjectObservation, completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequestrevision2",
                    "title": "let VNTrackObjectRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vntrackobjectrequestrevision1",
                    "title": "let VNTrackObjectRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vntrackobjectrequest",
                "title": "VNTrackObjectRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/init(boundingbox:)",
                    "title": "convenience init(boundingBox: CGRect)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/init(requestrevision:boundingbox:)",
                    "title": "convenience init(requestRevision: Int, boundingBox: CGRect)",
                    "type": "init"
                  },
                  {
                    "title": "Locating a Detected Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/boundingbox",
                    "title": "var boundingBox: CGRect",
                    "type": "property"
                  },
                  {
                    "title": "Accessing an Image Mask",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedobjectobservation/globalsegmentationmask",
                    "title": "var globalSegmentationMask: VNPixelBufferObservation?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetectedobjectobservation",
                "title": "VNDetectedObjectObservation",
                "type": "class"
              },
              {
                "title": "Rectangle detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring Detection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/minimumaspectratio",
                    "title": "var minimumAspectRatio: VNAspectRatio",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/maximumaspectratio",
                    "title": "var maximumAspectRatio: VNAspectRatio",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnaspectratio",
                    "title": "VNAspectRatio",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/quadraturetolerance",
                    "title": "var quadratureTolerance: VNDegrees",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndegrees",
                    "title": "VNDegrees",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/minimumsize",
                    "title": "var minimumSize: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/minimumconfidence",
                    "title": "var minimumConfidence: VNConfidence",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnconfidence",
                    "title": "VNConfidence",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/maximumobservations",
                    "title": "var maximumObservations: Int",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequest/results",
                    "title": "var results: [VNRectangleObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:topright:bottomright:bottomleft:)",
                        "title": "convenience init(requestRevision: Int, topLeft: CGPoint, topRight: CGPoint, bottomRight: CGPoint, bottomLeft: CGPoint)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrectangleobservation/init(requestrevision:topleft:bottomleft:bottomright:topright:)",
                        "title": "convenience init(requestRevision: Int, topLeft: CGPoint, bottomLeft: CGPoint, bottomRight: CGPoint, topRight: CGPoint)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the Coordinates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomleft",
                        "title": "var bottomLeft: CGPoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/bottomright",
                        "title": "var bottomRight: CGPoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topleft",
                        "title": "var topLeft: CGPoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrectangleobservation/topright",
                        "title": "var topRight: CGPoint",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnrectangleobservation",
                    "title": "VNRectangleObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectrectanglesrequestrevision1",
                    "title": "let VNDetectRectanglesRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectrectanglesrequest",
                "title": "VNDetectRectanglesRequest",
                "type": "class"
              },
              {
                "title": "Face and body detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/selecting-a-selfie-based-on-capture-quality",
                "title": "Selecting a selfie based on capture quality",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacecapturequalityrequest/results",
                    "title": "var results: [VNFaceObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:pitch:)",
                        "title": "convenience init(requestRevision: Int, boundingBox: CGRect, roll: NSNumber?, yaw: NSNumber?, pitch: NSNumber?)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:)",
                        "title": "convenience init(requestRevision: Int, boundingBox: CGRect, roll: NSNumber?, yaw: NSNumber?)",
                        "type": "init"
                      },
                      {
                        "title": "Identifying Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/landmarks",
                        "title": "var landmarks: VNFaceLandmarks2D?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Face Landmark Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/allpoints",
                            "title": "var allPoints: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/facecontour",
                            "title": "var faceContour: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteye",
                            "title": "var leftEye: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteye",
                            "title": "var rightEye: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteyebrow",
                            "title": "var leftEyebrow: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteyebrow",
                            "title": "var rightEyebrow: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nose",
                            "title": "var nose: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nosecrest",
                            "title": "var noseCrest: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/medianline",
                            "title": "var medianLine: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/outerlips",
                            "title": "var outerLips: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/innerlips",
                            "title": "var innerLips: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/leftpupil",
                            "title": "var leftPupil: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/rightpupil",
                            "title": "var rightPupil: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks2d",
                        "title": "VNFaceLandmarks2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing Region Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsclassification",
                            "title": "var pointsClassification: VNPointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/closedpath",
                                "title": "case closedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/disconnected",
                                "title": "case disconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/openpath",
                                "title": "case openPath",
                                "type": "case"
                              },
                              {
                                "title": "Creating a Classification",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/vision/vnpointsclassification",
                            "title": "VNPointsClassification",
                            "type": "enum"
                          },
                          {
                            "title": "Specifying Region Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/normalizedpoints-7s7im",
                            "title": "var normalizedPoints: [CGPoint]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/precisionestimatesperpoint-5jl22",
                            "title": "var precisionEstimatesPerPoint: [Float]?",
                            "type": "property"
                          },
                          {
                            "title": "Computing Feature Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsinimage(imagesize:)",
                            "title": "func pointsInImage(imageSize: CGSize) -> [CGPoint]",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion2d",
                        "title": "VNFaceLandmarkRegion2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining Accuracy",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks/confidence",
                            "title": "var confidence: VNConfidence",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks",
                        "title": "VNFaceLandmarks",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion/pointcount",
                            "title": "var pointCount: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion",
                        "title": "VNFaceLandmarkRegion",
                        "type": "class"
                      },
                      {
                        "title": "Determining Facial Orientation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/roll",
                        "title": "var roll: NSNumber?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/yaw",
                        "title": "var yaw: NSNumber?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/pitch",
                        "title": "var pitch: NSNumber?",
                        "type": "property"
                      },
                      {
                        "title": "Determining Capture Quality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/facecapturequality-bjg5",
                        "title": "var faceCaptureQuality: Float?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservation",
                    "title": "VNFaceObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision2",
                    "title": "let VNDetectFaceCaptureQualityRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision1",
                    "title": "let VNDetectFaceCaptureQualityRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectfacecapturequalityrequest",
                "title": "VNDetectFaceCaptureQualityRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Face Landmarks Request",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing Face Observations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservationaccepting/inputfaceobservations",
                        "title": "var inputFaceObservations: [VNFaceObservation]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservationaccepting",
                    "title": "VNFaceObservationAccepting",
                    "type": "protocol"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequest/results",
                    "title": "var results: [VNFaceObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:pitch:)",
                        "title": "convenience init(requestRevision: Int, boundingBox: CGRect, roll: NSNumber?, yaw: NSNumber?, pitch: NSNumber?)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:)",
                        "title": "convenience init(requestRevision: Int, boundingBox: CGRect, roll: NSNumber?, yaw: NSNumber?)",
                        "type": "init"
                      },
                      {
                        "title": "Identifying Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/landmarks",
                        "title": "var landmarks: VNFaceLandmarks2D?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Face Landmark Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/allpoints",
                            "title": "var allPoints: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/facecontour",
                            "title": "var faceContour: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteye",
                            "title": "var leftEye: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteye",
                            "title": "var rightEye: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteyebrow",
                            "title": "var leftEyebrow: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteyebrow",
                            "title": "var rightEyebrow: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nose",
                            "title": "var nose: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nosecrest",
                            "title": "var noseCrest: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/medianline",
                            "title": "var medianLine: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/outerlips",
                            "title": "var outerLips: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/innerlips",
                            "title": "var innerLips: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/leftpupil",
                            "title": "var leftPupil: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/rightpupil",
                            "title": "var rightPupil: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks2d",
                        "title": "VNFaceLandmarks2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing Region Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsclassification",
                            "title": "var pointsClassification: VNPointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/closedpath",
                                "title": "case closedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/disconnected",
                                "title": "case disconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/openpath",
                                "title": "case openPath",
                                "type": "case"
                              },
                              {
                                "title": "Creating a Classification",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/vision/vnpointsclassification",
                            "title": "VNPointsClassification",
                            "type": "enum"
                          },
                          {
                            "title": "Specifying Region Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/normalizedpoints-7s7im",
                            "title": "var normalizedPoints: [CGPoint]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/precisionestimatesperpoint-5jl22",
                            "title": "var precisionEstimatesPerPoint: [Float]?",
                            "type": "property"
                          },
                          {
                            "title": "Computing Feature Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsinimage(imagesize:)",
                            "title": "func pointsInImage(imageSize: CGSize) -> [CGPoint]",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion2d",
                        "title": "VNFaceLandmarkRegion2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining Accuracy",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks/confidence",
                            "title": "var confidence: VNConfidence",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks",
                        "title": "VNFaceLandmarks",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion/pointcount",
                            "title": "var pointCount: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion",
                        "title": "VNFaceLandmarkRegion",
                        "type": "class"
                      },
                      {
                        "title": "Determining Facial Orientation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/roll",
                        "title": "var roll: NSNumber?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/yaw",
                        "title": "var yaw: NSNumber?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/pitch",
                        "title": "var pitch: NSNumber?",
                        "type": "property"
                      },
                      {
                        "title": "Determining Capture Quality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/facecapturequality-bjg5",
                        "title": "var faceCaptureQuality: Float?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservation",
                    "title": "VNFaceObservation",
                    "type": "class"
                  },
                  {
                    "title": "Locating Face Landmarks",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequest/constellation",
                    "title": "var constellation: VNRequestFaceLandmarksConstellation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Types of Constellations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/constellationnotdefined",
                        "title": "case constellationNotDefined",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/constellation65points",
                        "title": "case constellation65Points",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/constellation76points",
                        "title": "case constellation76Points",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Constellation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequestfacelandmarksconstellation/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnrequestfacelandmarksconstellation",
                    "title": "VNRequestFaceLandmarksConstellation",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequest/revision(_:supportsconstellation:)",
                    "title": "class func revision(Int, supportsConstellation: VNRequestFaceLandmarksConstellation) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequestrevision3",
                    "title": "let VNDetectFaceLandmarksRequestRevision3: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacelandmarksrequestrevision2",
                    "title": "let VNDetectFaceLandmarksRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectfacelandmarksrequestrevision1",
                    "title": "let VNDetectFaceLandmarksRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectfacelandmarksrequest",
                "title": "VNDetectFaceLandmarksRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacerectanglesrequest/results",
                    "title": "var results: [VNFaceObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:pitch:)",
                        "title": "convenience init(requestRevision: Int, boundingBox: CGRect, roll: NSNumber?, yaw: NSNumber?, pitch: NSNumber?)",
                        "type": "init"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnfaceobservation/init(requestrevision:boundingbox:roll:yaw:)",
                        "title": "convenience init(requestRevision: Int, boundingBox: CGRect, roll: NSNumber?, yaw: NSNumber?)",
                        "type": "init"
                      },
                      {
                        "title": "Identifying Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/landmarks",
                        "title": "var landmarks: VNFaceLandmarks2D?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Face Landmark Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/allpoints",
                            "title": "var allPoints: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/facecontour",
                            "title": "var faceContour: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteye",
                            "title": "var leftEye: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteye",
                            "title": "var rightEye: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/lefteyebrow",
                            "title": "var leftEyebrow: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/righteyebrow",
                            "title": "var rightEyebrow: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nose",
                            "title": "var nose: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/nosecrest",
                            "title": "var noseCrest: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/medianline",
                            "title": "var medianLine: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/outerlips",
                            "title": "var outerLips: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/innerlips",
                            "title": "var innerLips: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/leftpupil",
                            "title": "var leftPupil: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks2d/rightpupil",
                            "title": "var rightPupil: VNFaceLandmarkRegion2D?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks2d",
                        "title": "VNFaceLandmarks2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing Region Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsclassification",
                            "title": "var pointsClassification: VNPointsClassification",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/closedpath",
                                "title": "case closedPath",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/disconnected",
                                "title": "case disconnected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/openpath",
                                "title": "case openPath",
                                "type": "case"
                              },
                              {
                                "title": "Creating a Classification",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/vision/vnpointsclassification/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/vision/vnpointsclassification",
                            "title": "VNPointsClassification",
                            "type": "enum"
                          },
                          {
                            "title": "Specifying Region Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/normalizedpoints-7s7im",
                            "title": "var normalizedPoints: [CGPoint]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/precisionestimatesperpoint-5jl22",
                            "title": "var precisionEstimatesPerPoint: [Float]?",
                            "type": "property"
                          },
                          {
                            "title": "Computing Feature Points",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion2d/pointsinimage(imagesize:)",
                            "title": "func pointsInImage(imageSize: CGSize) -> [CGPoint]",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion2d",
                        "title": "VNFaceLandmarkRegion2D",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining Accuracy",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarks/confidence",
                            "title": "var confidence: VNConfidence",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarks",
                        "title": "VNFaceLandmarks",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnfacelandmarkregion/pointcount",
                            "title": "var pointCount: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnfacelandmarkregion",
                        "title": "VNFaceLandmarkRegion",
                        "type": "class"
                      },
                      {
                        "title": "Determining Facial Orientation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/roll",
                        "title": "var roll: NSNumber?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/yaw",
                        "title": "var yaw: NSNumber?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/pitch",
                        "title": "var pitch: NSNumber?",
                        "type": "property"
                      },
                      {
                        "title": "Determining Capture Quality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnfaceobservation/facecapturequality-bjg5",
                        "title": "var faceCaptureQuality: Float?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnfaceobservation",
                    "title": "VNFaceObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacerectanglesrequestrevision3",
                    "title": "let VNDetectFaceRectanglesRequestRevision3: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetectfacerectanglesrequestrevision2",
                    "title": "let VNDetectFaceRectanglesRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectfacerectanglesrequestrevision1",
                    "title": "let VNDetectFaceRectanglesRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectfacerectanglesrequest",
                "title": "VNDetectFaceRectanglesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequest/upperbodyonly",
                    "title": "var upperBodyOnly: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequest/results",
                    "title": "var results: [VNHumanObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequestrevision2",
                    "title": "let VNDetectHumanRectanglesRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanrectanglesrequestrevision1",
                    "title": "let VNDetectHumanRectanglesRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanrectanglesrequest",
                "title": "VNDetectHumanRectanglesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanobservation/upperbodyonly",
                    "title": "var upperBodyOnly: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnhumanobservation",
                "title": "VNHumanObservation",
                "type": "class"
              },
              {
                "title": "Body and hand pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-human-body-poses-in-images",
                "title": "Detecting Human Body Poses in Images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-hand-poses-with-vision",
                "title": "Detecting Hand Poses with Vision",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointnames",
                    "title": "var supportedJointNames: [VNHumanBodyPoseObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointnames(forrevision:)",
                    "title": "class func supportedJointNames(forRevision: Int) throws -> [VNHumanBodyPoseObservation.JointName]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointsgroupnames",
                    "title": "var supportedJointsGroupNames: [VNHumanBodyPoseObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/supportedjointsgroupnames(forrevision:)",
                    "title": "class func supportedJointsGroupNames(forRevision: Int) throws -> [VNHumanBodyPoseObservation.JointsGroupName]",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequest/results",
                    "title": "var results: [VNHumanBodyPoseObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Body Pose Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodyposerequestrevision1",
                    "title": "let VNDetectHumanBodyPoseRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanbodyposerequest",
                "title": "VNDetectHumanBodyPoseRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/maximumhandcount",
                    "title": "var maximumHandCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointnames",
                    "title": "var supportedJointNames: [VNHumanHandPoseObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointnames(forrevision:)",
                    "title": "class func supportedJointNames(forRevision: Int) throws -> [VNHumanHandPoseObservation.JointName]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointsgroupnames",
                    "title": "var supportedJointsGroupNames: [VNHumanHandPoseObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecthumanhandposerequest/supportedjointsgroupnames(forrevision:)",
                    "title": "class func supportedJointsGroupNames(forRevision: Int) throws -> [VNHumanHandPoseObservation.JointsGroupName]",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequest/results",
                    "title": "var results: [VNHumanHandPoseObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Hand Pose Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanhandposerequestrevision1",
                    "title": "let VNDetectHumanHandPoseRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanhandposerequest",
                "title": "VNDetectHumanHandPoseRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/availablekeys",
                    "title": "var availableKeys: [VNRecognizedPointKey]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/availablegroupkeys",
                    "title": "var availableGroupKeys: [VNRecognizedPointGroupKey]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/recognizedpoint(forkey:)",
                    "title": "func recognizedPoint(forKey: VNRecognizedPointKey) throws -> VNRecognizedPoint",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/recognizedpoints(forgroupkey:)",
                    "title": "func recognizedPoints(forGroupKey: VNRecognizedPointGroupKey) throws -> [VNRecognizedPointKey : VNRecognizedPoint]",
                    "type": "method"
                  },
                  {
                    "title": "Converting Points for Core ML",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointsobservation/keypointsmultiarray()",
                    "title": "func keypointsMultiArray() throws -> MLMultiArray",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpointsobservation",
                "title": "VNRecognizedPointsObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/availablejointnames",
                    "title": "var availableJointNames: [VNHumanBodyPoseObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Head",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftear",
                        "title": "static let leftEar: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/lefteye",
                        "title": "static let leftEye: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightear",
                        "title": "static let rightEar: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/righteye",
                        "title": "static let rightEye: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/neck",
                        "title": "static let neck: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/nose",
                        "title": "static let nose: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Arms",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftshoulder",
                        "title": "static let leftShoulder: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftelbow",
                        "title": "static let leftElbow: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftwrist",
                        "title": "static let leftWrist: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightshoulder",
                        "title": "static let rightShoulder: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightelbow",
                        "title": "static let rightElbow: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightwrist",
                        "title": "static let rightWrist: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Waist",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/root",
                        "title": "static let root: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Legs",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/lefthip",
                        "title": "static let leftHip: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftknee",
                        "title": "static let leftKnee: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/leftankle",
                        "title": "static let leftAnkle: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/righthip",
                        "title": "static let rightHip: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightknee",
                        "title": "static let rightKnee: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/rightankle",
                        "title": "static let rightAnkle: VNHumanBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodyposeobservation/jointname",
                    "title": "VNHumanBodyPoseObservation.JointName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/availablejointsgroupnames",
                    "title": "var availableJointsGroupNames: [VNHumanBodyPoseObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Head",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/face",
                        "title": "static let face: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Body",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/torso",
                        "title": "static let torso: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Arms",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/leftarm",
                        "title": "static let leftArm: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/rightarm",
                        "title": "static let rightArm: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Legs",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/leftleg",
                        "title": "static let leftLeg: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/rightleg",
                        "title": "static let rightLeg: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "All",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/all",
                        "title": "static let all: VNHumanBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointGroupKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodyposeobservation/jointsgroupname",
                    "title": "VNHumanBodyPoseObservation.JointsGroupName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/recognizedpoint(_:)",
                    "title": "func recognizedPoint(VNHumanBodyPoseObservation.JointName) throws -> VNRecognizedPoint",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyposeobservation/recognizedpoints(_:)",
                    "title": "func recognizedPoints(VNHumanBodyPoseObservation.JointsGroupName) throws -> [VNHumanBodyPoseObservation.JointName : VNRecognizedPoint]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodyposeobservation",
                "title": "VNHumanBodyPoseObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/availablejointnames",
                    "title": "var availableJointNames: [VNHumanHandPoseObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Thumb",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbtip",
                        "title": "static let thumbTip: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbip",
                        "title": "static let thumbIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbmp",
                        "title": "static let thumbMP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/thumbcmc",
                        "title": "static let thumbCMC: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Index",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indextip",
                        "title": "static let indexTip: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indexdip",
                        "title": "static let indexDIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indexpip",
                        "title": "static let indexPIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/indexmcp",
                        "title": "static let indexMCP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Middle",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middletip",
                        "title": "static let middleTip: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middledip",
                        "title": "static let middleDIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middlepip",
                        "title": "static let middlePIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/middlemcp",
                        "title": "static let middleMCP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Ring",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringtip",
                        "title": "static let ringTip: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringdip",
                        "title": "static let ringDIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringpip",
                        "title": "static let ringPIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/ringmcp",
                        "title": "static let ringMCP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Little",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littletip",
                        "title": "static let littleTip: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littledip",
                        "title": "static let littleDIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littlepip",
                        "title": "static let littlePIP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/littlemcp",
                        "title": "static let littleMCP: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Wrist",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/wrist",
                        "title": "static let wrist: VNHumanHandPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanhandposeobservation/jointname",
                    "title": "VNHumanHandPoseObservation.JointName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/availablejointsgroupnames",
                    "title": "var availableJointsGroupNames: [VNHumanHandPoseObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Group Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/thumb",
                        "title": "static let thumb: VNHumanHandPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/indexfinger",
                        "title": "static let indexFinger: VNHumanHandPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/littlefinger",
                        "title": "static let littleFinger: VNHumanHandPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/middlefinger",
                        "title": "static let middleFinger: VNHumanHandPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/ringfinger",
                        "title": "static let ringFinger: VNHumanHandPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/all",
                        "title": "static let all: VNHumanHandPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointGroupKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanhandposeobservation/jointsgroupname",
                    "title": "VNHumanHandPoseObservation.JointsGroupName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/recognizedpoint(_:)",
                    "title": "func recognizedPoint(VNHumanHandPoseObservation.JointName) throws -> VNRecognizedPoint",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/recognizedpoints(_:)",
                    "title": "func recognizedPoints(VNHumanHandPoseObservation.JointsGroupName) throws -> [VNHumanHandPoseObservation.JointName : VNRecognizedPoint]",
                    "type": "method"
                  },
                  {
                    "title": "Determining the Chirality",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanhandposeobservation/chirality",
                    "title": "var chirality: VNChirality",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Chirality Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/left",
                        "title": "case left",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/right",
                        "title": "case right",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Chirality",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnchirality/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnchirality",
                    "title": "VNChirality",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/vision/vnhumanhandposeobservation",
                "title": "VNHumanHandPoseObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/init(x:y:)",
                    "title": "init(x: Double, y: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/init(location:)",
                    "title": "convenience init(location: CGPoint)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/apply(_:to:)",
                    "title": "class func apply(VNVector, to: VNPoint) -> VNPoint",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/zero",
                    "title": "class var zero: VNPoint",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/x",
                    "title": "var x: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/y",
                    "title": "var y: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/location",
                    "title": "var location: CGPoint",
                    "type": "property"
                  },
                  {
                    "title": "Calculating Distance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint/distance(_:)",
                    "title": "func distance(VNPoint) -> Double",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnpoint/distance(_:_:)",
                    "title": "class func distance(VNPoint, VNPoint) -> Double",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnpoint",
                "title": "VNPoint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectedpoint/confidence",
                    "title": "var confidence: VNConfidence",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetectedpoint",
                "title": "VNDetectedPoint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoint/identifier",
                    "title": "var identifier: VNRecognizedPointKey",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpoint",
                "title": "VNRecognizedPoint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Landmarks",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Head",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeylefteye",
                        "title": "static let bodyLandmarkKeyLeftEye: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrighteye",
                        "title": "static let bodyLandmarkKeyRightEye: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftear",
                        "title": "static let bodyLandmarkKeyLeftEar: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightear",
                        "title": "static let bodyLandmarkKeyRightEar: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeynose",
                        "title": "static let bodyLandmarkKeyNose: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyface",
                        "title": "static let bodyLandmarkRegionKeyFace: VNRecognizedPointGroupKey",
                        "type": "property"
                      },
                      {
                        "title": "Torso",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyneck",
                        "title": "static let bodyLandmarkKeyNeck: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftshoulder",
                        "title": "static let bodyLandmarkKeyLeftShoulder: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightshoulder",
                        "title": "static let bodyLandmarkKeyRightShoulder: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeylefthip",
                        "title": "static let bodyLandmarkKeyLeftHip: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrighthip",
                        "title": "static let bodyLandmarkKeyRightHip: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyroot",
                        "title": "static let bodyLandmarkKeyRoot: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeytorso",
                        "title": "static let bodyLandmarkRegionKeyTorso: VNRecognizedPointGroupKey",
                        "type": "property"
                      },
                      {
                        "title": "Arms",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightwrist",
                        "title": "static let bodyLandmarkKeyRightWrist: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightelbow",
                        "title": "static let bodyLandmarkKeyRightElbow: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightarm",
                        "title": "static let bodyLandmarkRegionKeyRightArm: VNRecognizedPointGroupKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftwrist",
                        "title": "static let bodyLandmarkKeyLeftWrist: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftelbow",
                        "title": "static let bodyLandmarkKeyLeftElbow: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftarm",
                        "title": "static let bodyLandmarkRegionKeyLeftArm: VNRecognizedPointGroupKey",
                        "type": "property"
                      },
                      {
                        "title": "Legs",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightknee",
                        "title": "static let bodyLandmarkKeyRightKnee: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyrightankle",
                        "title": "static let bodyLandmarkKeyRightAnkle: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightleg",
                        "title": "static let bodyLandmarkRegionKeyRightLeg: VNRecognizedPointGroupKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftknee",
                        "title": "static let bodyLandmarkKeyLeftKnee: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointkey/bodylandmarkkeyleftankle",
                        "title": "static let bodyLandmarkKeyLeftAnkle: VNRecognizedPointKey",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftleg",
                        "title": "static let bodyLandmarkRegionKeyLeftLeg: VNRecognizedPointGroupKey",
                        "type": "property"
                      },
                      {
                        "title": "All Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/all",
                        "title": "static let all: VNRecognizedPointGroupKey",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/body-landmarks",
                    "title": "Body Landmarks",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "All Landmarks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedpointgroupkey/all",
                        "title": "static let all: VNRecognizedPointGroupKey",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/hand-landmarks",
                    "title": "Hand Landmarks",
                    "type": "collection"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointkey/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpointkey",
                "title": "VNRecognizedPointKey",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Body Regions",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyface",
                    "title": "static let bodyLandmarkRegionKeyFace: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeytorso",
                    "title": "static let bodyLandmarkRegionKeyTorso: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightarm",
                    "title": "static let bodyLandmarkRegionKeyRightArm: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftarm",
                    "title": "static let bodyLandmarkRegionKeyLeftArm: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyrightleg",
                    "title": "static let bodyLandmarkRegionKeyRightLeg: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/bodylandmarkregionkeyleftleg",
                    "title": "static let bodyLandmarkRegionKeyLeftLeg: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "title": "All Regions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/all",
                    "title": "static let all: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/point3dgroupkeyall",
                    "title": "static let point3DGroupKeyAll: VNRecognizedPointGroupKey",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpointgroupkey/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpointgroupkey",
                "title": "VNRecognizedPointGroupKey",
                "type": "struct"
              },
              {
                "title": "3D body pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/identifying-3d-human-body-poses-in-images",
                "title": "Identifying 3D human body poses in images",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-human-body-poses-in-3d-with-vision",
                "title": "Detecting human body poses in 3D with Vision",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/init(completionhandler:)",
                    "title": "init(completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/supportedjointsgroupnames",
                    "title": "var supportedJointsGroupNames: [VNHumanBodyPose3DObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/supportedjointnames",
                    "title": "var supportedJointNames: [VNHumanBodyPose3DObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthumanbodypose3drequest/results",
                    "title": "var results: [VNHumanBodyPose3DObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetecthumanbodypose3drequest",
                "title": "VNDetectHumanBodyPose3DRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/availablejointnames",
                    "title": "var availableJointNames: [VNHumanBodyPose3DObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Head Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/tophead",
                        "title": "static let topHead: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centerhead",
                        "title": "static let centerHead: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Arm Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centershoulder",
                        "title": "static let centerShoulder: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftshoulder",
                        "title": "static let leftShoulder: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightshoulder",
                        "title": "static let rightShoulder: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftelbow",
                        "title": "static let leftElbow: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightelbow",
                        "title": "static let rightElbow: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftwrist",
                        "title": "static let leftWrist: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightwrist",
                        "title": "static let rightWrist: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Leg Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/lefthip",
                        "title": "static let leftHip: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/righthip",
                        "title": "static let rightHip: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftknee",
                        "title": "static let leftKnee: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightknee",
                        "title": "static let rightKnee: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftankle",
                        "title": "static let leftAnkle: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightankle",
                        "title": "static let rightAnkle: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Root Joint Name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/root",
                        "title": "static let root: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Spine",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/spine",
                        "title": "static let spine: VNHumanBodyPose3DObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Creating a Joint Name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname",
                    "title": "VNHumanBodyPose3DObservation.JointName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/availablejointsgroupnames",
                    "title": "var availableJointsGroupNames: [VNHumanBodyPose3DObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Group Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/all",
                        "title": "static let all: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/head",
                        "title": "static let head: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftarm",
                        "title": "static let leftArm: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftleg",
                        "title": "static let leftLeg: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightarm",
                        "title": "static let rightArm: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightleg",
                        "title": "static let rightLeg: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/torso",
                        "title": "static let torso: VNHumanBodyPose3DObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Creating a Group Name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointGroupKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname",
                    "title": "VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/recognizedpoint(_:)",
                    "title": "func recognizedPoint(VNHumanBodyPose3DObservation.JointName) throws -> VNHumanBodyRecognizedPoint3D",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/recognizedpoints(_:)",
                    "title": "func recognizedPoints(VNHumanBodyPose3DObservation.JointsGroupName) throws -> [VNHumanBodyPose3DObservation.JointName : VNHumanBodyRecognizedPoint3D]",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Joint Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/pointinimage(_:)",
                    "title": "func pointInImage(VNHumanBodyPose3DObservation.JointName) throws -> VNPoint",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Parent Joint Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/parentjointname(_:)",
                    "title": "func parentJointName(VNHumanBodyPose3DObservation.JointName) -> VNHumanBodyPose3DObservation.JointName?",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Body Height",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.property",
                    "title": "var heightEstimation: VNHumanBodyPose3DObservation.HeightEstimation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Techniques",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/measured",
                        "title": "case measured",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/reference",
                        "title": "case reference",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/measured",
                        "title": "case measured",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/reference",
                        "title": "case reference",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Technique",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/heightestimation-swift.enum",
                    "title": "VNHumanBodyPose3DObservation.HeightEstimation",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/bodyheight",
                    "title": "var bodyHeight: Float",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Camera Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/cameraoriginmatrix",
                    "title": "var cameraOriginMatrix: simd_float4x4",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/camerarelativeposition(_:)",
                    "title": "func cameraRelativePosition(VNHumanBodyPose3DObservation.JointName) throws -> simd_float4x4",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodypose3dobservation",
                "title": "VNHumanBodyPose3DObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/availablekeys",
                    "title": "var availableKeys: [VNRecognizedPointKey]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/availablegroupkeys",
                    "title": "var availableGroupKeys: [VNRecognizedPointGroupKey]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/recognizedpoint(forkey:)",
                    "title": "func recognizedPoint(forKey: VNRecognizedPointKey) throws -> VNRecognizedPoint3D",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoints3dobservation/recognizedpoints(forgroupkey:)",
                    "title": "func recognizedPoints(forGroupKey: VNRecognizedPointGroupKey) throws -> [VNRecognizedPointKey : VNRecognizedPoint3D]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpoints3dobservation",
                "title": "VNRecognizedPoints3DObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyrecognizedpoint3d/localposition",
                    "title": "var localPosition: simd_float4x4",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Parent Joint",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodyrecognizedpoint3d/parentjoint",
                    "title": "var parentJoint: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodyrecognizedpoint3d",
                "title": "VNHumanBodyRecognizedPoint3D",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Point",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint3d/init(position:)",
                    "title": "init?(position: simd_float4x4)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the Position",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpoint3d/position",
                    "title": "var position: simd_float4x4",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnpoint3d",
                "title": "VNPoint3D",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedpoint3d/identifier",
                    "title": "var identifier: VNRecognizedPointKey",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedpoint3d",
                "title": "VNRecognizedPoint3D",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Head Joint Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/tophead",
                    "title": "static let topHead: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centerhead",
                    "title": "static let centerHead: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Arm Joint Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/centershoulder",
                    "title": "static let centerShoulder: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftshoulder",
                    "title": "static let leftShoulder: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightshoulder",
                    "title": "static let rightShoulder: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftelbow",
                    "title": "static let leftElbow: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightelbow",
                    "title": "static let rightElbow: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftwrist",
                    "title": "static let leftWrist: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightwrist",
                    "title": "static let rightWrist: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Leg Joint Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/lefthip",
                    "title": "static let leftHip: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/righthip",
                    "title": "static let rightHip: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftknee",
                    "title": "static let leftKnee: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightknee",
                    "title": "static let rightKnee: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/leftankle",
                    "title": "static let leftAnkle: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/rightankle",
                    "title": "static let rightAnkle: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Root Joint Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/root",
                    "title": "static let root: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Spine",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/spine",
                    "title": "static let spine: VNHumanBodyPose3DObservation.JointName",
                    "type": "property"
                  },
                  {
                    "title": "Creating a Joint Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname/init(rawvalue:)",
                    "title": "init(rawValue: VNRecognizedPointKey)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodypose3dobservation/jointname",
                "title": "VNHumanBodyPose3DObservation.JointName",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the Group Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/all",
                    "title": "static let all: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/head",
                    "title": "static let head: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftarm",
                    "title": "static let leftArm: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/leftleg",
                    "title": "static let leftLeg: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightarm",
                    "title": "static let rightArm: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/rightleg",
                    "title": "static let rightLeg: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/torso",
                    "title": "static let torso: VNHumanBodyPose3DObservation.JointsGroupName",
                    "type": "property"
                  },
                  {
                    "title": "Creating a Group Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname/init(rawvalue:)",
                    "title": "init(rawValue: VNRecognizedPointGroupKey)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vnhumanbodypose3dobservation/jointsgroupname",
                "title": "VNHumanBodyPose3DObservation.JointsGroupName",
                "type": "struct"
              },
              {
                "title": "Animal detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequest/results",
                    "title": "var results: [VNRecognizedObjectObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Animals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequest/supportedidentifiers()",
                    "title": "func supportedIdentifiers() throws -> [VNAnimalIdentifier]",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Animals",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalidentifier/cat",
                        "title": "static let cat: VNAnimalIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalidentifier/dog",
                        "title": "static let dog: VNAnimalIdentifier",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalidentifier/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnanimalidentifier",
                    "title": "VNAnimalIdentifier",
                    "type": "struct"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizeanimalsrequest/knownanimalidentifiers(forrevision:)",
                    "title": "class func knownAnimalIdentifiers(forRevision: Int) throws -> [VNAnimalIdentifier]",
                    "type": "method"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequestrevision2",
                    "title": "let VNRecognizeAnimalsRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizeanimalsrequestrevision1",
                    "title": "let VNRecognizeAnimalsRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnrecognizeanimalsrequest",
                "title": "VNRecognizeAnimalsRequest",
                "type": "class"
              },
              {
                "title": "Animal body pose detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/detecting-animal-body-poses-with-vision",
                "title": "Detecting animal body poses with Vision",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Determining Supported Joints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectanimalbodyposerequest/supportedjointnames",
                    "title": "var supportedJointNames: [VNAnimalBodyPoseObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectanimalbodyposerequest/supportedjointsgroupnames",
                    "title": "var supportedJointsGroupNames: [VNAnimalBodyPoseObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectanimalbodyposerequest/results",
                    "title": "var results: [VNAnimalBodyPoseObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vndetectanimalbodyposerequest",
                "title": "VNDetectAnimalBodyPoseRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/availablejointnames",
                    "title": "var availableJointNames: [VNAnimalBodyPoseObservation.JointName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Head Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/lefteartop",
                        "title": "static let leftEarTop: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftearmiddle",
                        "title": "static let leftEarMiddle: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftearbottom",
                        "title": "static let leftEarBottom: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/lefteye",
                        "title": "static let leftEye: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/neck",
                        "title": "static let neck: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/nose",
                        "title": "static let nose: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/righteye",
                        "title": "static let rightEye: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/righteartop",
                        "title": "static let rightEarTop: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightearmiddle",
                        "title": "static let rightEarMiddle: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightearbottom",
                        "title": "static let rightEarBottom: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Leg Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftbackelbow",
                        "title": "static let leftBackElbow: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftfrontelbow",
                        "title": "static let leftFrontElbow: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightfrontelbow",
                        "title": "static let rightFrontElbow: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightbackelbow",
                        "title": "static let rightBackElbow: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftbackknee",
                        "title": "static let leftBackKnee: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftfrontknee",
                        "title": "static let leftFrontKnee: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightbackknee",
                        "title": "static let rightBackKnee: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightfrontknee",
                        "title": "static let rightFrontKnee: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftbackpaw",
                        "title": "static let leftBackPaw: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/leftfrontpaw",
                        "title": "static let leftFrontPaw: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightbackpaw",
                        "title": "static let rightBackPaw: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/rightfrontpaw",
                        "title": "static let rightFrontPaw: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Tail Joint Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/tailtop",
                        "title": "static let tailTop: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/tailmiddle",
                        "title": "static let tailMiddle: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/tailbottom",
                        "title": "static let tailBottom: VNAnimalBodyPoseObservation.JointName",
                        "type": "property"
                      },
                      {
                        "title": "Creating a Joint Name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnanimalbodyposeobservation/jointname",
                    "title": "VNAnimalBodyPoseObservation.JointName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/availablejointgroupnames",
                    "title": "var availableJointGroupNames: [VNAnimalBodyPoseObservation.JointsGroupName]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Group Names",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/all",
                        "title": "static let all: VNAnimalBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/forelegs",
                        "title": "static let forelegs: VNAnimalBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/head",
                        "title": "static let head: VNAnimalBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/hindlegs",
                        "title": "static let hindlegs: VNAnimalBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/tail",
                        "title": "static let tail: VNAnimalBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/trunk",
                        "title": "static let trunk: VNAnimalBodyPoseObservation.JointsGroupName",
                        "type": "property"
                      },
                      {
                        "title": "Creating a Group Name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname/init(rawvalue:)",
                        "title": "init(rawValue: VNRecognizedPointGroupKey)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnanimalbodyposeobservation/jointsgroupname",
                    "title": "VNAnimalBodyPoseObservation.JointsGroupName",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/recognizedpoint(_:)",
                    "title": "func recognizedPoint(VNAnimalBodyPoseObservation.JointName) throws -> VNRecognizedPoint",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnanimalbodyposeobservation/recognizedpoints(_:)",
                    "title": "func recognizedPoints(VNAnimalBodyPoseObservation.JointsGroupName) throws -> [VNAnimalBodyPoseObservation.JointName : VNRecognizedPoint]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnanimalbodyposeobservation",
                "title": "VNAnimalBodyPoseObservation",
                "type": "class"
              },
              {
                "title": "Trajectory detection",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/identifying-trajectories-in-video",
                "title": "Identifying Trajectories in Video",
                "type": "article"
              },
              {
                "path": "/documentation/vision/detecting-moving-objects-in-a-video",
                "title": "Detecting moving objects in a video",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/init(frameanalysisspacing:trajectorylength:completionhandler:)",
                    "title": "init(frameAnalysisSpacing: CMTime, trajectoryLength: Int, completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/targetframetime",
                    "title": "var targetFrameTime: CMTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/trajectorylength",
                    "title": "var trajectoryLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/objectminimumnormalizedradius",
                    "title": "var objectMinimumNormalizedRadius: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/objectmaximumnormalizedradius",
                    "title": "var objectMaximumNormalizedRadius: Float",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/minimumobjectsize",
                    "title": "var minimumObjectSize: Float",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/maximumobjectsize",
                    "title": "var maximumObjectSize: Float",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequest/results",
                    "title": "var results: [VNTrajectoryObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Evaluating an Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/detectedpoints",
                        "title": "var detectedPoints: [VNPoint]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/projectedpoints",
                        "title": "var projectedPoints: [VNPoint]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/equationcoefficients",
                        "title": "var equationCoefficients: simd_float3",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vntrajectoryobservation/movingaverageradius",
                        "title": "var movingAverageRadius: CGFloat",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vntrajectoryobservation",
                    "title": "VNTrajectoryObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttrajectoriesrequestrevision1",
                    "title": "let VNDetectTrajectoriesRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecttrajectoriesrequest",
                "title": "VNDetectTrajectoriesRequest",
                "type": "class"
              },
              {
                "title": "Contour detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/contrastadjustment",
                    "title": "var contrastAdjustment: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/contrastpivot",
                    "title": "var contrastPivot: NSNumber?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/detectsdarkonlight",
                    "title": "var detectsDarkOnLight: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/maximumimagedimension",
                    "title": "var maximumImageDimension: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectcontoursrequest/detectdarkonlight",
                    "title": "var detectDarkOnLight: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontoursrequest/results",
                    "title": "var results: [VNContoursObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting the Observation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/contourcount",
                        "title": "var contourCount: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/normalizedpath",
                        "title": "var normalizedPath: CGPath",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/toplevelcontours",
                        "title": "var topLevelContours: [VNContour]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/toplevelcontourcount",
                        "title": "var topLevelContourCount: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/contour(at:)-9on0y",
                        "title": "func contour(at: Int) throws -> VNContour",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/vncontoursobservation/contour(at:)-52odo",
                        "title": "func contour(at: IndexPath) throws -> VNContour",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting the Contour",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vncontour/aspectratio",
                            "title": "var aspectRatio: Float",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/indexpath",
                            "title": "var indexPath: IndexPath",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/normalizedpath",
                            "title": "var normalizedPath: CGPath",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/pointcount",
                            "title": "var pointCount: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/normalizedpoints-8n2s5",
                            "title": "var normalizedPoints: [simd_float2]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/polygonapproximation(epsilon:)",
                            "title": "func polygonApproximation(epsilon: Float) throws -> VNContour",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Child Contours",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vncontour/childcontourcount",
                            "title": "var childContourCount: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/childcontours",
                            "title": "var childContours: [VNContour]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/vision/vncontour/childcontour(at:)",
                            "title": "func childContour(at: Int) throws -> VNContour",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/vision/vncontour",
                        "title": "VNContour",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/vision/vncontoursobservation",
                    "title": "VNContoursObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectcontourrequestrevision1",
                    "title": "let VNDetectContourRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectcontoursrequest",
                "title": "VNDetectContoursRequest",
                "type": "class"
              },
              {
                "title": "Optical flow",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.property",
                    "title": "var computationAccuracy: VNGenerateOpticalFlowRequest.ComputationAccuracy",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accuracy Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/low",
                        "title": "case low",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/medium",
                        "title": "case medium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/high",
                        "title": "case high",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                        "title": "case veryHigh",
                        "type": "case"
                      },
                      {
                        "title": "Creating an Accuracy Level",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vngenerateopticalflowrequest/computationaccuracy-swift.enum",
                    "title": "VNGenerateOpticalFlowRequest.ComputationAccuracy",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/outputpixelformat",
                    "title": "var outputPixelFormat: OSType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/keepnetworkoutput",
                    "title": "var keepNetworkOutput: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequest/results",
                    "title": "var results: [VNPixelBufferObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequestrevision2",
                    "title": "let VNGenerateOpticalFlowRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/vision/vngenerateopticalflowrequestrevision1",
                    "title": "let VNGenerateOpticalFlowRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vngenerateopticalflowrequest",
                "title": "VNGenerateOpticalFlowRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Optical Flow",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/init(completionhandler:)",
                    "title": "init(completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring the Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.property",
                    "title": "var computationAccuracy: VNTrackOpticalFlowRequest.ComputationAccuracy",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/low",
                        "title": "case low",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/medium",
                        "title": "case medium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/high",
                        "title": "case high",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                        "title": "case veryHigh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/low",
                        "title": "case low",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/medium",
                        "title": "case medium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/high",
                        "title": "case high",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/veryhigh",
                        "title": "case veryHigh",
                        "type": "case"
                      },
                      {
                        "title": "Creating an Accuracy Option",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vntrackopticalflowrequest/computationaccuracy-swift.enum",
                    "title": "VNTrackOpticalFlowRequest.ComputationAccuracy",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/keepnetworkoutput",
                    "title": "var keepNetworkOutput: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/outputpixelformat",
                    "title": "var outputPixelFormat: OSType",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackopticalflowrequest/results",
                    "title": "var results: [VNPixelBufferObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntrackopticalflowrequest",
                "title": "VNTrackOpticalFlowRequest",
                "type": "class"
              },
              {
                "title": "Barcode detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Symbologies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/supportedsymbologies()",
                    "title": "func supportedSymbologies() throws -> [VNBarcodeSymbology]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/symbologies",
                    "title": "var symbologies: [VNBarcodeSymbology]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/coalescecompositesymbologies",
                    "title": "var coalesceCompositeSymbologies: Bool",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Supported Symbologies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/aztec-s3va",
                        "title": "static let aztec: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/codabar",
                        "title": "static let codabar: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39-2ggrb",
                        "title": "static let code39: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39checksum-3jdl6",
                        "title": "static let code39Checksum: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39fullascii-942jj",
                        "title": "static let code39FullASCII: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code39fullasciichecksum-6700",
                        "title": "static let code39FullASCIIChecksum: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code93-2geph",
                        "title": "static let code93: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code93i-t5q5",
                        "title": "static let code93i: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/code128-1lkm2",
                        "title": "static let code128: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/datamatrix-6tg7m",
                        "title": "static let dataMatrix: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/ean8-9qg0n",
                        "title": "static let ean8: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/ean13-7gb2d",
                        "title": "static let ean13: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/gs1databar",
                        "title": "static let gs1DataBar: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/gs1databarexpanded",
                        "title": "static let gs1DataBarExpanded: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/gs1databarlimited",
                        "title": "static let gs1DataBarLimited: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/i2of5-cyk4",
                        "title": "static let i2of5: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/i2of5checksum-999jm",
                        "title": "static let i2of5Checksum: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/itf14-9mbkq",
                        "title": "static let itf14: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/micropdf417",
                        "title": "static let microPDF417: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/microqr",
                        "title": "static let microQR: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/msiplessey",
                        "title": "static let msiPlessey: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/pdf417-8n3oh",
                        "title": "static let pdf417: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/qr-2l1ve",
                        "title": "static let qr: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/upce-1jtoc",
                        "title": "static let upce: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "title": "Deprecated Symbols",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/aztec-6g0vi",
                        "title": "static var Aztec: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code128-7spp7",
                        "title": "static var Code128: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code39-34358",
                        "title": "static var Code39: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code39checksum-2jrn",
                        "title": "static var Code39Checksum: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code39fullascii-m5wd",
                        "title": "static var Code39FullASCII: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code39fullasciichecksum-5xnfs",
                        "title": "static var Code39FullASCIIChecksum: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code93-67nn0",
                        "title": "static var Code93: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/code93i-84cmv",
                        "title": "static var Code93i: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/datamatrix-2fgc9",
                        "title": "static var DataMatrix: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/ean8-4rzbb",
                        "title": "static var EAN8: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/ean13-8ir8e",
                        "title": "static var EAN13: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/i2of5-1r8e7",
                        "title": "static var I2of5: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/i2of5checksum-832s5",
                        "title": "static var I2of5Checksum: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/itf14-1wp9s",
                        "title": "static var ITF14: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/pdf417-56ney",
                        "title": "static var PDF417: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/qr-2zqax",
                        "title": "static var QR: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/vision/vnbarcodesymbology/upce-7qps5",
                        "title": "static var UPCE: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodesymbology/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnbarcodesymbology",
                    "title": "VNBarcodeSymbology",
                    "type": "struct"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectbarcodesrequest/supportedsymbologies",
                    "title": "class var supportedSymbologies: [VNBarcodeSymbology]",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequest/results",
                    "title": "var results: [VNBarcodeObservation]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing the Payload",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/payloadstringvalue",
                        "title": "var payloadStringValue: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/payloaddata",
                        "title": "var payloadData: Data?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/supplementalpayloadstring",
                        "title": "var supplementalPayloadString: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/supplementalpayloaddata",
                        "title": "var supplementalPayloadData: Data?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/supplementalcompositetype",
                        "title": "var supplementalCompositeType: VNBarcodeCompositeType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/isgs1datacarrier",
                        "title": "var isGS1DataCarrier: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Reading Barcode Descriptors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/barcodedescriptor",
                        "title": "var barcodeDescriptor: CIBarcodeDescriptor?",
                        "type": "property"
                      },
                      {
                        "title": "Identifying Barcode Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/symbology",
                        "title": "var symbology: VNBarcodeSymbology",
                        "type": "property"
                      },
                      {
                        "title": "Identifying Barcode Colors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnbarcodeobservation/iscolorinverted",
                        "title": "var isColorInverted: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vnbarcodeobservation",
                    "title": "VNBarcodeObservation",
                    "type": "class"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetectbarcodesrequestrevision3",
                    "title": "let VNDetectBarcodesRequestRevision3: Int",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectbarcodesrequestrevision2",
                    "title": "let VNDetectBarcodesRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vndetectbarcodesrequestrevision1",
                    "title": "let VNDetectBarcodesRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetectbarcodesrequest",
                "title": "VNDetectBarcodesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Composite Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/gs1typea",
                    "title": "case gs1TypeA",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/gs1typeb",
                    "title": "case gs1TypeB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/gs1typec",
                    "title": "case gs1TypeC",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/linked",
                    "title": "case linked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "title": "Creating a Composite Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnbarcodecompositetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vnbarcodecompositetype",
                "title": "VNBarcodeCompositeType",
                "type": "enum"
              },
              {
                "title": "Text detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttextrectanglesrequest/reportcharacterboxes",
                    "title": "var reportCharacterBoxes: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttextrectanglesrequest/results",
                    "title": "var results: [VNTextObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecttextrectanglesrequestrevision1",
                    "title": "let VNDetectTextRectanglesRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecttextrectanglesrequest",
                "title": "VNDetectTextRectanglesRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Finding Individual Characters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntextobservation/characterboxes",
                    "title": "var characterBoxes: [VNRectangleObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntextobservation",
                "title": "VNTextObservation",
                "type": "class"
              },
              {
                "title": "Text recognition",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizing-text-in-images",
                "title": "Recognizing Text in Images",
                "type": "article"
              },
              {
                "external": true,
                "path": "/documentation/visionkit/structuring_recognized_text_on_a_document",
                "title": "Structuring Recognized Text on a Document",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/extracting-phone-numbers-from-text-in-images",
                "title": "Extracting phone numbers from text in images",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/locating-and-displaying-recognized-text",
                "title": "Locating and displaying recognized text",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Customizing Recognition Constraints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/minimumtextheight",
                    "title": "var minimumTextHeight: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/recognitionlevel",
                    "title": "var recognitionLevel: VNRequestTextRecognitionLevel",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Recognition Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttextrecognitionlevel/fast",
                        "title": "case fast",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttextrecognitionlevel/accurate",
                        "title": "case accurate",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Recognition Level",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrequesttextrecognitionlevel/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnrequesttextrecognitionlevel",
                    "title": "VNRequestTextRecognitionLevel",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/results",
                    "title": "var results: [VNRecognizedTextObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Language",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/automaticallydetectslanguage",
                    "title": "var automaticallyDetectsLanguage: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/recognitionlanguages",
                    "title": "var recognitionLanguages: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/useslanguagecorrection",
                    "title": "var usesLanguageCorrection: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/customwords",
                    "title": "var customWords: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequest/supportedrecognitionlanguages()",
                    "title": "func supportedRecognitionLanguages() throws -> [String]",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizetextrequest/supportedrecognitionlanguages(for:revision:)",
                    "title": "class func supportedRecognitionLanguages(for: VNRequestTextRecognitionLevel, revision: Int) throws -> [String]",
                    "type": "method"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizetextrequestrevision3",
                    "title": "let VNRecognizeTextRequestRevision3: Int",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizetextrequestrevision2",
                    "title": "let VNRecognizeTextRequestRevision2: Int",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnrecognizetextrequestrevision1",
                    "title": "let VNRecognizeTextRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnrecognizetextrequest",
                "title": "VNRecognizeTextRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Recognized Text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedtextobservation/topcandidates(_:)",
                    "title": "func topCandidates(Int) -> [VNRecognizedText]",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Recognized Text",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedtext/string",
                        "title": "var string: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedtext/confidence",
                        "title": "var confidence: VNConfidence",
                        "type": "property"
                      },
                      {
                        "title": "Locating Recognized Text",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnrecognizedtext/boundingbox(for:)",
                        "title": "func boundingBox(for: Range<String.Index>) throws -> VNRectangleObservation?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnrecognizedtext",
                    "title": "VNRecognizedText",
                    "type": "class"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedtextobservation",
                "title": "VNRecognizedTextObservation",
                "type": "class"
              },
              {
                "title": "Object recognition",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/recognizing-objects-in-live-capture",
                "title": "Recognizing Objects in Live Capture",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/coreml/model_integration_samples/understanding_a_dice_roll_with_vision_and_object_detection",
                "title": "Understanding a Dice Roll with Vision and Object Detection",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Classifying a Recognized Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrecognizedobjectobservation/labels",
                    "title": "var labels: [VNClassificationObservation]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Classification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/identifier",
                        "title": "var identifier: String",
                        "type": "property"
                      },
                      {
                        "title": "Measuring Confidence and Precision",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasprecisionrecallcurve",
                        "title": "var hasPrecisionRecallCurve: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumprecision(_:forrecall:)",
                        "title": "func hasMinimumPrecision(Float, forRecall: Float) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/vision/vnclassificationobservation/hasminimumrecall(_:forprecision:)",
                        "title": "func hasMinimumRecall(Float, forPrecision: Float) -> Bool",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/vision/vnclassificationobservation",
                    "title": "VNClassificationObservation",
                    "type": "class"
                  }
                ],
                "path": "/documentation/vision/vnrecognizedobjectobservation",
                "title": "VNRecognizedObjectObservation",
                "type": "class"
              },
              {
                "title": "Request progress tracking",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Tracking Progress",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnrequestprogressproviding/progresshandler",
                    "title": "var progressHandler: VNRequestProgressHandler",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnrequestprogressproviding/indeterminate",
                    "title": "var indeterminate: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnrequestprogressproviding",
                "title": "VNRequestProgressProviding",
                "type": "protocol"
              },
              {
                "path": "/documentation/vision/vnrequestprogresshandler",
                "title": "VNRequestProgressHandler",
                "type": "typealias"
              },
              {
                "title": "Horizon detection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthorizonrequest/results",
                    "title": "var results: [VNHorizonObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vndetecthorizonrequestrevision1",
                    "title": "let VNDetectHorizonRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vndetecthorizonrequest",
                "title": "VNDetectHorizonRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Evaluating the Horizon",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhorizonobservation/angle",
                    "title": "var angle: CGFloat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhorizonobservation/transform",
                    "title": "var transform: CGAffineTransform",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnhorizonobservation/transform(forimagewidth:height:)",
                    "title": "func transform(forImageWidth: Int, height: Int) -> CGAffineTransform",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnhorizonobservation",
                "title": "VNHorizonObservation",
                "type": "class"
              },
              {
                "title": "Image alignment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/aligning-similar-images",
                "title": "Aligning Similar Images",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcgimage:options:completionhandler:)",
                    "title": "init(targetedCGImage: CGImage, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcgimage:orientation:options:completionhandler:)",
                    "title": "init(targetedCGImage: CGImage, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedciimage:options:completionhandler:)",
                    "title": "init(targetedCIImage: CIImage, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedciimage:orientation:options:completionhandler:)",
                    "title": "init(targetedCIImage: CIImage, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcvpixelbuffer:options:completionhandler:)",
                    "title": "init(targetedCVPixelBuffer: CVPixelBuffer, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcvpixelbuffer:orientation:options:completionhandler:)",
                    "title": "init(targetedCVPixelBuffer: CVPixelBuffer, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcmsamplebuffer:options:completionhandler:)",
                    "title": "init(targetedCMSampleBuffer: CMSampleBuffer, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedcmsamplebuffer:orientation:options:completionhandler:)",
                    "title": "init(targetedCMSampleBuffer: CMSampleBuffer, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimagedata:options:completionhandler:)",
                    "title": "init(targetedImageData: Data, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimagedata:orientation:options:completionhandler:)",
                    "title": "init(targetedImageData: Data, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimageurl:options:completionhandler:)",
                    "title": "init(targetedImageURL: URL, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntargetedimagerequest/init(targetedimageurl:orientation:options:completionhandler:)",
                    "title": "init(targetedImageURL: URL, orientation: CGImagePropertyOrientation, options: [VNImageOption : Any], completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vntargetedimagerequest",
                "title": "VNTargetedImageRequest",
                "type": "class"
              },
              {
                "path": "/documentation/vision/vnimageregistrationrequest",
                "title": "VNImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntranslationalimageregistrationrequest/results",
                    "title": "var results: [VNImageTranslationAlignmentObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntranslationalimageregistrationrequest",
                "title": "VNTranslationalImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Translational Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntracktranslationalimageregistrationrequest/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntracktranslationalimageregistrationrequest/init(completionhandler:)",
                    "title": "init(completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntracktranslationalimageregistrationrequest/results",
                    "title": "var results: [VNImageTranslationAlignmentObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntracktranslationalimageregistrationrequest",
                "title": "VNTrackTranslationalImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhomographicimageregistrationrequest/results",
                    "title": "var results: [VNImageHomographicAlignmentObservation]?",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnhomographicimageregistrationrequestrevision1",
                    "title": "let VNHomographicImageRegistrationRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnhomographicimageregistrationrequest",
                "title": "VNHomographicImageRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Homographic Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackhomographicimageregistrationrequest/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vntrackhomographicimageregistrationrequest/init(completionhandler:)",
                    "title": "init(completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntrackhomographicimageregistrationrequest/results",
                    "title": "var results: [VNImageHomographicAlignmentObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vntrackhomographicimageregistrationrequest",
                "title": "VNTrackHomographicImageRegistrationRequest",
                "type": "class"
              },
              {
                "path": "/documentation/vision/vnimagealignmentobservation",
                "title": "VNImageAlignmentObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Determining Alignment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagetranslationalignmentobservation/alignmenttransform",
                    "title": "var alignmentTransform: CGAffineTransform",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vntranslationalimageregistrationrequestrevision1",
                    "title": "let VNTranslationalImageRegistrationRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vnimagetranslationalignmentobservation",
                "title": "VNImageTranslationAlignmentObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnimagehomographicalignmentobservation/warptransform",
                    "title": "var warpTransform: matrix_float3x3",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vnimagehomographicalignmentobservation",
                "title": "VNImageHomographicAlignmentObservation",
                "type": "class"
              },
              {
                "title": "Image background removal",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/applying-visual-effects-to-foreground-subjects",
                "title": "Applying visual effects to foreground subjects",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Accessing Instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/allinstances",
                    "title": "var allInstances: IndexSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/instancemask",
                    "title": "var instanceMask: CVPixelBuffer",
                    "type": "property"
                  },
                  {
                    "title": "Creating a Mask",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/generatemask(forinstances:)",
                    "title": "func generateMask(forInstances: IndexSet) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/generatemaskedimage(ofinstances:from:croppedtoinstancesextent:)",
                    "title": "func generateMaskedImage(ofInstances: IndexSet, from: VNImageRequestHandler, croppedToInstancesExtent: Bool) throws -> CVPixelBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vninstancemaskobservation/generatescaledmaskforimage(forinstances:from:)",
                    "title": "func generateScaledMaskForImage(forInstances: IndexSet, from: VNImageRequestHandler) throws -> CVPixelBuffer",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vninstancemaskobservation",
                "title": "VNInstanceMaskObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngenerateforegroundinstancemaskrequest/results",
                    "title": "var results: [VNInstanceMaskObservation]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vngenerateforegroundinstancemaskrequest",
                "title": "VNGenerateForegroundInstanceMaskRequest",
                "type": "class"
              },
              {
                "path": "/documentation/vision/vngenerateforegroundinstancemaskrequestrevision1",
                "title": "let VNGenerateForegroundInstanceMaskRequestRevision1: Int",
                "type": "var"
              },
              {
                "title": "Machine learning image analysis",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/coreml/model_integration_samples/classifying_images_with_vision_and_core_ml",
                "title": "Classifying Images with Vision and Core ML",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/vision/training-a-create-ml-model-to-classify-flowers",
                "title": "Training a Create ML Model to Classify Flowers",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing with a Core ML Model",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/init(model:)",
                    "title": "convenience init(model: VNCoreMLModel)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/init(model:completionhandler:)",
                    "title": "init(model: VNCoreMLModel, completionHandler: VNRequestCompletionHandler?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/model",
                    "title": "var model: VNCoreMLModel",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing a Model",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vncoremlmodel/init(for:)",
                        "title": "convenience init(for: MLModel) throws",
                        "type": "init"
                      },
                      {
                        "title": "Providing Features",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vncoremlmodel/featureprovider",
                        "title": "var featureProvider: (any MLFeatureProvider)?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vncoremlmodel/inputimagefeaturename",
                        "title": "var inputImageFeatureName: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/vision/vncoremlmodel",
                    "title": "VNCoreMLModel",
                    "type": "class"
                  },
                  {
                    "title": "Configuring Image Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequest/imagecropandscaleoption",
                    "title": "var imageCropAndScaleOption: VNImageCropAndScaleOption",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Crop and Scale Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/centercrop",
                        "title": "case centerCrop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefit",
                        "title": "case scaleFit",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefill",
                        "title": "case scaleFill",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefitrotate90ccw",
                        "title": "case scaleFitRotate90CCW",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/scalefillrotate90ccw",
                        "title": "case scaleFillRotate90CCW",
                        "type": "case"
                      },
                      {
                        "title": "Creating a Scale Option",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnimagecropandscaleoption/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/vision/vnimagecropandscaleoption",
                    "title": "VNImageCropAndScaleOption",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying Request Revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlrequestrevision1",
                    "title": "let VNCoreMLRequestRevision1: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/vision/vncoremlrequest",
                "title": "VNCoreMLRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Determining Classification",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/identifier",
                    "title": "var identifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Measuring Confidence and Precision",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/hasprecisionrecallcurve",
                    "title": "var hasPrecisionRecallCurve: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/hasminimumprecision(_:forrecall:)",
                    "title": "func hasMinimumPrecision(Float, forRecall: Float) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnclassificationobservation/hasminimumrecall(_:forprecision:)",
                    "title": "func hasMinimumRecall(Float, forPrecision: Float) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnclassificationobservation",
                "title": "VNClassificationObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Parsing Observation Content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnpixelbufferobservation/pixelbuffer",
                    "title": "var pixelBuffer: CVPixelBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnpixelbufferobservation/featurename",
                    "title": "var featureName: String?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the supported pixel formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeneratepersonsegmentationrequest/supportedoutputpixelformats()",
                    "title": "func supportedOutputPixelFormats() throws -> [NSNumber]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnpixelbufferobservation",
                "title": "VNPixelBufferObservation",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Feature Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncoremlfeaturevalueobservation/featurevalue",
                    "title": "var featureValue: MLFeatureValue",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncoremlfeaturevalueobservation/featurename",
                    "title": "var featureName: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/vision/vncoremlfeaturevalueobservation",
                "title": "VNCoreMLFeatureValueObservation",
                "type": "class"
              },
              {
                "title": "Coordinate conversion",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vnimagepointfornormalizedpoint(_:_:_:)",
                "title": "func VNImagePointForNormalizedPoint(CGPoint, Int, Int) -> CGPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedpointforimagepoint(_:_:_:)",
                "title": "func VNNormalizedPointForImagePoint(CGPoint, Int, Int) -> CGPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagepointfornormalizedpointusingregionofinterest(_:_:_:_:)",
                "title": "func VNImagePointForNormalizedPointUsingRegionOfInterest(CGPoint, Int, Int, CGRect) -> CGPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedpointforimagepointusingregionofinterest(_:_:_:_:)",
                "title": "func VNNormalizedPointForImagePointUsingRegionOfInterest(CGPoint, Int, Int, CGRect) -> CGPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagerectfornormalizedrect(_:_:_:)",
                "title": "func VNImageRectForNormalizedRect(CGRect, Int, Int) -> CGRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedrectforimagerect(_:_:_:)",
                "title": "func VNNormalizedRectForImageRect(CGRect, Int, Int) -> CGRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagerectfornormalizedrectusingregionofinterest(_:_:_:_:)",
                "title": "func VNImageRectForNormalizedRectUsingRegionOfInterest(CGRect, Int, Int, CGRect) -> CGRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedrectforimagerectusingregionofinterest(_:_:_:_:)",
                "title": "func VNNormalizedRectForImageRectUsingRegionOfInterest(CGRect, Int, Int, CGRect) -> CGRect",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedidentityrect",
                "title": "let VNNormalizedIdentityRect: CGRect",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnnormalizedrectisidentityrect(_:)",
                "title": "func VNNormalizedRectIsIdentityRect(CGRect) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnimagepointforfacelandmarkpoint(_:_:_:_:)",
                "title": "func VNImagePointForFaceLandmarkPoint(vector_float2, CGRect, Int, Int) -> CGPoint",
                "type": "func"
              },
              {
                "path": "/documentation/vision/vnnormalizedfaceboundingboxpointforlandmarkpoint(_:_:_:_:)",
                "title": "func VNNormalizedFaceBoundingBoxPointForLandmarkPoint(vector_float2, CGRect, Int, Int) -> CGPoint",
                "type": "func"
              },
              {
                "title": "Utilities",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Get the Compute Stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncomputestage/main",
                    "title": "static let main: VNComputeStage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncomputestage/postprocessing",
                    "title": "static let postProcessing: VNComputeStage",
                    "type": "property"
                  },
                  {
                    "title": "Create a Compute Stage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncomputestage/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vncomputestage",
                "title": "VNComputeStage",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Calculating Bounding Circles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/boundingcircle(for:)-423ll",
                    "title": "class func boundingCircle(for: VNContour) throws -> VNCircle",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/boundingcircle(for:)-9dggv",
                    "title": "class func boundingCircle(for: [VNPoint]) throws -> VNCircle",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/boundingcircle(forsimdpoints:pointcount:)",
                    "title": "class func boundingCircle(forSIMDPoints: UnsafePointer<simd_float2>, pointCount: Int) throws -> VNCircle",
                    "type": "method"
                  },
                  {
                    "title": "Calculating Area and Perimeter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/calculatearea(_:for:orientedarea:)",
                    "title": "class func calculateArea(UnsafeMutablePointer<Double>, for: VNContour, orientedArea: Bool) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vngeometryutils/calculateperimeter(_:for:)",
                    "title": "class func calculatePerimeter(UnsafeMutablePointer<Double>, for: VNContour) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vngeometryutils",
                "title": "VNGeometryUtils",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Video Processor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/init(url:)",
                    "title": "init(url: URL)",
                    "type": "init"
                  },
                  {
                    "title": "Performing Requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/addrequest(_:processingoptions:)",
                    "title": "func addRequest(VNRequest, processingOptions: VNVideoProcessor.RequestProcessingOptions) throws",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/vision/vnvideoprocessor/requestprocessingoptions/cadence",
                        "title": "var cadence: VNVideoProcessor.Cadence?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/vision/vnvideoprocessor/cadence",
                        "title": "VNVideoProcessor.Cadence",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Cadence",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/frameratecadence/init(_:)",
                            "title": "init(Int)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting the Frame Rate",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/frameratecadence/framerate",
                            "title": "var frameRate: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnvideoprocessor/frameratecadence",
                        "title": "VNVideoProcessor.FrameRateCadence",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Cadence",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/timeintervalcadence/init(_:)",
                            "title": "init(CFTimeInterval)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting the Time Interval",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/vision/vnvideoprocessor/timeintervalcadence/timeinterval",
                            "title": "var timeInterval: CFTimeInterval",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/vision/vnvideoprocessor/timeintervalcadence",
                        "title": "VNVideoProcessor.TimeIntervalCadence",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/vision/vnvideoprocessor/requestprocessingoptions",
                    "title": "VNVideoProcessor.RequestProcessingOptions",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/removerequest(_:)",
                    "title": "func removeRequest(VNRequest) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/analyze(_:)",
                    "title": "func analyze(CMTimeRange) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvideoprocessor/cancel()",
                    "title": "func cancel()",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Video Processing Options",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Options",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/vision/vnvideoprocessingoption/framecadence",
                            "title": "static let frameCadence: VNVideoProcessingOption",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/vision/vnvideoprocessingoption/timeinterval",
                            "title": "static let timeInterval: VNVideoProcessingOption",
                            "type": "property"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/vision/vnvideoprocessingoption/init(rawvalue:)",
                            "title": "init(rawValue: String)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/vision/vnvideoprocessingoption",
                        "title": "VNVideoProcessingOption",
                        "type": "struct"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/vision/vnvideoprocessor/add(_:withprocessingoptions:)",
                    "title": "func add(VNRequest, withProcessingOptions: [VNVideoProcessingOption : Any]) throws",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/vision/vnvideoprocessor/analyze(with:)",
                    "title": "func analyze(with: CMTimeRange) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnvideoprocessor",
                "title": "VNVideoProcessor",
                "type": "class"
              },
              {
                "title": "Common data types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Circle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncircle/init(center:radius:)",
                    "title": "init(center: VNPoint, radius: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vncircle/init(center:diameter:)",
                    "title": "convenience init(center: VNPoint, diameter: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vncircle/zero",
                    "title": "class var zero: VNCircle",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting a Circle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vncircle/center",
                    "title": "var center: VNPoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncircle/diameter",
                    "title": "var diameter: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncircle/radius",
                    "title": "var radius: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vncircle/contains(_:)",
                    "title": "func contains(VNPoint) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vncircle/contains(_:incircumferentialringofwidth:)",
                    "title": "func contains(VNPoint, inCircumferentialRingOfWidth: Double) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vncircle",
                "title": "VNCircle",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Vector",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(byadding:to:)",
                    "title": "init(byAdding: VNVector, to: VNVector)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(bysubtracting:from:)",
                    "title": "init(bySubtracting: VNVector, from: VNVector)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(bymultiplying:byscalar:)",
                    "title": "init(byMultiplying: VNVector, byScalar: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(r:theta:)",
                    "title": "convenience init(r: Double, theta: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(vectorhead:tail:)",
                    "title": "convenience init(vectorHead: VNPoint, tail: VNPoint)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnvector/init(xcomponent:ycomponent:)",
                    "title": "init(xComponent: Double, yComponent: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/vision/vnvector/zero",
                    "title": "class var zero: VNVector",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting a Vector",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnvector/length",
                    "title": "var length: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/r",
                    "title": "var r: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/theta",
                    "title": "var theta: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/squaredlength",
                    "title": "var squaredLength: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/x",
                    "title": "var x: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/y",
                    "title": "var y: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/vision/vnvector/dotproduct(of:vector:)",
                    "title": "class func dotProduct(of: VNVector, vector: VNVector) -> Double",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/vision/vnvector/unitvector(for:)",
                    "title": "class func unitVector(for: VNVector) -> VNVector",
                    "type": "method"
                  }
                ],
                "path": "/documentation/vision/vnvector",
                "title": "VNVector",
                "type": "class"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vnerrordomain",
                "title": "let VNErrorDomain: String",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/turicoreerrorcode",
                    "title": "case turiCoreErrorCode",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/ok",
                    "title": "case OK",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/dataunavailable",
                    "title": "case dataUnavailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/internalerror",
                    "title": "case internalError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidargument",
                    "title": "case invalidArgument",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidformat",
                    "title": "case invalidFormat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidimage",
                    "title": "case invalidImage",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidmodel",
                    "title": "case invalidModel",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidoperation",
                    "title": "case invalidOperation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/invalidoption",
                    "title": "case invalidOption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/ioerror",
                    "title": "case ioError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/missingoption",
                    "title": "case missingOption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/notimplemented",
                    "title": "case notImplemented",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/operationfailed",
                    "title": "case operationFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/outofboundserror",
                    "title": "case outOfBoundsError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/outofmemory",
                    "title": "case outOfMemory",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/requestcancelled",
                    "title": "case requestCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/timestampnotfound",
                    "title": "case timeStampNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unknownerror",
                    "title": "case unknownError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedrevision",
                    "title": "case unsupportedRevision",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedrequest",
                    "title": "case unsupportedRequest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedcomputedevice",
                    "title": "case unsupportedComputeDevice",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/unsupportedcomputestage",
                    "title": "case unsupportedComputeStage",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/timeout",
                    "title": "case timeout",
                    "type": "case"
                  },
                  {
                    "title": "Creating an Error Code",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/vision/vnerrorcode/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/vision/vnerrorcode",
                "title": "VNErrorCode",
                "type": "enum"
              },
              {
                "title": "Version and revision numbers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vnvisionversionnumber",
                "title": "var VNVisionVersionNumber: Double",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetectanimalbodyposerequestrevision1",
                "title": "let VNDetectAnimalBodyPoseRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetecthumanbodypose3drequestrevision1",
                "title": "let VNDetectHumanBodyPose3DRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vntrackhomographicimageregistrationrequestrevision1",
                "title": "let VNTrackHomographicImageRegistrationRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vntracktranslationalimageregistrationrequestrevision1",
                "title": "let VNTrackTranslationalImageRegistrationRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vntrackopticalflowrequestrevision1",
                "title": "let VNTrackOpticalFlowRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnclassifyimagerequestrevision1",
                "title": "let VNClassifyImageRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnclassifyimagerequestrevision2",
                "title": "let VNClassifyImageRequestRevision2: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateobjectnessbasedsaliencyimagerequestrevision2",
                "title": "let VNGenerateObjectnessBasedSaliencyImageRequestRevision2: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateattentionbasedsaliencyimagerequestrevision2",
                "title": "let VNGenerateAttentionBasedSaliencyImageRequestRevision2: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision1",
                "title": "let VNGenerateImageFeaturePrintRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vngenerateimagefeatureprintrequestrevision2",
                "title": "let VNGenerateImageFeaturePrintRequestRevision2: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetectfacecapturequalityrequestrevision3",
                "title": "let VNDetectFaceCaptureQualityRequestRevision3: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vndetectbarcodesrequestrevision4",
                "title": "let VNDetectBarcodesRequestRevision4: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vncalculateimageaestheticsscoresrequestrevision1",
                "title": "let VNCalculateImageAestheticsScoresRequestRevision1: Int",
                "type": "var"
              },
              {
                "path": "/documentation/vision/vnrequestrevisionunspecified",
                "title": "let VNRequestRevisionUnspecified: Int",
                "type": "var"
              },
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/vision-macros",
                "title": "Macros",
                "type": "collection"
              }
            ],
            "path": "/documentation/vision/original-objective-c-and-swift-api",
            "title": "Original Objective-C and Swift API",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/vision/imagecoordinateconversionhelpers/imagepointfornormalizedpoint(normalizedpoint:imagesize:)",
                "title": "static func imagePointForNormalizedPoint(normalizedPoint: CGPoint, imageSize: CGSize) -> CGPoint",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagecoordinateconversionhelpers/imagerectfornormalizedrect(normalizedrect:imagesize:)",
                "title": "static func imageRectForNormalizedRect(normalizedRect: CGRect, imageSize: CGSize) -> CGRect",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagecoordinateconversionhelpers/verticallyflippedimagepoint(imagepoint:imageheight:)",
                "title": "static func verticallyFlippedImagePoint(imagePoint: CGPoint, imageHeight: UInt32) -> CGPoint",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagecoordinateconversionhelpers/verticallyflippedimagerect(imagerect:imageheight:)",
                "title": "static func verticallyFlippedImageRect(imageRect: CGRect, imageHeight: UInt32) -> CGRect",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagecoordinateconversionhelpers/verticallyflippednormalizedpoint(normalizedpoint:)",
                "title": "static func verticallyFlippedNormalizedPoint(normalizedPoint: CGPoint) -> CGPoint",
                "type": "method"
              },
              {
                "path": "/documentation/vision/imagecoordinateconversionhelpers/verticallyflippednormalizedrect(normalizedrect:imageheight:)",
                "title": "static func verticallyFlippedNormalizedRect(normalizedRect: CGRect, imageHeight: UInt32) -> CGRect",
                "type": "method"
              }
            ],
            "path": "/documentation/vision/imagecoordinateconversionhelpers",
            "title": "ImageCoordinateConversionHelpers",
            "type": "struct"
          },
          {
            "path": "/documentation/vision/imagepixeldimensions",
            "title": "ImagePixelDimensions",
            "type": "struct"
          },
          {
            "path": "/documentation/vision/resourceversion",
            "title": "ResourceVersion",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Options",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/vision/vnvideoprocessingoption/framecadence",
                "title": "static let frameCadence: VNVideoProcessingOption",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/vision/vnvideoprocessingoption/timeinterval",
                "title": "static let timeInterval: VNVideoProcessingOption",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/vision/vnvideoprocessingoption/init(rawvalue:)",
                "title": "init(rawValue: String)",
                "type": "init"
              }
            ],
            "deprecated": true,
            "path": "/documentation/vision/vnvideoprocessingoption",
            "title": "VNVideoProcessingOption",
            "type": "struct"
          },
          {
            "title": "Type Aliases",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/vision/detectorkey",
            "title": "DetectorKey",
            "type": "typealias"
          },
          {
            "path": "/documentation/vision/namedmultipleobjectdataaccessblock",
            "title": "NamedMultipleObjectDataAccessBlock",
            "type": "typealias"
          },
          {
            "path": "/documentation/vision/namedobjectdataaccessblock",
            "title": "NamedObjectDataAccessBlock",
            "type": "typealias"
          },
          {
            "path": "/documentation/vision/namedobjectsdictionary",
            "title": "NamedObjectsDictionary",
            "type": "typealias"
          }
        ],
        "path": "/documentation/vision",
        "title": "Vision",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
