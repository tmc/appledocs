{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Creating a contact provider extension",
            "type": "groupMarker"
          },
          {
            "title": "Managing an extension in an app",
            "type": "groupMarker"
          },
          {
            "title": "Working with domains",
            "type": "groupMarker"
          },
          {
            "title": "Providing contacts",
            "type": "groupMarker"
          },
          {
            "title": "Receiving contacts",
            "type": "groupMarker"
          },
          {
            "title": "Supporting types",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/contactprovider",
        "title": "ContactProvider",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Creating a contact provider extension",
            "type": "groupMarker"
          },
          {
            "title": "Managing an extension in an app",
            "type": "groupMarker"
          },
          {
            "title": "Working with domains",
            "type": "groupMarker"
          },
          {
            "title": "Providing contacts",
            "type": "groupMarker"
          },
          {
            "title": "Receiving contacts",
            "type": "groupMarker"
          },
          {
            "title": "Supporting types",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/contactprovider",
        "title": "ContactProvider",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Creating a contact provider extension",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Configuring an extension",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactproviderextension/configure(for:)",
                "title": "func configure(for: any ContactProviderDomain)",
                "type": "method"
              },
              {
                "title": "Managing the extension life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactproviderextension/invalidate()",
                "title": "func invalidate() async throws",
                "type": "method"
              }
            ],
            "path": "/documentation/contactprovider/contactproviderextension",
            "title": "ContactProviderExtension",
            "type": "protocol"
          },
          {
            "title": "Managing an extension in an app",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a contact provider manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/init(domainidentifier:)",
                "title": "init(domainIdentifier: String) throws",
                "type": "init"
              },
              {
                "title": "Invoking the app extension",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/signalenumerator(for:)",
                "title": "func signalEnumerator(for: ContactItem.Identifier) async throws",
                "type": "method"
              },
              {
                "title": "Managing the contact provider manager life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/invalidate()",
                "title": "func invalidate() async throws",
                "type": "method"
              },
              {
                "title": "Managing the domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/domain",
                "title": "var domain: any ContactProviderDomain",
                "type": "property"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/enable()",
                "title": "func enable() async throws",
                "type": "method"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/isenabled",
                "title": "var isEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/reset()",
                "title": "func reset() async throws",
                "type": "method"
              },
              {
                "path": "/documentation/contactprovider/contactprovidermanager/disable()",
                "title": "func disable() async throws",
                "type": "method"
              }
            ],
            "path": "/documentation/contactprovider/contactprovidermanager",
            "title": "ContactProviderManager",
            "type": "class"
          },
          {
            "title": "Working with domains",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying the domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactproviderdomain/displayname",
                "title": "var displayName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contactprovider/contactproviderdomain/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "title": "Providing custom domain data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactproviderdomain/userinfo",
                "title": "var userInfo: Dictionary<String, Any>",
                "type": "property"
              }
            ],
            "path": "/documentation/contactprovider/contactproviderdomain",
            "title": "ContactProviderDomain",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a default domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/defaultcontactproviderdomain/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Identifying the domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/defaultcontactproviderdomain/displayname",
                "title": "let displayName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contactprovider/defaultcontactproviderdomain/identifier-swift.property",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "title": "Providing custom domain data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/defaultcontactproviderdomain/userinfo",
                "title": "let userInfo: Dictionary<String, Any>",
                "type": "property"
              },
              {
                "title": "Using the default domain identifier",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/defaultcontactproviderdomain/identifier-swift.type.property",
                "title": "static let identifier: String",
                "type": "property"
              }
            ],
            "path": "/documentation/contactprovider/defaultcontactproviderdomain",
            "title": "DefaultContactProviderDomain",
            "type": "struct"
          },
          {
            "title": "Providing contacts",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Handling item type",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                "type": "case"
              },
              {
                "title": "Identifying the item",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a contact item identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting identifier properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/value",
                    "title": "let value: String",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the root container",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                    "title": "static let rootContainer: ContactItem.Identifier",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                    "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitem/identifier",
                "title": "ContactItem.Identifier",
                "type": "struct"
              },
              {
                "title": "Hashing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitem/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/contactprovider/contactitem/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Comparing contact items",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                "title": "static func == (ContactItem, ContactItem) -> Bool",
                "type": "op"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/contactprovider/contactitem",
            "title": "ContactItem",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Providing an enumeration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemenumerating/enumerator(for:)",
                "title": "func enumerator(for: ContactItem.Identifier) -> any ContactItemEnumerator",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a contact item identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting identifier properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/value",
                    "title": "let value: String",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the root container",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                    "title": "static let rootContainer: ContactItem.Identifier",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                    "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitem/identifier",
                "title": "ContactItem.Identifier",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Enumerating contact items",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemenumerator/enumeratecontent(in:for:)",
                    "title": "func enumerateContent(in: ContactItemPage, for: any ContactItemContentObserver) async",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a contact item page",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/init(generationmarker:offset:)",
                        "title": "init(generationMarker: Data, offset: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Supporting paging",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/generationmarker",
                        "title": "var generationMarker: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/offset",
                        "title": "var offset: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/initialpage",
                        "title": "static let initialPage: ContactItemPage",
                        "type": "property"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Comparing contact item pages",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/==(_:_:)",
                        "title": "static func == (ContactItemPage, ContactItemPage) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitempage/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitempage",
                    "title": "ContactItemPage",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing contact items",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemcontentobserver/didenumerate(_:)",
                        "title": "func didEnumerate([ContactItem])",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Handling item type",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                            "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                            "type": "case"
                          },
                          {
                            "title": "Identifying the item",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating a contact item identifier",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                                "title": "init(String)",
                                "type": "init"
                              },
                              {
                                "title": "Inspecting identifier properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/value",
                                "title": "let value: String",
                                "type": "property"
                              },
                              {
                                "title": "Accessing the root container",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                                "title": "static let rootContainer: ContactItem.Identifier",
                                "type": "property"
                              },
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                                "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/identifier",
                            "title": "ContactItem.Identifier",
                            "type": "struct"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Comparing contact items",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                            "title": "static func == (ContactItem, ContactItem) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem",
                        "title": "ContactItem",
                        "type": "enum"
                      },
                      {
                        "title": "Ending enumeration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingcontent(upto:)",
                        "title": "func didFinishEnumeratingContent(upTo: Data)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingpage(upto:)",
                        "title": "func didFinishEnumeratingPage(upTo: ContactItemPage)",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a contact item page",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/init(generationmarker:offset:)",
                            "title": "init(generationMarker: Data, offset: Int)",
                            "type": "init"
                          },
                          {
                            "title": "Supporting paging",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/generationmarker",
                            "title": "var generationMarker: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/offset",
                            "title": "var offset: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/initialpage",
                            "title": "static let initialPage: ContactItemPage",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "title": "Comparing contact item pages",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/==(_:_:)",
                            "title": "static func == (ContactItemPage, ContactItemPage) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitempage/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitempage/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitempage",
                        "title": "ContactItemPage",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingcontentwitherror(_:)",
                        "title": "func didFinishEnumeratingContentWithError(any Error)",
                        "type": "method"
                      },
                      {
                        "title": "Optimizing enumeration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemcontentobserver/suggestedpagesize",
                        "title": "var suggestedPageSize: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitemcontentobserver",
                    "title": "ContactItemContentObserver",
                    "type": "protocol"
                  },
                  {
                    "title": "Enumerating item changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemenumerator/enumeratechanges(startingat:for:)",
                    "title": "func enumerateChanges(startingAt: ContactItemSyncAnchor, for: any ContactItemChangeObserver) async",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a sync anchor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/init(generationmarker:offset:)",
                        "title": "init(generationMarker: Data, offset: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting sync anchor properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/generationmarker",
                        "title": "var generationMarker: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/offset",
                        "title": "var offset: Int",
                        "type": "property"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/==(_:_:)",
                        "title": "static func == (ContactItemSyncAnchor, ContactItemSyncAnchor) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitemsyncanchor/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitemsyncanchor",
                    "title": "ContactItemSyncAnchor",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing change data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemchangeobserver/didupdate(_:)",
                        "title": "func didUpdate([ContactItem])",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Handling item type",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                            "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                            "type": "case"
                          },
                          {
                            "title": "Identifying the item",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating a contact item identifier",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                                "title": "init(String)",
                                "type": "init"
                              },
                              {
                                "title": "Inspecting identifier properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/value",
                                "title": "let value: String",
                                "type": "property"
                              },
                              {
                                "title": "Accessing the root container",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                                "title": "static let rootContainer: ContactItem.Identifier",
                                "type": "property"
                              },
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                                "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/identifier",
                            "title": "ContactItem.Identifier",
                            "type": "struct"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Comparing contact items",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                            "title": "static func == (ContactItem, ContactItem) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem",
                        "title": "ContactItem",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemchangeobserver/diddelete(_:)",
                        "title": "func didDelete([ContactItem.Identifier])",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a contact item identifier",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting identifier properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/value",
                            "title": "let value: String",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the root container",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                            "title": "static let rootContainer: ContactItem.Identifier",
                            "type": "property"
                          },
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                            "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/identifier",
                        "title": "ContactItem.Identifier",
                        "type": "struct"
                      },
                      {
                        "title": "Ending enumeration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemchangeobserver/didfinishenumeratingchanges(upto:morecoming:)",
                        "title": "func didFinishEnumeratingChanges(upTo: ContactItemSyncAnchor, moreComing: Bool)",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a sync anchor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/init(generationmarker:offset:)",
                            "title": "init(generationMarker: Data, offset: Int)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting sync anchor properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/generationmarker",
                            "title": "var generationMarker: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/offset",
                            "title": "var offset: Int",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/==(_:_:)",
                            "title": "static func == (ContactItemSyncAnchor, ContactItemSyncAnchor) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitemsyncanchor/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitemsyncanchor/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitemsyncanchor",
                        "title": "ContactItemSyncAnchor",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemchangeobserver/didfinishenumeratingchangeswitherror(_:)",
                        "title": "func didFinishEnumeratingChangesWithError(any Error)",
                        "type": "method"
                      },
                      {
                        "title": "Optimizing observer batching",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemchangeobserver/suggestedbatchsize",
                        "title": "var suggestedBatchSize: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitemchangeobserver",
                    "title": "ContactItemChangeObserver",
                    "type": "protocol"
                  },
                  {
                    "title": "Managing enumerator life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemenumerator/invalidate()",
                    "title": "func invalidate() async",
                    "type": "method"
                  }
                ],
                "path": "/documentation/contactprovider/contactitemenumerator",
                "title": "ContactItemEnumerator",
                "type": "protocol"
              }
            ],
            "path": "/documentation/contactprovider/contactitemenumerating",
            "title": "ContactItemEnumerating",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Enumerating contact items",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemenumerator/enumeratecontent(in:for:)",
                "title": "func enumerateContent(in: ContactItemPage, for: any ContactItemContentObserver) async",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a contact item page",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/init(generationmarker:offset:)",
                    "title": "init(generationMarker: Data, offset: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Supporting paging",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/generationmarker",
                    "title": "var generationMarker: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/initialpage",
                    "title": "static let initialPage: ContactItemPage",
                    "type": "property"
                  },
                  {
                    "title": "Encoding and decoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Comparing contact item pages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/==(_:_:)",
                    "title": "static func == (ContactItemPage, ContactItemPage) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitempage/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitempage",
                "title": "ContactItemPage",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Providing contact items",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemcontentobserver/didenumerate(_:)",
                    "title": "func didEnumerate([ContactItem])",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Handling item type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                        "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                        "type": "case"
                      },
                      {
                        "title": "Identifying the item",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a contact item identifier",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting identifier properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/value",
                            "title": "let value: String",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the root container",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                            "title": "static let rootContainer: ContactItem.Identifier",
                            "type": "property"
                          },
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                            "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/identifier",
                        "title": "ContactItem.Identifier",
                        "type": "struct"
                      },
                      {
                        "title": "Hashing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Comparing contact items",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                        "title": "static func == (ContactItem, ContactItem) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem",
                    "title": "ContactItem",
                    "type": "enum"
                  },
                  {
                    "title": "Ending enumeration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingcontent(upto:)",
                    "title": "func didFinishEnumeratingContent(upTo: Data)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingpage(upto:)",
                    "title": "func didFinishEnumeratingPage(upTo: ContactItemPage)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a contact item page",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/init(generationmarker:offset:)",
                        "title": "init(generationMarker: Data, offset: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Supporting paging",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/generationmarker",
                        "title": "var generationMarker: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/offset",
                        "title": "var offset: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/initialpage",
                        "title": "static let initialPage: ContactItemPage",
                        "type": "property"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Comparing contact item pages",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/==(_:_:)",
                        "title": "static func == (ContactItemPage, ContactItemPage) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitempage/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitempage/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitempage",
                    "title": "ContactItemPage",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingcontentwitherror(_:)",
                    "title": "func didFinishEnumeratingContentWithError(any Error)",
                    "type": "method"
                  },
                  {
                    "title": "Optimizing enumeration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemcontentobserver/suggestedpagesize",
                    "title": "var suggestedPageSize: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contactprovider/contactitemcontentobserver",
                "title": "ContactItemContentObserver",
                "type": "protocol"
              },
              {
                "title": "Enumerating item changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemenumerator/enumeratechanges(startingat:for:)",
                "title": "func enumerateChanges(startingAt: ContactItemSyncAnchor, for: any ContactItemChangeObserver) async",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a sync anchor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/init(generationmarker:offset:)",
                    "title": "init(generationMarker: Data, offset: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting sync anchor properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/generationmarker",
                    "title": "var generationMarker: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  },
                  {
                    "title": "Encoding and decoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/==(_:_:)",
                    "title": "static func == (ContactItemSyncAnchor, ContactItemSyncAnchor) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitemsyncanchor/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitemsyncanchor",
                "title": "ContactItemSyncAnchor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Providing change data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemchangeobserver/didupdate(_:)",
                    "title": "func didUpdate([ContactItem])",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Handling item type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                        "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                        "type": "case"
                      },
                      {
                        "title": "Identifying the item",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a contact item identifier",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting identifier properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/value",
                            "title": "let value: String",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the root container",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                            "title": "static let rootContainer: ContactItem.Identifier",
                            "type": "property"
                          },
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                            "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/identifier",
                        "title": "ContactItem.Identifier",
                        "type": "struct"
                      },
                      {
                        "title": "Hashing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Comparing contact items",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                        "title": "static func == (ContactItem, ContactItem) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem",
                    "title": "ContactItem",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemchangeobserver/diddelete(_:)",
                    "title": "func didDelete([ContactItem.Identifier])",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a contact item identifier",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting identifier properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/value",
                        "title": "let value: String",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the root container",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                        "title": "static let rootContainer: ContactItem.Identifier",
                        "type": "property"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                        "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/identifier",
                    "title": "ContactItem.Identifier",
                    "type": "struct"
                  },
                  {
                    "title": "Ending enumeration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemchangeobserver/didfinishenumeratingchanges(upto:morecoming:)",
                    "title": "func didFinishEnumeratingChanges(upTo: ContactItemSyncAnchor, moreComing: Bool)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a sync anchor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/init(generationmarker:offset:)",
                        "title": "init(generationMarker: Data, offset: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting sync anchor properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/generationmarker",
                        "title": "var generationMarker: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/offset",
                        "title": "var offset: Int",
                        "type": "property"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/==(_:_:)",
                        "title": "static func == (ContactItemSyncAnchor, ContactItemSyncAnchor) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitemsyncanchor/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitemsyncanchor/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitemsyncanchor",
                    "title": "ContactItemSyncAnchor",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemchangeobserver/didfinishenumeratingchangeswitherror(_:)",
                    "title": "func didFinishEnumeratingChangesWithError(any Error)",
                    "type": "method"
                  },
                  {
                    "title": "Optimizing observer batching",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemchangeobserver/suggestedbatchsize",
                    "title": "var suggestedBatchSize: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contactprovider/contactitemchangeobserver",
                "title": "ContactItemChangeObserver",
                "type": "protocol"
              },
              {
                "title": "Managing enumerator life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemenumerator/invalidate()",
                "title": "func invalidate() async",
                "type": "method"
              }
            ],
            "path": "/documentation/contactprovider/contactitemenumerator",
            "title": "ContactItemEnumerator",
            "type": "protocol"
          },
          {
            "title": "Receiving contacts",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Providing contact items",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemcontentobserver/didenumerate(_:)",
                "title": "func didEnumerate([ContactItem])",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Handling item type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                    "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                    "type": "case"
                  },
                  {
                    "title": "Identifying the item",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a contact item identifier",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting identifier properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/value",
                        "title": "let value: String",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the root container",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                        "title": "static let rootContainer: ContactItem.Identifier",
                        "type": "property"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                        "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/identifier",
                    "title": "ContactItem.Identifier",
                    "type": "struct"
                  },
                  {
                    "title": "Hashing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Comparing contact items",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                    "title": "static func == (ContactItem, ContactItem) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitem",
                "title": "ContactItem",
                "type": "enum"
              },
              {
                "title": "Ending enumeration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingcontent(upto:)",
                "title": "func didFinishEnumeratingContent(upTo: Data)",
                "type": "method"
              },
              {
                "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingpage(upto:)",
                "title": "func didFinishEnumeratingPage(upTo: ContactItemPage)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a contact item page",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/init(generationmarker:offset:)",
                    "title": "init(generationMarker: Data, offset: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Supporting paging",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/generationmarker",
                    "title": "var generationMarker: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/initialpage",
                    "title": "static let initialPage: ContactItemPage",
                    "type": "property"
                  },
                  {
                    "title": "Encoding and decoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Comparing contact item pages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitempage/==(_:_:)",
                    "title": "static func == (ContactItemPage, ContactItemPage) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitempage/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitempage/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitempage",
                "title": "ContactItemPage",
                "type": "struct"
              },
              {
                "path": "/documentation/contactprovider/contactitemcontentobserver/didfinishenumeratingcontentwitherror(_:)",
                "title": "func didFinishEnumeratingContentWithError(any Error)",
                "type": "method"
              },
              {
                "title": "Optimizing enumeration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemcontentobserver/suggestedpagesize",
                "title": "var suggestedPageSize: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/contactprovider/contactitemcontentobserver",
            "title": "ContactItemContentObserver",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Providing change data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemchangeobserver/didupdate(_:)",
                "title": "func didUpdate([ContactItem])",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Handling item type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/contact(_:_:)",
                    "title": "case contact(CNMutableContact, ContactItem.Identifier)",
                    "type": "case"
                  },
                  {
                    "title": "Identifying the item",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a contact item identifier",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting identifier properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/value",
                        "title": "let value: String",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the root container",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                        "title": "static let rootContainer: ContactItem.Identifier",
                        "type": "property"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                        "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/identifier",
                    "title": "ContactItem.Identifier",
                    "type": "struct"
                  },
                  {
                    "title": "Hashing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Comparing contact items",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/==(_:_:)",
                    "title": "static func == (ContactItem, ContactItem) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitem",
                "title": "ContactItem",
                "type": "enum"
              },
              {
                "path": "/documentation/contactprovider/contactitemchangeobserver/diddelete(_:)",
                "title": "func didDelete([ContactItem.Identifier])",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a contact item identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting identifier properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/value",
                    "title": "let value: String",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the root container",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/rootcontainer",
                    "title": "static let rootContainer: ContactItem.Identifier",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/==(_:_:)",
                    "title": "static func == (ContactItem.Identifier, ContactItem.Identifier) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitem/identifier/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitem/identifier/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitem/identifier/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitem/identifier",
                "title": "ContactItem.Identifier",
                "type": "struct"
              },
              {
                "title": "Ending enumeration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemchangeobserver/didfinishenumeratingchanges(upto:morecoming:)",
                "title": "func didFinishEnumeratingChanges(upTo: ContactItemSyncAnchor, moreComing: Bool)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a sync anchor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/init(generationmarker:offset:)",
                    "title": "init(generationMarker: Data, offset: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting sync anchor properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/generationmarker",
                    "title": "var generationMarker: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  },
                  {
                    "title": "Encoding and decoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/==(_:_:)",
                    "title": "static func == (ContactItemSyncAnchor, ContactItemSyncAnchor) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactitemsyncanchor/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contactprovider/contactitemsyncanchor/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/contactprovider/contactitemsyncanchor/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/contactprovider/contactitemsyncanchor",
                "title": "ContactItemSyncAnchor",
                "type": "struct"
              },
              {
                "path": "/documentation/contactprovider/contactitemchangeobserver/didfinishenumeratingchangeswitherror(_:)",
                "title": "func didFinishEnumeratingChangesWithError(any Error)",
                "type": "method"
              },
              {
                "title": "Optimizing observer batching",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactitemchangeobserver/suggestedbatchsize",
                "title": "var suggestedBatchSize: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/contactprovider/contactitemchangeobserver",
            "title": "ContactItemChangeObserver",
            "type": "protocol"
          },
          {
            "title": "Supporting types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Availability errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/featurenotavailable",
                "title": "case featureNotAvailable",
                "type": "case"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/deniedbyuser",
                "title": "case deniedByUser",
                "type": "case"
              },
              {
                "title": "Configuration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/extensionnotfound",
                "title": "case extensionNotFound",
                "type": "case"
              },
              {
                "title": "Capacity errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/itemslimitreached",
                "title": "case itemsLimitReached",
                "type": "case"
              },
              {
                "title": "Enumeration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/cannotenumerate",
                "title": "case cannotEnumerate",
                "type": "case"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/enumerationtimeout",
                "title": "case enumerationTimeout",
                "type": "case"
              },
              {
                "title": "Expiration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/pageexpired",
                "title": "case pageExpired",
                "type": "case"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/changeanchorexpired",
                "title": "case changeAnchorExpired",
                "type": "case"
              },
              {
                "title": "Invalidation errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/extensioninvalidated",
                "title": "case extensionInvalidated",
                "type": "case"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/extensioninvalidatetimeout",
                "title": "case extensionInvalidateTimeout",
                "type": "case"
              },
              {
                "title": "Hashing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contactprovider/contactprovidererror/domainnotregistered",
                "title": "case domainNotRegistered",
                "type": "case"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/errorcode",
                    "title": "var errorCode: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/errorcode-g7f2",
                    "title": "var errorCode: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/erroruserinfo",
                    "title": "var errorUserInfo: [String : Any]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/erroruserinfo-9lvfv",
                    "title": "var errorUserInfo: [String : Any]",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contactprovider/contactprovidererror/customnserror-implementations",
                "title": "CustomNSError Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/contactprovider/contactprovidererror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contactprovider/contactprovidererror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/errordescription",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/errordescription-5r2hj",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/failurereason",
                    "title": "var failureReason: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/failurereason-dcn1",
                    "title": "var failureReason: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/helpanchor",
                    "title": "var helpAnchor: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contactprovider/contactprovidererror/recoverysuggestion",
                    "title": "var recoverySuggestion: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contactprovider/contactprovidererror/localizederror-implementations",
                "title": "LocalizedError Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/contactprovider/contactprovidererror",
            "title": "ContactProviderError",
            "type": "enum"
          }
        ],
        "path": "/documentation/contactprovider",
        "title": "ContactProvider",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
