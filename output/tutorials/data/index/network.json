{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "title": "Connections and Listeners",
            "type": "groupMarker"
          },
          {
            "title": "Network Protocols",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/building-a-custom-peer-to-peer-protocol",
            "title": "Building a custom peer-to-peer protocol",
            "type": "sampleCode"
          },
          {
            "title": "Network Security and Privacy",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Configuring TLS Handshake Options",
                "type": "groupMarker"
              },
              {
                "title": "Configuring TLS Versions",
                "type": "groupMarker"
              },
              {
                "title": "Configuring TLS Behavior",
                "type": "groupMarker"
              },
              {
                "title": "Handling TLS Events",
                "type": "groupMarker"
              },
              {
                "title": "Inspecting TLS State",
                "type": "groupMarker"
              },
              {
                "title": "Handling TLS Challenges",
                "type": "groupMarker"
              },
              {
                "title": "Handling Certificates",
                "type": "groupMarker"
              },
              {
                "title": "Handling Identities",
                "type": "groupMarker"
              },
              {
                "title": "Handling Trust",
                "type": "groupMarker"
              },
              {
                "title": "Managing Security Objects",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/network/security-options",
            "title": "Security Options",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Traffic Attribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/inspecting-app-activity-data",
                "title": "Inspecting app activity data",
                "type": "article"
              },
              {
                "path": "/documentation/network/indicating-the-source-of-network-activity",
                "title": "Indicating the source of network activity",
                "type": "article"
              }
            ],
            "path": "/documentation/network/privacy-management",
            "title": "Privacy Management",
            "type": "collection"
          },
          {
            "path": "/documentation/network/creating-an-identity-for-local-network-tls",
            "title": "Creating an Identity for Local Network TLS",
            "type": "article"
          },
          {
            "title": "Paths and Interfaces",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Network Debugging",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/choosing-a-network-debugging-tool",
            "title": "Choosing a Network Debugging Tool",
            "type": "article"
          },
          {
            "path": "/documentation/network/debugging-http-server-side-errors",
            "title": "Debugging HTTP Server-Side Errors",
            "type": "article"
          },
          {
            "path": "/documentation/network/debugging-https-problems-with-cfnetwork-diagnostic-logging",
            "title": "Debugging HTTPS Problems with CFNetwork Diagnostic Logging",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Working with Packet Traces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/troubleshooting-packet-traces",
                "title": "Troubleshooting Packet Traces",
                "type": "article"
              },
              {
                "path": "/documentation/network/recording-a-wi-fi-packet-trace",
                "title": "Recording a Wi-Fi Packet Trace",
                "type": "article"
              },
              {
                "path": "/documentation/network/submitting-a-packet-trace-to-apple",
                "title": "Submitting a Packet Trace to Apple",
                "type": "article"
              }
            ],
            "path": "/documentation/network/recording-a-packet-trace",
            "title": "Recording a Packet Trace",
            "type": "collection"
          },
          {
            "path": "/documentation/network/taking-advantage-of-third-party-network-debugging-tools",
            "title": "Taking Advantage of Third-Party Network Debugging Tools",
            "type": "article"
          },
          {
            "path": "/documentation/network/testing-and-debugging-l4s-in-your-app",
            "title": "Testing and Debugging L4S in Your App",
            "type": "article"
          },
          {
            "title": "C-Language Symbols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "C Network Structures",
                "type": "groupMarker"
              },
              {
                "title": "C Network Protocols",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/network/c-language-symbols",
            "title": "C-Language Symbols",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/network/network-constants",
            "title": "Network Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/network/network-functions",
            "title": "Network Functions",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/network/network-data-types",
            "title": "Network Data Types",
            "type": "collection"
          }
        ],
        "path": "/documentation/network",
        "title": "Network",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "title": "Connections and Listeners",
            "type": "groupMarker"
          },
          {
            "title": "Network Protocols",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/building-a-custom-peer-to-peer-protocol",
            "title": "Building a custom peer-to-peer protocol",
            "type": "sampleCode"
          },
          {
            "title": "Network Security and Privacy",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Configuring TLS Handshake Options",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_t",
                "title": "sec_protocol_options_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_protocol_options",
                "title": "OS_sec_protocol_options",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_server_name(_:_:)",
                "title": "sec_protocol_options_set_tls_server_name",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_pre_shared_key(_:_:_:)",
                "title": "sec_protocol_options_add_pre_shared_key",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_tls_application_protocol(_:_:)",
                "title": "sec_protocol_options_add_tls_application_protocol",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_append_tls_ciphersuite(_:_:)",
                "title": "sec_protocol_options_append_tls_ciphersuite",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_append_tls_ciphersuite_group(_:_:)",
                "title": "sec_protocol_options_append_tls_ciphersuite_group",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_tls_ciphersuite(_:_:)",
                "title": "sec_protocol_options_add_tls_ciphersuite",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_tls_ciphersuite_group(_:_:)",
                "title": "sec_protocol_options_add_tls_ciphersuite_group",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_diffie_hellman_parameters(_:_:)",
                "title": "sec_protocol_options_set_tls_diffie_hellman_parameters",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_are_equal(_:_:)",
                "title": "sec_protocol_options_are_equal",
                "type": "func"
              },
              {
                "title": "Configuring TLS Versions",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_min_tls_protocol_version(_:_:)",
                "title": "sec_protocol_options_set_min_tls_protocol_version",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_max_tls_protocol_version(_:_:)",
                "title": "sec_protocol_options_set_max_tls_protocol_version",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_min_tls_protocol_version()",
                "title": "sec_protocol_options_get_default_min_tls_protocol_version",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_max_tls_protocol_version()",
                "title": "sec_protocol_options_get_default_max_tls_protocol_version",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_min_dtls_protocol_version()",
                "title": "sec_protocol_options_get_default_min_dtls_protocol_version",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_max_dtls_protocol_version()",
                "title": "sec_protocol_options_get_default_max_dtls_protocol_version",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_min_version(_:_:)",
                "title": "sec_protocol_options_set_tls_min_version",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_max_version(_:_:)",
                "title": "sec_protocol_options_set_tls_max_version",
                "type": "func"
              },
              {
                "title": "Configuring TLS Behavior",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_resumption_enabled(_:_:)",
                "title": "sec_protocol_options_set_tls_resumption_enabled",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_tickets_enabled(_:_:)",
                "title": "sec_protocol_options_set_tls_tickets_enabled",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_false_start_enabled(_:_:)",
                "title": "sec_protocol_options_set_tls_false_start_enabled",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_sct_enabled(_:_:)",
                "title": "sec_protocol_options_set_tls_sct_enabled",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_ocsp_enabled(_:_:)",
                "title": "sec_protocol_options_set_tls_ocsp_enabled",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_renegotiation_enabled(_:_:)",
                "title": "sec_protocol_options_set_tls_renegotiation_enabled",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_peer_authentication_required(_:_:)",
                "title": "sec_protocol_options_set_peer_authentication_required",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_is_fallback_attempt(_:_:)",
                "title": "sec_protocol_options_set_tls_is_fallback_attempt",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_pre_shared_key_identity_hint(_:_:)",
                "title": "sec_protocol_options_set_tls_pre_shared_key_identity_hint",
                "type": "func"
              },
              {
                "title": "Handling TLS Events",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_verify_block(_:_:_:)",
                "title": "sec_protocol_options_set_verify_block",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_verify_t",
                "title": "sec_protocol_verify_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_verify_complete_t",
                "title": "sec_protocol_verify_complete_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_challenge_block(_:_:_:)",
                "title": "sec_protocol_options_set_challenge_block",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_challenge_t",
                "title": "sec_protocol_challenge_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_challenge_complete_t",
                "title": "sec_protocol_challenge_complete_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_key_update_block(_:_:_:)",
                "title": "sec_protocol_options_set_key_update_block",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_key_update_t",
                "title": "sec_protocol_key_update_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_key_update_complete_t",
                "title": "sec_protocol_key_update_complete_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_pre_shared_key_selection_block(_:_:_:)",
                "title": "sec_protocol_options_set_pre_shared_key_selection_block",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_pre_shared_key_selection_t",
                "title": "sec_protocol_pre_shared_key_selection_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_pre_shared_key_selection_complete_t",
                "title": "sec_protocol_pre_shared_key_selection_complete_t",
                "type": "typealias"
              },
              {
                "title": "Inspecting TLS State",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_t",
                "title": "sec_protocol_metadata_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_protocol_metadata",
                "title": "OS_sec_protocol_metadata",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_protocol(_:)",
                "title": "sec_protocol_metadata_get_negotiated_protocol",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_server_name(_:)",
                "title": "sec_protocol_metadata_get_server_name",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_tls_protocol_version(_:)",
                "title": "sec_protocol_metadata_get_negotiated_tls_protocol_version",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_tls_ciphersuite(_:)",
                "title": "sec_protocol_metadata_get_negotiated_tls_ciphersuite",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_protocol_version(_:)",
                "title": "sec_protocol_metadata_get_negotiated_protocol_version",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_ciphersuite(_:)",
                "title": "sec_protocol_metadata_get_negotiated_ciphersuite",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_early_data_accepted(_:)",
                "title": "sec_protocol_metadata_get_early_data_accepted",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_copy_peer_public_key(_:)",
                "title": "sec_protocol_metadata_copy_peer_public_key",
                "type": "func"
              },
              {
                "title": "Handling TLS Challenges",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_distinguished_names(_:_:)",
                "title": "sec_protocol_metadata_access_distinguished_names",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_ocsp_response(_:_:)",
                "title": "sec_protocol_metadata_access_ocsp_response",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_peer_certificate_chain(_:_:)",
                "title": "sec_protocol_metadata_access_peer_certificate_chain",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_supported_signature_algorithms(_:_:)",
                "title": "sec_protocol_metadata_access_supported_signature_algorithms",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_pre_shared_keys(_:_:)",
                "title": "sec_protocol_metadata_access_pre_shared_keys",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_create_secret(_:_:_:_:)",
                "title": "sec_protocol_metadata_create_secret",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_create_secret_with_context(_:_:_:_:_:_:)",
                "title": "sec_protocol_metadata_create_secret_with_context",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_peers_are_equal(_:_:)",
                "title": "sec_protocol_metadata_peers_are_equal",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_challenge_parameters_are_equal(_:_:)",
                "title": "sec_protocol_metadata_challenge_parameters_are_equal",
                "type": "func"
              },
              {
                "title": "Handling Certificates",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_certificate_t",
                "title": "sec_certificate_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_certificate",
                "title": "OS_sec_certificate",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_certificate_create(_:)",
                "title": "sec_certificate_create",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_certificate_copy_ref(_:)",
                "title": "sec_certificate_copy_ref",
                "type": "func"
              },
              {
                "title": "Handling Identities",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_local_identity(_:_:)",
                "title": "sec_protocol_options_set_local_identity",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_t",
                "title": "sec_identity_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_identity",
                "title": "OS_sec_identity",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_create(_:)",
                "title": "sec_identity_create",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_create_with_certificates(_:_:)",
                "title": "sec_identity_create_with_certificates",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_copy_ref(_:)",
                "title": "sec_identity_copy_ref",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_access_certificates(_:_:)",
                "title": "sec_identity_access_certificates",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_copy_certificates_ref(_:)",
                "title": "sec_identity_copy_certificates_ref",
                "type": "func"
              },
              {
                "title": "Handling Trust",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_trust_t",
                "title": "sec_trust_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_trust",
                "title": "OS_sec_trust",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_trust_create(_:)",
                "title": "sec_trust_create",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_trust_copy_ref(_:)",
                "title": "sec_trust_copy_ref",
                "type": "func"
              },
              {
                "title": "Managing Security Objects",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_release(_:)",
                "title": "sec_release",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_retain(_:)",
                "title": "sec_retain",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_object_t",
                "title": "sec_object_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_object",
                "title": "OS_sec_object",
                "type": "protocol"
              }
            ],
            "path": "/documentation/network/security-options",
            "title": "Security Options",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Traffic Attribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/inspecting-app-activity-data",
                "title": "Inspecting app activity data",
                "type": "article"
              },
              {
                "path": "/documentation/network/indicating-the-source-of-network-activity",
                "title": "Indicating the source of network activity",
                "type": "article"
              },
              {
                "path": "/documentation/network/nw_parameters_set_attribution(_:_:)",
                "title": "nw_parameters_set_attribution",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_get_attribution(_:)",
                "title": "nw_parameters_get_attribution",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Request Sources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_attribution_t/developer",
                    "title": "nw_parameters_attribution_developer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_attribution_t/user",
                    "title": "nw_parameters_attribution_user",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_parameters_attribution_t",
                "title": "nw_parameters_attribution_t",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/privacy-management",
            "title": "Privacy Management",
            "type": "collection"
          },
          {
            "path": "/documentation/network/creating-an-identity-for-local-network-tls",
            "title": "Creating an Identity for Local Network TLS",
            "type": "article"
          },
          {
            "title": "Paths and Interfaces",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Network Debugging",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/choosing-a-network-debugging-tool",
            "title": "Choosing a Network Debugging Tool",
            "type": "article"
          },
          {
            "path": "/documentation/network/debugging-http-server-side-errors",
            "title": "Debugging HTTP Server-Side Errors",
            "type": "article"
          },
          {
            "path": "/documentation/network/debugging-https-problems-with-cfnetwork-diagnostic-logging",
            "title": "Debugging HTTPS Problems with CFNetwork Diagnostic Logging",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Working with Packet Traces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/troubleshooting-packet-traces",
                "title": "Troubleshooting Packet Traces",
                "type": "article"
              },
              {
                "path": "/documentation/network/recording-a-wi-fi-packet-trace",
                "title": "Recording a Wi-Fi Packet Trace",
                "type": "article"
              },
              {
                "path": "/documentation/network/submitting-a-packet-trace-to-apple",
                "title": "Submitting a Packet Trace to Apple",
                "type": "article"
              }
            ],
            "path": "/documentation/network/recording-a-packet-trace",
            "title": "Recording a Packet Trace",
            "type": "collection"
          },
          {
            "path": "/documentation/network/taking-advantage-of-third-party-network-debugging-tools",
            "title": "Taking Advantage of Third-Party Network Debugging Tools",
            "type": "article"
          },
          {
            "path": "/documentation/network/testing-and-debugging-l4s-in-your-app",
            "title": "Testing and Debugging L4S in Your App",
            "type": "article"
          },
          {
            "title": "C-Language Symbols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "C Network Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_invalid",
                    "title": "nw_connection_group_state_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_waiting",
                    "title": "nw_connection_group_state_waiting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_ready",
                    "title": "nw_connection_group_state_ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_failed",
                    "title": "nw_connection_group_state_failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_cancelled",
                    "title": "nw_connection_group_state_cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_connection_group_state_t",
                "title": "nw_connection_group_state_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_invalid",
                    "title": "nw_browser_state_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_ready",
                    "title": "nw_browser_state_ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_failed",
                    "title": "nw_browser_state_failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_cancelled",
                    "title": "nw_browser_state_cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_browser_state_t",
                "title": "nw_browser_state_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Connection States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_invalid",
                    "title": "nw_connection_state_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_waiting",
                    "title": "nw_connection_state_waiting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_preparing",
                    "title": "nw_connection_state_preparing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_ready",
                    "title": "nw_connection_state_ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_failed",
                    "title": "nw_connection_state_failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_cancelled",
                    "title": "nw_connection_state_cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_connection_state_t",
                "title": "nw_connection_state_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Report States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_collecting",
                    "title": "nw_data_transfer_report_state_collecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_collected",
                    "title": "nw_data_transfer_report_state_collected",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_data_transfer_report_state_t",
                "title": "nw_data_transfer_report_state_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Endpoint Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_invalid",
                    "title": "nw_endpoint_type_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_address",
                    "title": "nw_endpoint_type_address",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_host",
                    "title": "nw_endpoint_type_host",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_bonjour_service",
                    "title": "nw_endpoint_type_bonjour_service",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_url",
                    "title": "nw_endpoint_type_url",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_endpoint_type_t",
                "title": "nw_endpoint_type_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Error Domain Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_invalid",
                    "title": "nw_error_domain_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_posix",
                    "title": "nw_error_domain_posix",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_dns",
                    "title": "nw_error_domain_dns",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_tls",
                    "title": "nw_error_domain_tls",
                    "type": "case"
                  },
                  {
                    "title": "CFError Domain Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/knwerrordomainposix",
                    "title": "kNWErrorDomainPOSIX",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/knwerrordomaindns",
                    "title": "kNWErrorDomainDNS",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/knwerrordomaintls",
                    "title": "kNWErrorDomainTLS",
                    "type": "var"
                  }
                ],
                "path": "/documentation/network/nw_error_domain_t",
                "title": "nw_error_domain_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_invalid",
                    "title": "nw_ethernet_channel_state_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_waiting",
                    "title": "nw_ethernet_channel_state_waiting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_preparing",
                    "title": "nw_ethernet_channel_state_preparing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_ready",
                    "title": "nw_ethernet_channel_state_ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_failed",
                    "title": "nw_ethernet_channel_state_failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_cancelled",
                    "title": "nw_ethernet_channel_state_cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ethernet_channel_state_t",
                "title": "nw_ethernet_channel_state_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Start Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_ready",
                    "title": "nw_framer_start_result_ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_will_mark_ready",
                    "title": "nw_framer_start_result_will_mark_ready",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_framer_start_result_t",
                "title": "nw_framer_start_result_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Interface types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_wifi",
                    "title": "nw_interface_type_wifi",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_cellular",
                    "title": "nw_interface_type_cellular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_wired",
                    "title": "nw_interface_type_wired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_loopback",
                    "title": "nw_interface_type_loopback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_other",
                    "title": "nw_interface_type_other",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_interface_type_t",
                "title": "nw_interface_type_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "ECN Flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_non_ect",
                    "title": "nw_ip_ecn_flag_non_ect",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_ect_0",
                    "title": "nw_ip_ecn_flag_ect_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_ect_1",
                    "title": "nw_ip_ecn_flag_ect_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_ce",
                    "title": "nw_ip_ecn_flag_ce",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ip_ecn_flag_t",
                "title": "nw_ip_ecn_flag_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Address Preferences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_default",
                    "title": "nw_ip_local_address_preference_default",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_temporary",
                    "title": "nw_ip_local_address_preference_temporary",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_stable",
                    "title": "nw_ip_local_address_preference_stable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ip_local_address_preference_t",
                "title": "nw_ip_local_address_preference_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Versions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_any",
                    "title": "nw_ip_version_any",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_4",
                    "title": "nw_ip_version_4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_6",
                    "title": "nw_ip_version_6",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ip_version_t",
                "title": "nw_ip_version_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Listener States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_invalid",
                    "title": "nw_listener_state_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_waiting",
                    "title": "nw_listener_state_waiting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_ready",
                    "title": "nw_listener_state_ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_failed",
                    "title": "nw_listener_state_failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_cancelled",
                    "title": "nw_listener_state_cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_listener_state_t",
                "title": "nw_listener_state_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Multipath service types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_disabled",
                    "title": "nw_multipath_service_disabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_handover",
                    "title": "nw_multipath_service_handover",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_interactive",
                    "title": "nw_multipath_service_interactive",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_aggregate",
                    "title": "nw_multipath_service_aggregate",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_multipath_service_t",
                "title": "nw_multipath_service_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Expired DNS behaviors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_default",
                    "title": "nw_parameters_expired_dns_behavior_default",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_allow",
                    "title": "nw_parameters_expired_dns_behavior_allow",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_prohibit",
                    "title": "nw_parameters_expired_dns_behavior_prohibit",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_parameters_expired_dns_behavior_t",
                "title": "nw_parameters_expired_dns_behavior_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Status Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_invalid",
                    "title": "nw_path_status_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_unsatisfied",
                    "title": "nw_path_status_unsatisfied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_satisfied",
                    "title": "nw_path_status_satisfied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_satisfiable",
                    "title": "nw_path_status_satisfiable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_path_status_t",
                "title": "nw_path_status_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Resolution Transports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_unknown",
                    "title": "nw_report_resolution_protocol_unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_udp",
                    "title": "nw_report_resolution_protocol_udp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_tcp",
                    "title": "nw_report_resolution_protocol_tcp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_tls",
                    "title": "nw_report_resolution_protocol_tls",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_https",
                    "title": "nw_report_resolution_protocol_https",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_report_resolution_protocol_t",
                "title": "nw_report_resolution_protocol_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Resolution Sources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_query",
                    "title": "nw_report_resolution_source_query",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_cache",
                    "title": "nw_report_resolution_source_cache",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_expired_cache",
                    "title": "nw_report_resolution_source_expired_cache",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_report_resolution_source_t",
                "title": "nw_report_resolution_source_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Service classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_best_effort",
                    "title": "nw_service_class_best_effort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_background",
                    "title": "nw_service_class_background",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_interactive_video",
                    "title": "nw_service_class_interactive_video",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_interactive_voice",
                    "title": "nw_service_class_interactive_voice",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_responsive_data",
                    "title": "nw_service_class_responsive_data",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_signaling",
                    "title": "nw_service_class_signaling",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_service_class_t",
                "title": "nw_service_class_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Key Value Status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_invalid",
                    "title": "nw_txt_record_find_key_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_not_present",
                    "title": "nw_txt_record_find_key_not_present",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_no_value",
                    "title": "nw_txt_record_find_key_no_value",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                    "title": "nw_txt_record_find_key_empty_value",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                    "title": "nw_txt_record_find_key_non_empty_value",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_txt_record_find_key_t",
                "title": "nw_txt_record_find_key_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Defined Close Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_normal_closure",
                    "title": "nw_ws_close_code_normal_closure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_going_away",
                    "title": "nw_ws_close_code_going_away",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_protocol_error",
                    "title": "nw_ws_close_code_protocol_error",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_unsupported_data",
                    "title": "nw_ws_close_code_unsupported_data",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_no_status_received",
                    "title": "nw_ws_close_code_no_status_received",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_abnormal_closure",
                    "title": "nw_ws_close_code_abnormal_closure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_invalid_frame_payload_data",
                    "title": "nw_ws_close_code_invalid_frame_payload_data",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_policy_violation",
                    "title": "nw_ws_close_code_policy_violation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_message_too_big",
                    "title": "nw_ws_close_code_message_too_big",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_mandatory_extension",
                    "title": "nw_ws_close_code_mandatory_extension",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_internal_server_error",
                    "title": "nw_ws_close_code_internal_server_error",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_tls_handshake",
                    "title": "nw_ws_close_code_tls_handshake",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ws_close_code_t",
                "title": "nw_ws_close_code_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Data Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_binary",
                    "title": "nw_ws_opcode_binary",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_text",
                    "title": "nw_ws_opcode_text",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_cont",
                    "title": "nw_ws_opcode_cont",
                    "type": "case"
                  },
                  {
                    "title": "Control Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_ping",
                    "title": "nw_ws_opcode_ping",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_pong",
                    "title": "nw_ws_opcode_pong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_close",
                    "title": "nw_ws_opcode_close",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_invalid",
                    "title": "nw_ws_opcode_invalid",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ws_opcode_t",
                "title": "nw_ws_opcode_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Handshake Status Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_invalid",
                    "title": "nw_ws_response_status_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_accept",
                    "title": "nw_ws_response_status_accept",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_reject",
                    "title": "nw_ws_response_status_reject",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ws_response_status_t",
                "title": "nw_ws_response_status_t",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Versions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_invalid",
                    "title": "nw_ws_version_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_13",
                    "title": "nw_ws_version_13",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_ws_version_t",
                "title": "nw_ws_version_t",
                "type": "enum"
              },
              {
                "title": "C Network Protocols",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/os_nw_advertise_descriptor",
                "title": "OS_nw_advertise_descriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_browse_descriptor",
                "title": "OS_nw_browse_descriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_browse_result",
                "title": "OS_nw_browse_result",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_browser",
                "title": "OS_nw_browser",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_connection",
                "title": "OS_nw_connection",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_connection_group",
                "title": "OS_nw_connection_group",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_content_context",
                "title": "OS_nw_content_context",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_data_transfer_report",
                "title": "OS_nw_data_transfer_report",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_endpoint",
                "title": "OS_nw_endpoint",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_error",
                "title": "OS_nw_error",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_establishment_report",
                "title": "OS_nw_establishment_report",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_ethernet_channel",
                "title": "OS_nw_ethernet_channel",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_framer",
                "title": "OS_nw_framer",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_group_descriptor",
                "title": "OS_nw_group_descriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_interface",
                "title": "OS_nw_interface",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_listener",
                "title": "OS_nw_listener",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_object",
                "title": "OS_nw_object",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_parameters",
                "title": "OS_nw_parameters",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_path",
                "title": "OS_nw_path",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_path_monitor",
                "title": "OS_nw_path_monitor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_privacy_context",
                "title": "OS_nw_privacy_context",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_definition",
                "title": "OS_nw_protocol_definition",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_metadata",
                "title": "OS_nw_protocol_metadata",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_options",
                "title": "OS_nw_protocol_options",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_stack",
                "title": "OS_nw_protocol_stack",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_proxy_config",
                "title": "OS_nw_proxy_config",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_relay_hop",
                "title": "OS_nw_relay_hop",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_resolution_report",
                "title": "OS_nw_resolution_report",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_resolver_config",
                "title": "OS_nw_resolver_config",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_txt_record",
                "title": "OS_nw_txt_record",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_ws_request",
                "title": "OS_nw_ws_request",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_ws_response",
                "title": "OS_nw_ws_response",
                "type": "protocol"
              }
            ],
            "path": "/documentation/network/c-language-symbols",
            "title": "C-Language Symbols",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/nw_interface_radio_type_t",
            "title": "nw_interface_radio_type_t",
            "type": "enum"
          },
          {
            "path": "/documentation/network/nw_multipath_version_t",
            "title": "nw_multipath_version_t",
            "type": "enum"
          },
          {
            "path": "/documentation/network/nw_path_unsatisfied_reason_t",
            "title": "nw_path_unsatisfied_reason_t",
            "type": "enum"
          },
          {
            "path": "/documentation/network/nw_quic_stream_type_t",
            "title": "nw_quic_stream_type_t",
            "type": "enum"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_framer_create_flags_default",
                "title": "NW_FRAMER_CREATE_FLAGS_DEFAULT",
                "type": "macro"
              },
              {
                "path": "/documentation/network/nw_framer_wakeup_time_forever",
                "title": "NW_FRAMER_WAKEUP_TIME_FOREVER",
                "type": "macro"
              },
              {
                "path": "/documentation/network/nw_listener_infinite_connection_limit",
                "title": "NW_LISTENER_INFINITE_CONNECTION_LIMIT",
                "type": "macro"
              },
              {
                "path": "/documentation/network/nw_quic_connection_default_keepalive",
                "title": "NW_QUIC_CONNECTION_DEFAULT_KEEPALIVE",
                "type": "macro"
              },
              {
                "path": "/documentation/network/nw_browser_state_waiting",
                "title": "nw_browser_state_waiting",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_cdma",
                "title": "nw_interface_radio_type_cell_cdma",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_endc_mmw",
                "title": "nw_interface_radio_type_cell_endc_mmw",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_endc_sub6",
                "title": "nw_interface_radio_type_cell_endc_sub6",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_evdo",
                "title": "nw_interface_radio_type_cell_evdo",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_gsm",
                "title": "nw_interface_radio_type_cell_gsm",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_lte",
                "title": "nw_interface_radio_type_cell_lte",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_nr_sa_mmw",
                "title": "nw_interface_radio_type_cell_nr_sa_mmw",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_nr_sa_sub6",
                "title": "nw_interface_radio_type_cell_nr_sa_sub6",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_wcdma",
                "title": "nw_interface_radio_type_cell_wcdma",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_unknown",
                "title": "nw_interface_radio_type_unknown",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_a",
                "title": "nw_interface_radio_type_wifi_a",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_ac",
                "title": "nw_interface_radio_type_wifi_ac",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_ax",
                "title": "nw_interface_radio_type_wifi_ax",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_b",
                "title": "nw_interface_radio_type_wifi_b",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_g",
                "title": "nw_interface_radio_type_wifi_g",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_n",
                "title": "nw_interface_radio_type_wifi_n",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_multipath_version_0",
                "title": "nw_multipath_version_0",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_multipath_version_1",
                "title": "nw_multipath_version_1",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_multipath_version_unspecified",
                "title": "nw_multipath_version_unspecified",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_parameters_expired_dns_behavior_persistent",
                "title": "nw_parameters_expired_dns_behavior_persistent",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_cellular_denied",
                "title": "nw_path_unsatisfied_reason_cellular_denied",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_local_network_denied",
                "title": "nw_path_unsatisfied_reason_local_network_denied",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_not_available",
                "title": "nw_path_unsatisfied_reason_not_available",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_vpn_inactive",
                "title": "nw_path_unsatisfied_reason_vpn_inactive",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_wifi_denied",
                "title": "nw_path_unsatisfied_reason_wifi_denied",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_bidirectional",
                "title": "nw_quic_stream_type_bidirectional",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_datagram",
                "title": "nw_quic_stream_type_datagram",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_unidirectional",
                "title": "nw_quic_stream_type_unidirectional",
                "type": "case"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_unknown",
                "title": "nw_quic_stream_type_unknown",
                "type": "case"
              }
            ],
            "path": "/documentation/network/network-constants",
            "title": "Network Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_copy_txt_record_object(_:)",
                "title": "nw_advertise_descriptor_copy_txt_record_object",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_create_application_service(_:)",
                "title": "nw_advertise_descriptor_create_application_service",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_create_bonjour_service(_:_:_:)",
                "title": "nw_advertise_descriptor_create_bonjour_service",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_get_application_service_name(_:)",
                "title": "nw_advertise_descriptor_get_application_service_name",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_get_no_auto_rename(_:)",
                "title": "nw_advertise_descriptor_get_no_auto_rename",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_set_no_auto_rename(_:_:)",
                "title": "nw_advertise_descriptor_set_no_auto_rename",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_set_txt_record(_:_:_:)",
                "title": "nw_advertise_descriptor_set_txt_record",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_set_txt_record_object(_:_:)",
                "title": "nw_advertise_descriptor_set_txt_record_object",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_create_application_service(_:)",
                "title": "nw_browse_descriptor_create_application_service",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_create_bonjour_service(_:_:)",
                "title": "nw_browse_descriptor_create_bonjour_service",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_application_service_name(_:)",
                "title": "nw_browse_descriptor_get_application_service_name",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_domain(_:)",
                "title": "nw_browse_descriptor_get_bonjour_service_domain",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_type(_:)",
                "title": "nw_browse_descriptor_get_bonjour_service_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_include_txt_record(_:)",
                "title": "nw_browse_descriptor_get_include_txt_record",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_set_include_txt_record(_:_:)",
                "title": "nw_browse_descriptor_set_include_txt_record",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_copy_endpoint(_:)",
                "title": "nw_browse_result_copy_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_copy_txt_record_object(_:)",
                "title": "nw_browse_result_copy_txt_record_object",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_enumerate_interfaces(_:_:)",
                "title": "nw_browse_result_enumerate_interfaces",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_get_changes(_:_:)",
                "title": "nw_browse_result_get_changes",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_get_interfaces_count(_:)",
                "title": "nw_browse_result_get_interfaces_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_cancel(_:)",
                "title": "nw_browser_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_copy_browse_descriptor(_:)",
                "title": "nw_browser_copy_browse_descriptor",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_copy_parameters(_:)",
                "title": "nw_browser_copy_parameters",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_create(_:_:)",
                "title": "nw_browser_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_set_browse_results_changed_handler(_:_:)",
                "title": "nw_browser_set_browse_results_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_set_queue(_:_:)",
                "title": "nw_browser_set_queue",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_set_state_changed_handler(_:_:)",
                "title": "nw_browser_set_state_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_start(_:)",
                "title": "nw_browser_start",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_access_establishment_report(_:_:_:)",
                "title": "nw_connection_access_establishment_report",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_batch(_:_:)",
                "title": "nw_connection_batch",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_cancel(_:)",
                "title": "nw_connection_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_cancel_current_endpoint(_:)",
                "title": "nw_connection_cancel_current_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_current_path(_:)",
                "title": "nw_connection_copy_current_path",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_description(_:)",
                "title": "nw_connection_copy_description",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_endpoint(_:)",
                "title": "nw_connection_copy_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_parameters(_:)",
                "title": "nw_connection_copy_parameters",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_protocol_metadata(_:_:)",
                "title": "nw_connection_copy_protocol_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_create(_:_:)",
                "title": "nw_connection_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_create_new_data_transfer_report(_:)",
                "title": "nw_connection_create_new_data_transfer_report",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_force_cancel(_:)",
                "title": "nw_connection_force_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_get_maximum_datagram_size(_:)",
                "title": "nw_connection_get_maximum_datagram_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_cancel(_:)",
                "title": "nw_connection_group_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_descriptor(_:)",
                "title": "nw_connection_group_copy_descriptor",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_local_endpoint_for_message(_:_:)",
                "title": "nw_connection_group_copy_local_endpoint_for_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_parameters(_:)",
                "title": "nw_connection_group_copy_parameters",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_path_for_message(_:_:)",
                "title": "nw_connection_group_copy_path_for_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_protocol_metadata(_:_:)",
                "title": "nw_connection_group_copy_protocol_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_protocol_metadata_for_message(_:_:_:)",
                "title": "nw_connection_group_copy_protocol_metadata_for_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_remote_endpoint_for_message(_:_:)",
                "title": "nw_connection_group_copy_remote_endpoint_for_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_create(_:_:)",
                "title": "nw_connection_group_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_extract_connection(_:_:_:)",
                "title": "nw_connection_group_extract_connection",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_extract_connection_for_message(_:_:)",
                "title": "nw_connection_group_extract_connection_for_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_reinsert_extracted_connection(_:_:)",
                "title": "nw_connection_group_reinsert_extracted_connection",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_reply(_:_:_:_:)",
                "title": "nw_connection_group_reply",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_send_message(_:_:_:_:_:)",
                "title": "nw_connection_group_send_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_new_connection_handler(_:_:)",
                "title": "nw_connection_group_set_new_connection_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_queue(_:_:)",
                "title": "nw_connection_group_set_queue",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_receive_handler(_:_:_:_:)",
                "title": "nw_connection_group_set_receive_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_state_changed_handler(_:_:)",
                "title": "nw_connection_group_set_state_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_start(_:)",
                "title": "nw_connection_group_start",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_receive(_:_:_:_:)",
                "title": "nw_connection_receive",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_receive_message(_:_:)",
                "title": "nw_connection_receive_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_restart(_:)",
                "title": "nw_connection_restart",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_send(_:_:_:_:_:)",
                "title": "nw_connection_send",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_better_path_available_handler(_:_:)",
                "title": "nw_connection_set_better_path_available_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_path_changed_handler(_:_:)",
                "title": "nw_connection_set_path_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_queue(_:_:)",
                "title": "nw_connection_set_queue",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_state_changed_handler(_:_:)",
                "title": "nw_connection_set_state_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_viability_changed_handler(_:_:)",
                "title": "nw_connection_set_viability_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_start(_:)",
                "title": "nw_connection_start",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_copy_antecedent(_:)",
                "title": "nw_content_context_copy_antecedent",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_copy_protocol_metadata(_:_:)",
                "title": "nw_content_context_copy_protocol_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_create(_:)",
                "title": "nw_content_context_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_foreach_protocol_metadata(_:_:)",
                "title": "nw_content_context_foreach_protocol_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_expiration_milliseconds(_:)",
                "title": "nw_content_context_get_expiration_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_identifier(_:)",
                "title": "nw_content_context_get_identifier",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_is_final(_:)",
                "title": "nw_content_context_get_is_final",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_relative_priority(_:)",
                "title": "nw_content_context_get_relative_priority",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_antecedent(_:_:)",
                "title": "nw_content_context_set_antecedent",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_expiration_milliseconds(_:_:)",
                "title": "nw_content_context_set_expiration_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_is_final(_:_:)",
                "title": "nw_content_context_set_is_final",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_metadata_for_protocol(_:_:)",
                "title": "nw_content_context_set_metadata_for_protocol",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_relative_priority(_:_:)",
                "title": "nw_content_context_set_relative_priority",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_collect(_:_:_:)",
                "title": "nw_data_transfer_report_collect",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_copy_path_interface(_:_:)",
                "title": "nw_data_transfer_report_copy_path_interface",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_duration_milliseconds(_:)",
                "title": "nw_data_transfer_report_get_duration_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_path_count(_:)",
                "title": "nw_data_transfer_report_get_path_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_path_radio_type(_:_:)",
                "title": "nw_data_transfer_report_get_path_radio_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_application_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_received_application_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_ip_packet_count(_:_:)",
                "title": "nw_data_transfer_report_get_received_ip_packet_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_transport_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_received_transport_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_transport_duplicate_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_received_transport_duplicate_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_transport_out_of_order_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_received_transport_out_of_order_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_application_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_sent_application_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_ip_packet_count(_:_:)",
                "title": "nw_data_transfer_report_get_sent_ip_packet_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_sent_transport_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(_:_:)",
                "title": "nw_data_transfer_report_get_sent_transport_retransmitted_byte_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_state(_:)",
                "title": "nw_data_transfer_report_get_state",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(_:_:)",
                "title": "nw_data_transfer_report_get_transport_minimum_rtt_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_transport_rtt_variance(_:_:)",
                "title": "nw_data_transfer_report_get_transport_rtt_variance",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(_:_:)",
                "title": "nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_copy_address_string(_:)",
                "title": "nw_endpoint_copy_address_string",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_copy_port_string(_:)",
                "title": "nw_endpoint_copy_port_string",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_copy_txt_record(_:)",
                "title": "nw_endpoint_copy_txt_record",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_address(_:)",
                "title": "nw_endpoint_create_address",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_bonjour_service(_:_:_:)",
                "title": "nw_endpoint_create_bonjour_service",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_host(_:_:)",
                "title": "nw_endpoint_create_host",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_url(_:)",
                "title": "nw_endpoint_create_url",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_address(_:)",
                "title": "nw_endpoint_get_address",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_bonjour_service_domain(_:)",
                "title": "nw_endpoint_get_bonjour_service_domain",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_bonjour_service_name(_:)",
                "title": "nw_endpoint_get_bonjour_service_name",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_bonjour_service_type(_:)",
                "title": "nw_endpoint_get_bonjour_service_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_hostname(_:)",
                "title": "nw_endpoint_get_hostname",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_port(_:)",
                "title": "nw_endpoint_get_port",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_signature(_:_:)",
                "title": "nw_endpoint_get_signature",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_type(_:)",
                "title": "nw_endpoint_get_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_url(_:)",
                "title": "nw_endpoint_get_url",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_error_copy_cf_error(_:)",
                "title": "nw_error_copy_cf_error",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_error_get_error_code(_:)",
                "title": "nw_error_get_error_code",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_error_get_error_domain(_:)",
                "title": "nw_error_get_error_domain",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_copy_proxy_endpoint(_:)",
                "title": "nw_establishment_report_copy_proxy_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_enumerate_protocols(_:_:)",
                "title": "nw_establishment_report_enumerate_protocols",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_enumerate_resolution_reports(_:_:)",
                "title": "nw_establishment_report_enumerate_resolution_reports",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_enumerate_resolutions(_:_:)",
                "title": "nw_establishment_report_enumerate_resolutions",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_attempt_started_after_milliseconds(_:)",
                "title": "nw_establishment_report_get_attempt_started_after_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_duration_milliseconds(_:)",
                "title": "nw_establishment_report_get_duration_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_previous_attempt_count(_:)",
                "title": "nw_establishment_report_get_previous_attempt_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_proxy_configured(_:)",
                "title": "nw_establishment_report_get_proxy_configured",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_used_proxy(_:)",
                "title": "nw_establishment_report_get_used_proxy",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_cancel(_:)",
                "title": "nw_ethernet_channel_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_create(_:_:)",
                "title": "nw_ethernet_channel_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_create_with_parameters(_:_:_:)",
                "title": "nw_ethernet_channel_create_with_parameters",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_get_maximum_payload_size(_:)",
                "title": "nw_ethernet_channel_get_maximum_payload_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_send(_:_:_:_:_:)",
                "title": "nw_ethernet_channel_send",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_set_queue(_:_:)",
                "title": "nw_ethernet_channel_set_queue",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_set_receive_handler(_:_:)",
                "title": "nw_ethernet_channel_set_receive_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_set_state_changed_handler(_:_:)",
                "title": "nw_ethernet_channel_set_state_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_start(_:)",
                "title": "nw_ethernet_channel_start",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_async(_:_:)",
                "title": "nw_framer_async",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_local_endpoint(_:)",
                "title": "nw_framer_copy_local_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_options(_:)",
                "title": "nw_framer_copy_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_parameters(_:)",
                "title": "nw_framer_copy_parameters",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_remote_endpoint(_:)",
                "title": "nw_framer_copy_remote_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_create_definition(_:_:_:)",
                "title": "nw_framer_create_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_create_options(_:)",
                "title": "nw_framer_create_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_deliver_input(_:_:_:_:_:)",
                "title": "nw_framer_deliver_input",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_deliver_input_no_copy(_:_:_:_:)",
                "title": "nw_framer_deliver_input_no_copy",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_mark_failed_with_error(_:_:)",
                "title": "nw_framer_mark_failed_with_error",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_mark_ready(_:)",
                "title": "nw_framer_mark_ready",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_access_value(_:_:_:)",
                "title": "nw_framer_message_access_value",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_copy_object_value(_:_:)",
                "title": "nw_framer_message_copy_object_value",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_create(_:)",
                "title": "nw_framer_message_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_set_object_value(_:_:_:)",
                "title": "nw_framer_message_set_object_value",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_set_value(_:_:_:_:)",
                "title": "nw_framer_message_set_value",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_options_copy_object_value(_:_:)",
                "title": "nw_framer_options_copy_object_value",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_options_set_object_value(_:_:_:)",
                "title": "nw_framer_options_set_object_value",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_parse_input(_:_:_:_:_:)",
                "title": "nw_framer_parse_input",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_parse_output(_:_:_:_:_:)",
                "title": "nw_framer_parse_output",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_pass_through_input(_:)",
                "title": "nw_framer_pass_through_input",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_pass_through_output(_:)",
                "title": "nw_framer_pass_through_output",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_prepend_application_protocol(_:_:)",
                "title": "nw_framer_prepend_application_protocol",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_protocol_create_message(_:)",
                "title": "nw_framer_protocol_create_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_schedule_wakeup(_:_:)",
                "title": "nw_framer_schedule_wakeup",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_cleanup_handler(_:_:)",
                "title": "nw_framer_set_cleanup_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_input_handler(_:_:)",
                "title": "nw_framer_set_input_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_output_handler(_:_:)",
                "title": "nw_framer_set_output_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_stop_handler(_:_:)",
                "title": "nw_framer_set_stop_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_wakeup_handler(_:_:)",
                "title": "nw_framer_set_wakeup_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_write_output(_:_:_:)",
                "title": "nw_framer_write_output",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_write_output_data(_:_:)",
                "title": "nw_framer_write_output_data",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_write_output_no_copy(_:_:)",
                "title": "nw_framer_write_output_no_copy",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_add_endpoint(_:_:)",
                "title": "nw_group_descriptor_add_endpoint",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Customizing Multicast Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_multicast_group_descriptor_set_disable_unicast_traffic(_:_:)",
                    "title": "nw_multicast_group_descriptor_set_disable_unicast_traffic",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_multicast_group_descriptor_get_disable_unicast_traffic(_:)",
                    "title": "nw_multicast_group_descriptor_get_disable_unicast_traffic",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_multicast_group_descriptor_set_specific_source(_:_:)",
                    "title": "nw_multicast_group_descriptor_set_specific_source",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_group_descriptor_create_multicast(_:)",
                "title": "nw_group_descriptor_create_multicast",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_create_multiplex(_:)",
                "title": "nw_group_descriptor_create_multiplex",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints(_:_:)",
                "title": "nw_group_descriptor_enumerate_endpoints",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_interface_get_index(_:)",
                "title": "nw_interface_get_index",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_interface_get_name(_:)",
                "title": "nw_interface_get_name",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_interface_get_type(_:)",
                "title": "nw_interface_get_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_create_metadata()",
                "title": "nw_ip_create_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_get_ecn_flag(_:)",
                "title": "nw_ip_metadata_get_ecn_flag",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_get_receive_time(_:)",
                "title": "nw_ip_metadata_get_receive_time",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_get_service_class(_:)",
                "title": "nw_ip_metadata_get_service_class",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_set_ecn_flag(_:_:)",
                "title": "nw_ip_metadata_set_ecn_flag",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_set_service_class(_:_:)",
                "title": "nw_ip_metadata_set_service_class",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_calculate_receive_time(_:_:)",
                "title": "nw_ip_options_set_calculate_receive_time",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_disable_fragmentation(_:_:)",
                "title": "nw_ip_options_set_disable_fragmentation",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_disable_multicast_loopback(_:_:)",
                "title": "nw_ip_options_set_disable_multicast_loopback",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_hop_limit(_:_:)",
                "title": "nw_ip_options_set_hop_limit",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_local_address_preference(_:_:)",
                "title": "nw_ip_options_set_local_address_preference",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_use_minimum_mtu(_:_:)",
                "title": "nw_ip_options_set_use_minimum_mtu",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_version(_:_:)",
                "title": "nw_ip_options_set_version",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_cancel(_:)",
                "title": "nw_listener_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create(_:)",
                "title": "nw_listener_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create_with_connection(_:_:)",
                "title": "nw_listener_create_with_connection",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create_with_launchd_key(_:_:)",
                "title": "nw_listener_create_with_launchd_key",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create_with_port(_:_:)",
                "title": "nw_listener_create_with_port",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_get_new_connection_limit(_:)",
                "title": "nw_listener_get_new_connection_limit",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_get_port(_:)",
                "title": "nw_listener_get_port",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_advertise_descriptor(_:_:)",
                "title": "nw_listener_set_advertise_descriptor",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_advertised_endpoint_changed_handler(_:_:)",
                "title": "nw_listener_set_advertised_endpoint_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_new_connection_group_handler(_:_:)",
                "title": "nw_listener_set_new_connection_group_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_new_connection_handler(_:_:)",
                "title": "nw_listener_set_new_connection_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_new_connection_limit(_:_:)",
                "title": "nw_listener_set_new_connection_limit",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_queue(_:_:)",
                "title": "nw_listener_set_queue",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_state_changed_handler(_:_:)",
                "title": "nw_listener_set_state_changed_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_start(_:)",
                "title": "nw_listener_start",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_multicast_group_descriptor_get_disable_unicast_traffic(_:)",
                "title": "nw_multicast_group_descriptor_get_disable_unicast_traffic",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_multicast_group_descriptor_set_disable_unicast_traffic(_:_:)",
                "title": "nw_multicast_group_descriptor_set_disable_unicast_traffic",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_multicast_group_descriptor_set_specific_source(_:_:)",
                "title": "nw_multicast_group_descriptor_set_specific_source",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_create_application_service()",
                "title": "nw_parameters_create_application_service",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_create_quic(_:)",
                "title": "nw_parameters_create_quic",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_requires_dnssec_validation(_:)",
                "title": "nw_parameters_requires_dnssec_validation",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_set_requires_dnssec_validation(_:_:)",
                "title": "nw_parameters_set_requires_dnssec_validation",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_copy_effective_local_endpoint(_:)",
                "title": "nw_path_copy_effective_local_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_copy_effective_remote_endpoint(_:)",
                "title": "nw_path_copy_effective_remote_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_gateways(_:_:)",
                "title": "nw_path_enumerate_gateways",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_interfaces(_:_:)",
                "title": "nw_path_enumerate_interfaces",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_get_status(_:)",
                "title": "nw_path_get_status",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_get_unsatisfied_reason(_:)",
                "title": "nw_path_get_unsatisfied_reason",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_has_dns(_:)",
                "title": "nw_path_has_dns",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_has_ipv4(_:)",
                "title": "nw_path_has_ipv4",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_has_ipv6(_:)",
                "title": "nw_path_has_ipv6",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_is_constrained(_:)",
                "title": "nw_path_is_constrained",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_is_equal(_:_:)",
                "title": "nw_path_is_equal",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_is_expensive(_:)",
                "title": "nw_path_is_expensive",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_cancel(_:)",
                "title": "nw_path_monitor_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_create()",
                "title": "nw_path_monitor_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_create_for_ethernet_channel()",
                "title": "nw_path_monitor_create_for_ethernet_channel",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_create_with_type(_:)",
                "title": "nw_path_monitor_create_with_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_prohibit_interface_type(_:_:)",
                "title": "nw_path_monitor_prohibit_interface_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_set_cancel_handler(_:_:)",
                "title": "nw_path_monitor_set_cancel_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_set_queue(_:_:)",
                "title": "nw_path_monitor_set_queue",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_set_update_handler(_:_:)",
                "title": "nw_path_monitor_set_update_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_start(_:)",
                "title": "nw_path_monitor_start",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_uses_interface_type(_:_:)",
                "title": "nw_path_uses_interface_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_ip_definition()",
                "title": "nw_protocol_copy_ip_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_quic_definition()",
                "title": "nw_protocol_copy_quic_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_tcp_definition()",
                "title": "nw_protocol_copy_tcp_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_tls_definition()",
                "title": "nw_protocol_copy_tls_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_udp_definition()",
                "title": "nw_protocol_copy_udp_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_ws_definition()",
                "title": "nw_protocol_copy_ws_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                "title": "nw_protocol_metadata_copy_definition",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_framer_message(_:)",
                "title": "nw_protocol_metadata_is_framer_message",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_ip(_:)",
                "title": "nw_protocol_metadata_is_ip",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_quic(_:)",
                "title": "nw_protocol_metadata_is_quic",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_tcp(_:)",
                "title": "nw_protocol_metadata_is_tcp",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_tls(_:)",
                "title": "nw_protocol_metadata_is_tls",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_udp(_:)",
                "title": "nw_protocol_metadata_is_udp",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_ws(_:)",
                "title": "nw_protocol_metadata_is_ws",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_options_is_quic(_:)",
                "title": "nw_protocol_options_is_quic",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_add_excluded_domain(_:_:)",
                "title": "nw_proxy_config_add_excluded_domain",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_add_match_domain(_:_:)",
                "title": "nw_proxy_config_add_match_domain",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_clear_excluded_domains(_:)",
                "title": "nw_proxy_config_clear_excluded_domains",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_clear_match_domains(_:)",
                "title": "nw_proxy_config_clear_match_domains",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_enumerate_excluded_domains(_:_:)",
                "title": "nw_proxy_config_enumerate_excluded_domains",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_enumerate_match_domains(_:_:)",
                "title": "nw_proxy_config_enumerate_match_domains",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_add_tls_application_protocol(_:_:)",
                "title": "nw_quic_add_tls_application_protocol",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_copy_sec_protocol_metadata(_:)",
                "title": "nw_quic_copy_sec_protocol_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_copy_sec_protocol_options(_:)",
                "title": "nw_quic_copy_sec_protocol_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_create_options()",
                "title": "nw_quic_create_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_application_error(_:)",
                "title": "nw_quic_get_application_error",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_application_error_reason(_:)",
                "title": "nw_quic_get_application_error_reason",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_idle_timeout(_:)",
                "title": "nw_quic_get_idle_timeout",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_data(_:)",
                "title": "nw_quic_get_initial_max_data",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_stream_data_bidirectional_local(_:)",
                "title": "nw_quic_get_initial_max_stream_data_bidirectional_local",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_stream_data_bidirectional_remote(_:)",
                "title": "nw_quic_get_initial_max_stream_data_bidirectional_remote",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_stream_data_unidirectional(_:)",
                "title": "nw_quic_get_initial_max_stream_data_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_streams_bidirectional(_:)",
                "title": "nw_quic_get_initial_max_streams_bidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_streams_unidirectional(_:)",
                "title": "nw_quic_get_initial_max_streams_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_keepalive_interval(_:)",
                "title": "nw_quic_get_keepalive_interval",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_local_max_streams_bidirectional(_:)",
                "title": "nw_quic_get_local_max_streams_bidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_local_max_streams_unidirectional(_:)",
                "title": "nw_quic_get_local_max_streams_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_max_datagram_frame_size(_:)",
                "title": "nw_quic_get_max_datagram_frame_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_max_udp_payload_size(_:)",
                "title": "nw_quic_get_max_udp_payload_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_remote_idle_timeout(_:)",
                "title": "nw_quic_get_remote_idle_timeout",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_remote_max_streams_bidirectional(_:)",
                "title": "nw_quic_get_remote_max_streams_bidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_remote_max_streams_unidirectional(_:)",
                "title": "nw_quic_get_remote_max_streams_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_application_error(_:)",
                "title": "nw_quic_get_stream_application_error",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_id(_:)",
                "title": "nw_quic_get_stream_id",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_is_datagram(_:)",
                "title": "nw_quic_get_stream_is_datagram",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_is_unidirectional(_:)",
                "title": "nw_quic_get_stream_is_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_type(_:)",
                "title": "nw_quic_get_stream_type",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_usable_datagram_frame_size(_:)",
                "title": "nw_quic_get_stream_usable_datagram_frame_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_application_error(_:_:_:)",
                "title": "nw_quic_set_application_error",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_idle_timeout(_:_:)",
                "title": "nw_quic_set_idle_timeout",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_data(_:_:)",
                "title": "nw_quic_set_initial_max_data",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_stream_data_bidirectional_local(_:_:)",
                "title": "nw_quic_set_initial_max_stream_data_bidirectional_local",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_stream_data_bidirectional_remote(_:_:)",
                "title": "nw_quic_set_initial_max_stream_data_bidirectional_remote",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_stream_data_unidirectional(_:_:)",
                "title": "nw_quic_set_initial_max_stream_data_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_streams_bidirectional(_:_:)",
                "title": "nw_quic_set_initial_max_streams_bidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_streams_unidirectional(_:_:)",
                "title": "nw_quic_set_initial_max_streams_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_keepalive_interval(_:_:)",
                "title": "nw_quic_set_keepalive_interval",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_local_max_streams_bidirectional(_:_:)",
                "title": "nw_quic_set_local_max_streams_bidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_local_max_streams_unidirectional(_:_:)",
                "title": "nw_quic_set_local_max_streams_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_max_datagram_frame_size(_:_:)",
                "title": "nw_quic_set_max_datagram_frame_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_max_udp_payload_size(_:_:)",
                "title": "nw_quic_set_max_udp_payload_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_stream_application_error(_:_:)",
                "title": "nw_quic_set_stream_application_error",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_stream_is_datagram(_:_:)",
                "title": "nw_quic_set_stream_is_datagram",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_stream_is_unidirectional(_:_:)",
                "title": "nw_quic_set_stream_is_unidirectional",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_copy_preferred_endpoint(_:)",
                "title": "nw_resolution_report_copy_preferred_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_copy_successful_endpoint(_:)",
                "title": "nw_resolution_report_copy_successful_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_endpoint_count(_:)",
                "title": "nw_resolution_report_get_endpoint_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_milliseconds(_:)",
                "title": "nw_resolution_report_get_milliseconds",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_protocol(_:)",
                "title": "nw_resolution_report_get_protocol",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_source(_:)",
                "title": "nw_resolution_report_get_source",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_create_options()",
                "title": "nw_tcp_create_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_get_available_receive_buffer(_:)",
                "title": "nw_tcp_get_available_receive_buffer",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_get_available_send_buffer(_:)",
                "title": "nw_tcp_get_available_send_buffer",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_connection_timeout(_:_:)",
                "title": "nw_tcp_options_set_connection_timeout",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_disable_ack_stretching(_:_:)",
                "title": "nw_tcp_options_set_disable_ack_stretching",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_disable_ecn(_:_:)",
                "title": "nw_tcp_options_set_disable_ecn",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_enable_fast_open(_:_:)",
                "title": "nw_tcp_options_set_enable_fast_open",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_enable_keepalive(_:_:)",
                "title": "nw_tcp_options_set_enable_keepalive",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_keepalive_count(_:_:)",
                "title": "nw_tcp_options_set_keepalive_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_keepalive_idle_time(_:_:)",
                "title": "nw_tcp_options_set_keepalive_idle_time",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_keepalive_interval(_:_:)",
                "title": "nw_tcp_options_set_keepalive_interval",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_maximum_segment_size(_:_:)",
                "title": "nw_tcp_options_set_maximum_segment_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_multipath_force_version(_:_:)",
                "title": "nw_tcp_options_set_multipath_force_version",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_no_delay(_:_:)",
                "title": "nw_tcp_options_set_no_delay",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_no_options(_:_:)",
                "title": "nw_tcp_options_set_no_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_no_push(_:_:)",
                "title": "nw_tcp_options_set_no_push",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_persist_timeout(_:_:)",
                "title": "nw_tcp_options_set_persist_timeout",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_retransmit_connection_drop_time(_:_:)",
                "title": "nw_tcp_options_set_retransmit_connection_drop_time",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_retransmit_fin_drop(_:_:)",
                "title": "nw_tcp_options_set_retransmit_fin_drop",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tls_copy_sec_protocol_metadata(_:)",
                "title": "nw_tls_copy_sec_protocol_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tls_copy_sec_protocol_options(_:)",
                "title": "nw_tls_copy_sec_protocol_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tls_create_options()",
                "title": "nw_tls_create_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                "title": "nw_txt_record_access_bytes",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                "title": "nw_txt_record_access_key",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                "title": "nw_txt_record_apply",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_copy(_:)",
                "title": "nw_txt_record_copy",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_create_dictionary()",
                "title": "nw_txt_record_create_dictionary",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                "title": "nw_txt_record_create_with_bytes",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                "title": "nw_txt_record_find_key",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                "title": "nw_txt_record_get_key_count",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                "title": "nw_txt_record_is_dictionary",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                "title": "nw_txt_record_is_equal",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                "title": "nw_txt_record_remove_key",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                "title": "nw_txt_record_set_key",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_udp_create_metadata()",
                "title": "nw_udp_create_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_udp_create_options()",
                "title": "nw_udp_create_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_udp_options_set_prefer_no_checksum(_:_:)",
                "title": "nw_udp_options_set_prefer_no_checksum",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_create_metadata(_:)",
                "title": "nw_ws_create_metadata",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_create_options(_:)",
                "title": "nw_ws_create_options",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_copy_server_response(_:)",
                "title": "nw_ws_metadata_copy_server_response",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_get_close_code(_:)",
                "title": "nw_ws_metadata_get_close_code",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_get_opcode(_:)",
                "title": "nw_ws_metadata_get_opcode",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_set_close_code(_:_:)",
                "title": "nw_ws_metadata_set_close_code",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_set_pong_handler(_:_:_:)",
                "title": "nw_ws_metadata_set_pong_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_add_additional_header(_:_:_:)",
                "title": "nw_ws_options_add_additional_header",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_add_subprotocol(_:_:)",
                "title": "nw_ws_options_add_subprotocol",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_auto_reply_ping(_:_:)",
                "title": "nw_ws_options_set_auto_reply_ping",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_client_request_handler(_:_:_:)",
                "title": "nw_ws_options_set_client_request_handler",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_maximum_message_size(_:_:)",
                "title": "nw_ws_options_set_maximum_message_size",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_skip_handshake(_:_:)",
                "title": "nw_ws_options_set_skip_handshake",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_request_enumerate_additional_headers(_:_:)",
                "title": "nw_ws_request_enumerate_additional_headers",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_request_enumerate_subprotocols(_:_:)",
                "title": "nw_ws_request_enumerate_subprotocols",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_add_additional_header(_:_:_:)",
                "title": "nw_ws_response_add_additional_header",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_create(_:_:)",
                "title": "nw_ws_response_create",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_enumerate_additional_headers(_:_:)",
                "title": "nw_ws_response_enumerate_additional_headers",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_get_selected_subprotocol(_:)",
                "title": "nw_ws_response_get_selected_subprotocol",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_get_status(_:)",
                "title": "nw_ws_response_get_status",
                "type": "func"
              }
            ],
            "path": "/documentation/network/network-functions",
            "title": "Network Functions",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Advertising Bonjour Services",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_create_bonjour_service(_:_:_:)",
                    "title": "nw_advertise_descriptor_create_bonjour_service",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_set_no_auto_rename(_:_:)",
                    "title": "nw_advertise_descriptor_set_no_auto_rename",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_get_no_auto_rename(_:)",
                    "title": "nw_advertise_descriptor_get_no_auto_rename",
                    "type": "func"
                  },
                  {
                    "title": "Configuring TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_set_txt_record(_:_:_:)",
                    "title": "nw_advertise_descriptor_set_txt_record",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_set_txt_record_object(_:_:)",
                    "title": "nw_advertise_descriptor_set_txt_record_object",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_copy_txt_record_object(_:)",
                    "title": "nw_advertise_descriptor_copy_txt_record_object",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_advertise_descriptor_t",
                "title": "nw_advertise_descriptor_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Browse Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_create_bonjour_service(_:_:)",
                    "title": "nw_browse_descriptor_create_bonjour_service",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_set_include_txt_record(_:_:)",
                    "title": "nw_browse_descriptor_set_include_txt_record",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Browse Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_type(_:)",
                    "title": "nw_browse_descriptor_get_bonjour_service_type",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_domain(_:)",
                    "title": "nw_browse_descriptor_get_bonjour_service_domain",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_get_include_txt_record(_:)",
                    "title": "nw_browse_descriptor_get_include_txt_record",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_browse_descriptor_t",
                "title": "nw_browse_descriptor_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Browse Result Change Flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_invalid",
                    "title": "nw_browse_result_change_invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_identical",
                    "title": "nw_browse_result_change_identical",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_result_added",
                    "title": "nw_browse_result_change_result_added",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_result_removed",
                    "title": "nw_browse_result_change_result_removed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_txt_record_changed",
                    "title": "nw_browse_result_change_txt_record_changed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_interface_added",
                    "title": "nw_browse_result_change_interface_added",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_interface_removed",
                    "title": "nw_browse_result_change_interface_removed",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nw_browse_result_change_t",
                "title": "nw_browse_result_change_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_browse_result_enumerate_interface_t",
                "title": "nw_browse_result_enumerate_interface_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Evaluating Browser Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_copy_endpoint(_:)",
                    "title": "nw_browse_result_copy_endpoint",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_enumerate_interfaces(_:_:)",
                    "title": "nw_browse_result_enumerate_interfaces",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_enumerate_interface_t",
                    "title": "nw_browse_result_enumerate_interface_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_get_interfaces_count(_:)",
                    "title": "nw_browse_result_get_interfaces_count",
                    "type": "func"
                  },
                  {
                    "title": "Handling TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_copy_txt_record_object(_:)",
                    "title": "nw_browse_result_copy_txt_record_object",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_create_dictionary()",
                        "title": "nw_txt_record_create_dictionary",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                        "title": "nw_txt_record_create_with_bytes",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_copy(_:)",
                        "title": "nw_txt_record_copy",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                        "title": "nw_txt_record_set_key",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                        "title": "nw_txt_record_remove_key",
                        "type": "func"
                      },
                      {
                        "title": "Examining TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                        "title": "nw_txt_record_is_dictionary",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                        "title": "nw_txt_record_get_key_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                        "title": "nw_txt_record_apply",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_applier_t",
                        "title": "nw_txt_record_applier_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                        "title": "nw_txt_record_access_key",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_key_t",
                        "title": "nw_txt_record_access_key_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                        "title": "nw_txt_record_find_key",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Key Value Status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_invalid",
                            "title": "nw_txt_record_find_key_invalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_not_present",
                            "title": "nw_txt_record_find_key_not_present",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_no_value",
                            "title": "nw_txt_record_find_key_no_value",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                            "title": "nw_txt_record_find_key_empty_value",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                            "title": "nw_txt_record_find_key_non_empty_value",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nw_txt_record_find_key_t",
                        "title": "nw_txt_record_find_key_t",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                        "title": "nw_txt_record_is_equal",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                        "title": "nw_txt_record_access_bytes",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_bytes_t",
                        "title": "nw_txt_record_access_bytes_t",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/network/nw_txt_record_t",
                    "title": "nw_txt_record_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Tracking Result Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_get_changes(_:_:)",
                    "title": "nw_browse_result_get_changes",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Browse Result Change Flags",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_invalid",
                        "title": "nw_browse_result_change_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_identical",
                        "title": "nw_browse_result_change_identical",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_result_added",
                        "title": "nw_browse_result_change_result_added",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_result_removed",
                        "title": "nw_browse_result_change_result_removed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_txt_record_changed",
                        "title": "nw_browse_result_change_txt_record_changed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_interface_added",
                        "title": "nw_browse_result_change_interface_added",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_interface_removed",
                        "title": "nw_browse_result_change_interface_removed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_browse_result_change_t",
                    "title": "nw_browse_result_change_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_browse_result_t",
                "title": "nw_browse_result_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_browser_browse_results_changed_handler_t",
                "title": "nw_browser_browse_results_changed_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_browser_state_changed_handler_t",
                "title": "nw_browser_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nsbonjourservices",
                    "title": "NSBonjourServices",
                    "type": "typealias"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocalnetworkusagedescription",
                    "title": "NSLocalNetworkUsageDescription",
                    "type": "typealias"
                  },
                  {
                    "title": "Browsing for Services",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_create(_:_:)",
                    "title": "nw_browser_create",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Browse Descriptors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_create_bonjour_service(_:_:)",
                        "title": "nw_browse_descriptor_create_bonjour_service",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_set_include_txt_record(_:_:)",
                        "title": "nw_browse_descriptor_set_include_txt_record",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Browse Descriptors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_type(_:)",
                        "title": "nw_browse_descriptor_get_bonjour_service_type",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_domain(_:)",
                        "title": "nw_browse_descriptor_get_bonjour_service_domain",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_get_include_txt_record(_:)",
                        "title": "nw_browse_descriptor_get_include_txt_record",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_browse_descriptor_t",
                    "title": "nw_browse_descriptor_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_browser_set_queue(_:_:)",
                    "title": "nw_browser_set_queue",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_start(_:)",
                    "title": "nw_browser_start",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_set_browse_results_changed_handler(_:_:)",
                    "title": "nw_browser_set_browse_results_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_browse_results_changed_handler_t",
                    "title": "nw_browser_browse_results_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Evaluating Browser Results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_copy_endpoint(_:)",
                        "title": "nw_browse_result_copy_endpoint",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_enumerate_interfaces(_:_:)",
                        "title": "nw_browse_result_enumerate_interfaces",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_enumerate_interface_t",
                        "title": "nw_browse_result_enumerate_interface_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_get_interfaces_count(_:)",
                        "title": "nw_browse_result_get_interfaces_count",
                        "type": "func"
                      },
                      {
                        "title": "Handling TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_copy_txt_record_object(_:)",
                        "title": "nw_browse_result_copy_txt_record_object",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating TXT Records",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_create_dictionary()",
                            "title": "nw_txt_record_create_dictionary",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                            "title": "nw_txt_record_create_with_bytes",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_copy(_:)",
                            "title": "nw_txt_record_copy",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                            "title": "nw_txt_record_set_key",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                            "title": "nw_txt_record_remove_key",
                            "type": "func"
                          },
                          {
                            "title": "Examining TXT Records",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                            "title": "nw_txt_record_is_dictionary",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                            "title": "nw_txt_record_get_key_count",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                            "title": "nw_txt_record_apply",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_applier_t",
                            "title": "nw_txt_record_applier_t",
                            "type": "typealias"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                            "title": "nw_txt_record_access_key",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_key_t",
                            "title": "nw_txt_record_access_key_t",
                            "type": "typealias"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                            "title": "nw_txt_record_find_key",
                            "type": "func"
                          },
                          {
                            "children": [
                              {
                                "title": "Key Value Status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_invalid",
                                "title": "nw_txt_record_find_key_invalid",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_not_present",
                                "title": "nw_txt_record_find_key_not_present",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_no_value",
                                "title": "nw_txt_record_find_key_no_value",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                                "title": "nw_txt_record_find_key_empty_value",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                                "title": "nw_txt_record_find_key_non_empty_value",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/network/nw_txt_record_find_key_t",
                            "title": "nw_txt_record_find_key_t",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                            "title": "nw_txt_record_is_equal",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                            "title": "nw_txt_record_access_bytes",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_bytes_t",
                            "title": "nw_txt_record_access_bytes_t",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/network/nw_txt_record_t",
                        "title": "nw_txt_record_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Tracking Result Changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_get_changes(_:_:)",
                        "title": "nw_browse_result_get_changes",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Browse Result Change Flags",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_invalid",
                            "title": "nw_browse_result_change_invalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_identical",
                            "title": "nw_browse_result_change_identical",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_result_added",
                            "title": "nw_browse_result_change_result_added",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_result_removed",
                            "title": "nw_browse_result_change_result_removed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_txt_record_changed",
                            "title": "nw_browse_result_change_txt_record_changed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_interface_added",
                            "title": "nw_browse_result_change_interface_added",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_interface_removed",
                            "title": "nw_browse_result_change_interface_removed",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nw_browse_result_change_t",
                        "title": "nw_browse_result_change_t",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/network/nw_browse_result_t",
                    "title": "nw_browse_result_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Managing Browsers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_set_state_changed_handler(_:_:)",
                    "title": "nw_browser_set_state_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_changed_handler_t",
                    "title": "nw_browser_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_invalid",
                        "title": "nw_browser_state_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_ready",
                        "title": "nw_browser_state_ready",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_failed",
                        "title": "nw_browser_state_failed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_cancelled",
                        "title": "nw_browser_state_cancelled",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_browser_state_t",
                    "title": "nw_browser_state_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_browser_cancel(_:)",
                    "title": "nw_browser_cancel",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Browsers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_copy_browse_descriptor(_:)",
                    "title": "nw_browser_copy_browse_descriptor",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_copy_parameters(_:)",
                    "title": "nw_browser_copy_parameters",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_browser_t",
                "title": "nw_browser_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_boolean_event_handler_t",
                "title": "nw_connection_boolean_event_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_new_connection_handler_t",
                "title": "nw_connection_group_new_connection_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_receive_handler_t",
                "title": "nw_connection_group_receive_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_send_completion_t",
                "title": "nw_connection_group_send_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_state_changed_handler_t",
                "title": "nw_connection_group_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Establishing Group Connectivity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_create(_:_:)",
                    "title": "nw_connection_group_create",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Customizing Multicast Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_multicast_group_descriptor_set_disable_unicast_traffic(_:_:)",
                        "title": "nw_multicast_group_descriptor_set_disable_unicast_traffic",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_multicast_group_descriptor_get_disable_unicast_traffic(_:)",
                        "title": "nw_multicast_group_descriptor_get_disable_unicast_traffic",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_multicast_group_descriptor_set_specific_source(_:_:)",
                        "title": "nw_multicast_group_descriptor_set_specific_source",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_group_descriptor_create_multicast(_:)",
                    "title": "nw_group_descriptor_create_multicast",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_t",
                    "title": "nw_group_descriptor_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_add_endpoint(_:_:)",
                    "title": "nw_group_descriptor_add_endpoint",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints(_:_:)",
                    "title": "nw_group_descriptor_enumerate_endpoints",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints_block_t",
                    "title": "nw_group_descriptor_enumerate_endpoints_block_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_set_queue(_:_:)",
                    "title": "nw_connection_group_set_queue",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_start(_:)",
                    "title": "nw_connection_group_start",
                    "type": "func"
                  },
                  {
                    "title": "Sending and Receiving Group Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_set_receive_handler(_:_:_:_:)",
                    "title": "nw_connection_group_set_receive_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_receive_handler_t",
                    "title": "nw_connection_group_receive_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_remote_endpoint_for_message(_:_:)",
                    "title": "nw_connection_group_copy_remote_endpoint_for_message",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_local_endpoint_for_message(_:_:)",
                    "title": "nw_connection_group_copy_local_endpoint_for_message",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_path_for_message(_:_:)",
                    "title": "nw_connection_group_copy_path_for_message",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_reply(_:_:_:_:)",
                    "title": "nw_connection_group_reply",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_extract_connection_for_message(_:_:)",
                    "title": "nw_connection_group_extract_connection_for_message",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_send_message(_:_:_:_:_:)",
                    "title": "nw_connection_group_send_message",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_send_completion_t",
                    "title": "nw_connection_group_send_completion_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Managing Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_set_state_changed_handler(_:_:)",
                    "title": "nw_connection_group_set_state_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_changed_handler_t",
                    "title": "nw_connection_group_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_invalid",
                        "title": "nw_connection_group_state_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_waiting",
                        "title": "nw_connection_group_state_waiting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_ready",
                        "title": "nw_connection_group_state_ready",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_failed",
                        "title": "nw_connection_group_state_failed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_cancelled",
                        "title": "nw_connection_group_state_cancelled",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_connection_group_state_t",
                    "title": "nw_connection_group_state_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_cancel(_:)",
                    "title": "nw_connection_group_cancel",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_descriptor(_:)",
                    "title": "nw_connection_group_copy_descriptor",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_parameters(_:)",
                    "title": "nw_connection_group_copy_parameters",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_connection_group_t",
                "title": "nw_connection_group_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_path_event_handler_t",
                "title": "nw_connection_path_event_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_receive_completion_t",
                "title": "nw_connection_receive_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_send_completion_t",
                "title": "nw_connection_send_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_state_changed_handler_t",
                "title": "nw_connection_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_create(_:_:)",
                    "title": "nw_connection_create",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_queue(_:_:)",
                    "title": "nw_connection_set_queue",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_start(_:)",
                    "title": "nw_connection_start",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_restart(_:)",
                    "title": "nw_connection_restart",
                    "type": "func"
                  },
                  {
                    "title": "Handling State Updates",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Connection States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_invalid",
                        "title": "nw_connection_state_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_waiting",
                        "title": "nw_connection_state_waiting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_preparing",
                        "title": "nw_connection_state_preparing",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_ready",
                        "title": "nw_connection_state_ready",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_failed",
                        "title": "nw_connection_state_failed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_cancelled",
                        "title": "nw_connection_state_cancelled",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_connection_state_t",
                    "title": "nw_connection_state_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_state_changed_handler(_:_:)",
                    "title": "nw_connection_set_state_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_changed_handler_t",
                    "title": "nw_connection_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Sending and Receiving Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_send(_:_:_:_:_:)",
                    "title": "nw_connection_send",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_send_completion_t",
                    "title": "nw_connection_send_completion_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Custom Send Contexts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_create(_:)",
                        "title": "nw_content_context_create",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_metadata_for_protocol(_:_:)",
                        "title": "nw_content_context_set_metadata_for_protocol",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting Metadata",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                            "title": "nw_protocol_metadata_copy_definition",
                            "type": "func"
                          }
                        ],
                        "path": "/documentation/network/nw_protocol_metadata_t",
                        "title": "nw_protocol_metadata_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_antecedent(_:_:)",
                        "title": "nw_content_context_set_antecedent",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_copy_antecedent(_:)",
                        "title": "nw_content_context_copy_antecedent",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_expiration_milliseconds(_:_:)",
                        "title": "nw_content_context_set_expiration_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_expiration_milliseconds(_:)",
                        "title": "nw_content_context_get_expiration_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_relative_priority(_:_:)",
                        "title": "nw_content_context_set_relative_priority",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_relative_priority(_:)",
                        "title": "nw_content_context_get_relative_priority",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_is_final(_:_:)",
                        "title": "nw_content_context_set_is_final",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_identifier(_:)",
                        "title": "nw_content_context_get_identifier",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Receive Contexts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_is_final(_:)",
                        "title": "nw_content_context_get_is_final",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_copy_protocol_metadata(_:_:)",
                        "title": "nw_content_context_copy_protocol_metadata",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_foreach_protocol_metadata(_:_:)",
                        "title": "nw_content_context_foreach_protocol_metadata",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_content_context_t",
                    "title": "nw_content_context_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_receive(_:_:_:_:)",
                    "title": "nw_connection_receive",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_receive_completion_t",
                    "title": "nw_connection_receive_completion_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_receive_message(_:_:)",
                    "title": "nw_connection_receive_message",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_batch(_:_:)",
                    "title": "nw_connection_batch",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_get_maximum_datagram_size(_:)",
                    "title": "nw_connection_get_maximum_datagram_size",
                    "type": "func"
                  },
                  {
                    "title": "Canceling Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_cancel(_:)",
                    "title": "nw_connection_cancel",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_force_cancel(_:)",
                    "title": "nw_connection_force_cancel",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_cancel_current_endpoint(_:)",
                    "title": "nw_connection_cancel_current_endpoint",
                    "type": "func"
                  },
                  {
                    "title": "Handling Path Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_current_path(_:)",
                    "title": "nw_connection_copy_current_path",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_path_changed_handler(_:_:)",
                    "title": "nw_connection_set_path_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_path_event_handler_t",
                    "title": "nw_connection_path_event_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_viability_changed_handler(_:_:)",
                    "title": "nw_connection_set_viability_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_better_path_available_handler(_:_:)",
                    "title": "nw_connection_set_better_path_available_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_boolean_event_handler_t",
                    "title": "nw_connection_boolean_event_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Collecting Connection Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting Connection Attempts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_duration_milliseconds(_:)",
                        "title": "nw_establishment_report_get_duration_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_previous_attempt_count(_:)",
                        "title": "nw_establishment_report_get_previous_attempt_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_attempt_started_after_milliseconds(_:)",
                        "title": "nw_establishment_report_get_attempt_started_after_milliseconds",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Resolution",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_enumerate_resolution_reports(_:_:)",
                        "title": "nw_establishment_report_enumerate_resolution_reports",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_report_enumerator_t",
                        "title": "nw_report_resolution_report_enumerator_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_t",
                        "title": "nw_resolution_report_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_milliseconds(_:)",
                        "title": "nw_resolution_report_get_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_source(_:)",
                        "title": "nw_resolution_report_get_source",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Resolution Sources",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_query",
                            "title": "nw_report_resolution_source_query",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_cache",
                            "title": "nw_report_resolution_source_cache",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_expired_cache",
                            "title": "nw_report_resolution_source_expired_cache",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nw_report_resolution_source_t",
                        "title": "nw_report_resolution_source_t",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_protocol(_:)",
                        "title": "nw_resolution_report_get_protocol",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Resolution Transports",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_unknown",
                            "title": "nw_report_resolution_protocol_unknown",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_udp",
                            "title": "nw_report_resolution_protocol_udp",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_tcp",
                            "title": "nw_report_resolution_protocol_tcp",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_tls",
                            "title": "nw_report_resolution_protocol_tls",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_https",
                            "title": "nw_report_resolution_protocol_https",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nw_report_resolution_protocol_t",
                        "title": "nw_report_resolution_protocol_t",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_copy_successful_endpoint(_:)",
                        "title": "nw_resolution_report_copy_successful_endpoint",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_copy_preferred_endpoint(_:)",
                        "title": "nw_resolution_report_copy_preferred_endpoint",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_endpoint_count(_:)",
                        "title": "nw_resolution_report_get_endpoint_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_enumerate_resolutions(_:_:)",
                        "title": "nw_establishment_report_enumerate_resolutions",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_enumerator_t",
                        "title": "nw_report_resolution_enumerator_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Inspecting Protocol Handshakes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_enumerate_protocols(_:_:)",
                        "title": "nw_establishment_report_enumerate_protocols",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_report_protocol_enumerator_t",
                        "title": "nw_report_protocol_enumerator_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Checking for Proxies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_proxy_configured(_:)",
                        "title": "nw_establishment_report_get_proxy_configured",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_used_proxy(_:)",
                        "title": "nw_establishment_report_get_used_proxy",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_copy_proxy_endpoint(_:)",
                        "title": "nw_establishment_report_copy_proxy_endpoint",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_establishment_report_t",
                    "title": "nw_establishment_report_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_access_establishment_report(_:_:_:)",
                    "title": "nw_connection_access_establishment_report",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_access_block_t",
                    "title": "nw_establishment_report_access_block_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Collecting Reports",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_collect(_:_:_:)",
                        "title": "nw_data_transfer_report_collect",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_collect_block_t",
                        "title": "nw_data_transfer_report_collect_block_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_state(_:)",
                        "title": "nw_data_transfer_report_get_state",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Report States",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_collecting",
                            "title": "nw_data_transfer_report_state_collecting",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_collected",
                            "title": "nw_data_transfer_report_state_collected",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nw_data_transfer_report_state_t",
                        "title": "nw_data_transfer_report_state_t",
                        "type": "enum"
                      },
                      {
                        "title": "Identifying Paths",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_path_count(_:)",
                        "title": "nw_data_transfer_report_get_path_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_duration_milliseconds(_:)",
                        "title": "nw_data_transfer_report_get_duration_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_copy_path_interface(_:_:)",
                        "title": "nw_data_transfer_report_copy_path_interface",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Application Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_application_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_received_application_byte_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_application_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_sent_application_byte_count",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Transport Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_transport_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_received_transport_byte_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_transport_duplicate_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_received_transport_duplicate_byte_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_transport_out_of_order_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_received_transport_out_of_order_byte_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_sent_transport_byte_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(_:_:)",
                        "title": "nw_data_transfer_report_get_sent_transport_retransmitted_byte_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(_:_:)",
                        "title": "nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(_:_:)",
                        "title": "nw_data_transfer_report_get_transport_minimum_rtt_milliseconds",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_transport_rtt_variance(_:_:)",
                        "title": "nw_data_transfer_report_get_transport_rtt_variance",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Packet Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_ip_packet_count(_:_:)",
                        "title": "nw_data_transfer_report_get_received_ip_packet_count",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_ip_packet_count(_:_:)",
                        "title": "nw_data_transfer_report_get_sent_ip_packet_count",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_data_transfer_report_t",
                    "title": "nw_data_transfer_report_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_create_new_data_transfer_report(_:)",
                    "title": "nw_connection_create_new_data_transfer_report",
                    "type": "func"
                  },
                  {
                    "title": "Copying Connection State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_protocol_metadata(_:_:)",
                    "title": "nw_connection_copy_protocol_metadata",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_endpoint(_:)",
                    "title": "nw_connection_copy_endpoint",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_parameters(_:)",
                    "title": "nw_connection_copy_parameters",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_description(_:)",
                    "title": "nw_connection_copy_description",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_connection_t",
                "title": "nw_connection_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Custom Send Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_create(_:)",
                    "title": "nw_content_context_create",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_metadata_for_protocol(_:_:)",
                    "title": "nw_content_context_set_metadata_for_protocol",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting Metadata",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                        "title": "nw_protocol_metadata_copy_definition",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_protocol_metadata_t",
                    "title": "nw_protocol_metadata_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_antecedent(_:_:)",
                    "title": "nw_content_context_set_antecedent",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_copy_antecedent(_:)",
                    "title": "nw_content_context_copy_antecedent",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_expiration_milliseconds(_:_:)",
                    "title": "nw_content_context_set_expiration_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_expiration_milliseconds(_:)",
                    "title": "nw_content_context_get_expiration_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_relative_priority(_:_:)",
                    "title": "nw_content_context_set_relative_priority",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_relative_priority(_:)",
                    "title": "nw_content_context_get_relative_priority",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_is_final(_:_:)",
                    "title": "nw_content_context_set_is_final",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_identifier(_:)",
                    "title": "nw_content_context_get_identifier",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Receive Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_is_final(_:)",
                    "title": "nw_content_context_get_is_final",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_copy_protocol_metadata(_:_:)",
                    "title": "nw_content_context_copy_protocol_metadata",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_foreach_protocol_metadata(_:_:)",
                    "title": "nw_content_context_foreach_protocol_metadata",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_content_context_t",
                "title": "nw_content_context_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_collect_block_t",
                "title": "nw_data_transfer_report_collect_block_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Collecting Reports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_collect(_:_:_:)",
                    "title": "nw_data_transfer_report_collect",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_collect_block_t",
                    "title": "nw_data_transfer_report_collect_block_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_state(_:)",
                    "title": "nw_data_transfer_report_get_state",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Report States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_collecting",
                        "title": "nw_data_transfer_report_state_collecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_collected",
                        "title": "nw_data_transfer_report_state_collected",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_data_transfer_report_state_t",
                    "title": "nw_data_transfer_report_state_t",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying Paths",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_path_count(_:)",
                    "title": "nw_data_transfer_report_get_path_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_duration_milliseconds(_:)",
                    "title": "nw_data_transfer_report_get_duration_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_copy_path_interface(_:_:)",
                    "title": "nw_data_transfer_report_copy_path_interface",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Application Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_application_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_received_application_byte_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_application_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_sent_application_byte_count",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Transport Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_transport_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_received_transport_byte_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_transport_duplicate_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_received_transport_duplicate_byte_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_transport_out_of_order_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_received_transport_out_of_order_byte_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_sent_transport_byte_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(_:_:)",
                    "title": "nw_data_transfer_report_get_sent_transport_retransmitted_byte_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(_:_:)",
                    "title": "nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(_:_:)",
                    "title": "nw_data_transfer_report_get_transport_minimum_rtt_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_transport_rtt_variance(_:_:)",
                    "title": "nw_data_transfer_report_get_transport_rtt_variance",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Packet Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_ip_packet_count(_:_:)",
                    "title": "nw_data_transfer_report_get_received_ip_packet_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_ip_packet_count(_:_:)",
                    "title": "nw_data_transfer_report_get_sent_ip_packet_count",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_data_transfer_report_t",
                "title": "nw_data_transfer_report_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Endpoint Types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Endpoint Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_invalid",
                        "title": "nw_endpoint_type_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_address",
                        "title": "nw_endpoint_type_address",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_host",
                        "title": "nw_endpoint_type_host",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_bonjour_service",
                        "title": "nw_endpoint_type_bonjour_service",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_url",
                        "title": "nw_endpoint_type_url",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_endpoint_type_t",
                    "title": "nw_endpoint_type_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_type(_:)",
                    "title": "nw_endpoint_get_type",
                    "type": "func"
                  },
                  {
                    "title": "Host Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_host(_:_:)",
                    "title": "nw_endpoint_create_host",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_hostname(_:)",
                    "title": "nw_endpoint_get_hostname",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_port(_:)",
                    "title": "nw_endpoint_get_port",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_copy_port_string(_:)",
                    "title": "nw_endpoint_copy_port_string",
                    "type": "func"
                  },
                  {
                    "title": "Address Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_address(_:)",
                    "title": "nw_endpoint_create_address",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_address(_:)",
                    "title": "nw_endpoint_get_address",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_copy_address_string(_:)",
                    "title": "nw_endpoint_copy_address_string",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_copy_port_string(_:)",
                    "title": "nw_endpoint_copy_port_string",
                    "type": "func"
                  },
                  {
                    "title": "Bonjour Service Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_bonjour_service(_:_:_:)",
                    "title": "nw_endpoint_create_bonjour_service",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_bonjour_service_name(_:)",
                    "title": "nw_endpoint_get_bonjour_service_name",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_bonjour_service_type(_:)",
                    "title": "nw_endpoint_get_bonjour_service_type",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_bonjour_service_domain(_:)",
                    "title": "nw_endpoint_get_bonjour_service_domain",
                    "type": "func"
                  },
                  {
                    "title": "URL Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_url(_:)",
                    "title": "nw_endpoint_create_url",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_url(_:)",
                    "title": "nw_endpoint_get_url",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_endpoint_t",
                "title": "nw_endpoint_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_error_get_error_domain(_:)",
                    "title": "nw_error_get_error_domain",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Domain Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_invalid",
                        "title": "nw_error_domain_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_posix",
                        "title": "nw_error_domain_posix",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_dns",
                        "title": "nw_error_domain_dns",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_tls",
                        "title": "nw_error_domain_tls",
                        "type": "case"
                      },
                      {
                        "title": "CFError Domain Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/knwerrordomainposix",
                        "title": "kNWErrorDomainPOSIX",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/knwerrordomaindns",
                        "title": "kNWErrorDomainDNS",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/knwerrordomaintls",
                        "title": "kNWErrorDomainTLS",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/network/nw_error_domain_t",
                    "title": "nw_error_domain_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_error_get_error_code(_:)",
                    "title": "nw_error_get_error_code",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_error_copy_cf_error(_:)",
                    "title": "nw_error_copy_cf_error",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_error_t",
                "title": "nw_error_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_establishment_report_access_block_t",
                "title": "nw_establishment_report_access_block_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Connection Attempts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_duration_milliseconds(_:)",
                    "title": "nw_establishment_report_get_duration_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_previous_attempt_count(_:)",
                    "title": "nw_establishment_report_get_previous_attempt_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_attempt_started_after_milliseconds(_:)",
                    "title": "nw_establishment_report_get_attempt_started_after_milliseconds",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Resolution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_enumerate_resolution_reports(_:_:)",
                    "title": "nw_establishment_report_enumerate_resolution_reports",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_report_enumerator_t",
                    "title": "nw_report_resolution_report_enumerator_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_t",
                    "title": "nw_resolution_report_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_milliseconds(_:)",
                    "title": "nw_resolution_report_get_milliseconds",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_source(_:)",
                    "title": "nw_resolution_report_get_source",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Resolution Sources",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_query",
                        "title": "nw_report_resolution_source_query",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_cache",
                        "title": "nw_report_resolution_source_cache",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_expired_cache",
                        "title": "nw_report_resolution_source_expired_cache",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_report_resolution_source_t",
                    "title": "nw_report_resolution_source_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_protocol(_:)",
                    "title": "nw_resolution_report_get_protocol",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Resolution Transports",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_unknown",
                        "title": "nw_report_resolution_protocol_unknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_udp",
                        "title": "nw_report_resolution_protocol_udp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_tcp",
                        "title": "nw_report_resolution_protocol_tcp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_tls",
                        "title": "nw_report_resolution_protocol_tls",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_https",
                        "title": "nw_report_resolution_protocol_https",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_report_resolution_protocol_t",
                    "title": "nw_report_resolution_protocol_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_copy_successful_endpoint(_:)",
                    "title": "nw_resolution_report_copy_successful_endpoint",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_copy_preferred_endpoint(_:)",
                    "title": "nw_resolution_report_copy_preferred_endpoint",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_endpoint_count(_:)",
                    "title": "nw_resolution_report_get_endpoint_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_enumerate_resolutions(_:_:)",
                    "title": "nw_establishment_report_enumerate_resolutions",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_enumerator_t",
                    "title": "nw_report_resolution_enumerator_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Inspecting Protocol Handshakes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_enumerate_protocols(_:_:)",
                    "title": "nw_establishment_report_enumerate_protocols",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_report_protocol_enumerator_t",
                    "title": "nw_report_protocol_enumerator_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Checking for Proxies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_proxy_configured(_:)",
                    "title": "nw_establishment_report_get_proxy_configured",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_used_proxy(_:)",
                    "title": "nw_establishment_report_get_used_proxy",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_copy_proxy_endpoint(_:)",
                    "title": "nw_establishment_report_copy_proxy_endpoint",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_establishment_report_t",
                "title": "nw_establishment_report_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_address_t",
                "title": "nw_ethernet_address_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_receive_handler_t",
                "title": "nw_ethernet_channel_receive_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_send_completion_t",
                "title": "nw_ethernet_channel_send_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_state_changed_handler_t",
                "title": "nw_ethernet_channel_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Managing Ethernet Channels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_create(_:_:)",
                    "title": "nw_ethernet_channel_create",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_set_queue(_:_:)",
                    "title": "nw_ethernet_channel_set_queue",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_start(_:)",
                    "title": "nw_ethernet_channel_start",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_cancel(_:)",
                    "title": "nw_ethernet_channel_cancel",
                    "type": "func"
                  },
                  {
                    "title": "Handling State Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_set_state_changed_handler(_:_:)",
                    "title": "nw_ethernet_channel_set_state_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_changed_handler_t",
                    "title": "nw_ethernet_channel_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_invalid",
                        "title": "nw_ethernet_channel_state_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_waiting",
                        "title": "nw_ethernet_channel_state_waiting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_preparing",
                        "title": "nw_ethernet_channel_state_preparing",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_ready",
                        "title": "nw_ethernet_channel_state_ready",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_failed",
                        "title": "nw_ethernet_channel_state_failed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_cancelled",
                        "title": "nw_ethernet_channel_state_cancelled",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_ethernet_channel_state_t",
                    "title": "nw_ethernet_channel_state_t",
                    "type": "enum"
                  },
                  {
                    "title": "Sending and Receiving Ethernet Frames",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_send(_:_:_:_:_:)",
                    "title": "nw_ethernet_channel_send",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_send_completion_t",
                    "title": "nw_ethernet_channel_send_completion_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_set_receive_handler(_:_:)",
                    "title": "nw_ethernet_channel_set_receive_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_receive_handler_t",
                    "title": "nw_ethernet_channel_receive_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_address_t",
                    "title": "nw_ethernet_address_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_ethernet_channel_t",
                "title": "nw_ethernet_channel_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_block_t",
                "title": "nw_framer_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_cleanup_handler_t",
                "title": "nw_framer_cleanup_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_input_handler_t",
                "title": "nw_framer_input_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_message_dispose_value_t",
                "title": "nw_framer_message_dispose_value_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_message_t",
                "title": "nw_framer_message_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_output_handler_t",
                "title": "nw_framer_output_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_parse_completion_t",
                "title": "nw_framer_parse_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_start_handler_t",
                "title": "nw_framer_start_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_stop_handler_t",
                "title": "nw_framer_stop_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_t",
                "title": "nw_framer_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_wakeup_handler_t",
                "title": "nw_framer_wakeup_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints_block_t",
                "title": "nw_group_descriptor_enumerate_endpoints_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_t",
                "title": "nw_group_descriptor_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Network Interface Types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Interface types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_wifi",
                        "title": "nw_interface_type_wifi",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_cellular",
                        "title": "nw_interface_type_cellular",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_wired",
                        "title": "nw_interface_type_wired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_loopback",
                        "title": "nw_interface_type_loopback",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_other",
                        "title": "nw_interface_type_other",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_interface_type_t",
                    "title": "nw_interface_type_t",
                    "type": "enum"
                  },
                  {
                    "title": "Inspecting Interfaces",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_interface_get_type(_:)",
                    "title": "nw_interface_get_type",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_interface_get_name(_:)",
                    "title": "nw_interface_get_name",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_interface_get_index(_:)",
                    "title": "nw_interface_get_index",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_interface_t",
                "title": "nw_interface_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_advertised_endpoint_changed_handler_t",
                "title": "nw_listener_advertised_endpoint_changed_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_new_connection_group_handler_t",
                "title": "nw_listener_new_connection_group_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_new_connection_handler_t",
                "title": "nw_listener_new_connection_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_state_changed_handler_t",
                "title": "nw_listener_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Listeners",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_create(_:)",
                    "title": "nw_listener_create",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_create_with_port(_:_:)",
                    "title": "nw_listener_create_with_port",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_create_with_connection(_:_:)",
                    "title": "nw_listener_create_with_connection",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_queue(_:_:)",
                    "title": "nw_listener_set_queue",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_start(_:)",
                    "title": "nw_listener_start",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_get_port(_:)",
                    "title": "nw_listener_get_port",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_cancel(_:)",
                    "title": "nw_listener_cancel",
                    "type": "func"
                  },
                  {
                    "title": "Receiving Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_new_connection_handler(_:_:)",
                    "title": "nw_listener_set_new_connection_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_new_connection_handler_t",
                    "title": "nw_listener_new_connection_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_new_connection_limit(_:_:)",
                    "title": "nw_listener_set_new_connection_limit",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_get_new_connection_limit(_:)",
                    "title": "nw_listener_get_new_connection_limit",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_infinite_connection_limit",
                    "title": "NW_LISTENER_INFINITE_CONNECTION_LIMIT",
                    "type": "macro"
                  },
                  {
                    "title": "Advertising Bonjour Services",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nsbonjourservices",
                    "title": "NSBonjourServices",
                    "type": "typealias"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocalnetworkusagedescription",
                    "title": "NSLocalNetworkUsageDescription",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_advertise_descriptor(_:_:)",
                    "title": "nw_listener_set_advertise_descriptor",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Advertising Bonjour Services",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_create_bonjour_service(_:_:_:)",
                        "title": "nw_advertise_descriptor_create_bonjour_service",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_set_no_auto_rename(_:_:)",
                        "title": "nw_advertise_descriptor_set_no_auto_rename",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_get_no_auto_rename(_:)",
                        "title": "nw_advertise_descriptor_get_no_auto_rename",
                        "type": "func"
                      },
                      {
                        "title": "Configuring TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_set_txt_record(_:_:_:)",
                        "title": "nw_advertise_descriptor_set_txt_record",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_set_txt_record_object(_:_:)",
                        "title": "nw_advertise_descriptor_set_txt_record_object",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_copy_txt_record_object(_:)",
                        "title": "nw_advertise_descriptor_copy_txt_record_object",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_advertise_descriptor_t",
                    "title": "nw_advertise_descriptor_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_advertised_endpoint_changed_handler(_:_:)",
                    "title": "nw_listener_set_advertised_endpoint_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_advertised_endpoint_changed_handler_t",
                    "title": "nw_listener_advertised_endpoint_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Handling State Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_state_changed_handler(_:_:)",
                    "title": "nw_listener_set_state_changed_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_changed_handler_t",
                    "title": "nw_listener_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Listener States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_invalid",
                        "title": "nw_listener_state_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_waiting",
                        "title": "nw_listener_state_waiting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_ready",
                        "title": "nw_listener_state_ready",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_failed",
                        "title": "nw_listener_state_failed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_cancelled",
                        "title": "nw_listener_state_cancelled",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_listener_state_t",
                    "title": "nw_listener_state_t",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/network/nw_listener_t",
                "title": "nw_listener_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_object_t",
                "title": "nw_object_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_gateways_block_t",
                "title": "nw_path_enumerate_gateways_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_interfaces_block_t",
                "title": "nw_path_enumerate_interfaces_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_monitor_cancel_handler_t",
                "title": "nw_path_monitor_cancel_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Path Monitors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_create()",
                    "title": "nw_path_monitor_create",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_create_with_type(_:)",
                    "title": "nw_path_monitor_create_with_type",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_prohibit_interface_type(_:_:)",
                    "title": "nw_path_monitor_prohibit_interface_type",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_set_queue(_:_:)",
                    "title": "nw_path_monitor_set_queue",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_start(_:)",
                    "title": "nw_path_monitor_start",
                    "type": "func"
                  },
                  {
                    "title": "Handling Path Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_set_update_handler(_:_:)",
                    "title": "nw_path_monitor_set_update_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_update_handler_t",
                    "title": "nw_path_monitor_update_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Canceling Path Monitors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_cancel(_:)",
                    "title": "nw_path_monitor_cancel",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_set_cancel_handler(_:_:)",
                    "title": "nw_path_monitor_set_cancel_handler",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_cancel_handler_t",
                    "title": "nw_path_monitor_cancel_handler_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_path_monitor_t",
                "title": "nw_path_monitor_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_monitor_update_handler_t",
                "title": "nw_path_monitor_update_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Checking Path Availability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_get_status(_:)",
                    "title": "nw_path_get_status",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Status Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_invalid",
                        "title": "nw_path_status_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_unsatisfied",
                        "title": "nw_path_status_unsatisfied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_satisfied",
                        "title": "nw_path_status_satisfied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_satisfiable",
                        "title": "nw_path_status_satisfiable",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_path_status_t",
                    "title": "nw_path_status_t",
                    "type": "enum"
                  },
                  {
                    "title": "Inspecting Interfaces",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_uses_interface_type(_:_:)",
                    "title": "nw_path_uses_interface_type",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_interfaces(_:_:)",
                    "title": "nw_path_enumerate_interfaces",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_interfaces_block_t",
                    "title": "nw_path_enumerate_interfaces_block_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_gateways(_:_:)",
                    "title": "nw_path_enumerate_gateways",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_gateways_block_t",
                    "title": "nw_path_enumerate_gateways_block_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Checking Path Capabilities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_has_ipv4(_:)",
                    "title": "nw_path_has_ipv4",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_has_ipv6(_:)",
                    "title": "nw_path_has_ipv6",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_has_dns(_:)",
                    "title": "nw_path_has_dns",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_is_constrained(_:)",
                    "title": "nw_path_is_constrained",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_is_expensive(_:)",
                    "title": "nw_path_is_expensive",
                    "type": "func"
                  },
                  {
                    "title": "Comparing Paths",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_is_equal(_:_:)",
                    "title": "nw_path_is_equal",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Connected Paths",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_copy_effective_local_endpoint(_:)",
                    "title": "nw_path_copy_effective_local_endpoint",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_copy_effective_remote_endpoint(_:)",
                    "title": "nw_path_copy_effective_remote_endpoint",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_path_t",
                "title": "nw_path_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Metadata",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                    "title": "nw_protocol_metadata_copy_definition",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_protocol_metadata_t",
                "title": "nw_protocol_metadata_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_proxy_domain_enumerator_t",
                "title": "nw_proxy_domain_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_report_protocol_enumerator_t",
                "title": "nw_report_protocol_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_report_resolution_enumerator_t",
                "title": "nw_report_resolution_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_report_resolution_report_enumerator_t",
                "title": "nw_report_resolution_report_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_resolution_report_t",
                "title": "nw_resolution_report_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_bytes_t",
                "title": "nw_txt_record_access_bytes_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_key_t",
                "title": "nw_txt_record_access_key_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_txt_record_applier_t",
                "title": "nw_txt_record_applier_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_create_dictionary()",
                    "title": "nw_txt_record_create_dictionary",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                    "title": "nw_txt_record_create_with_bytes",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_copy(_:)",
                    "title": "nw_txt_record_copy",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                    "title": "nw_txt_record_set_key",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                    "title": "nw_txt_record_remove_key",
                    "type": "func"
                  },
                  {
                    "title": "Examining TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                    "title": "nw_txt_record_is_dictionary",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                    "title": "nw_txt_record_get_key_count",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                    "title": "nw_txt_record_apply",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_applier_t",
                    "title": "nw_txt_record_applier_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                    "title": "nw_txt_record_access_key",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_key_t",
                    "title": "nw_txt_record_access_key_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                    "title": "nw_txt_record_find_key",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Key Value Status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_invalid",
                        "title": "nw_txt_record_find_key_invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_not_present",
                        "title": "nw_txt_record_find_key_not_present",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_no_value",
                        "title": "nw_txt_record_find_key_no_value",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                        "title": "nw_txt_record_find_key_empty_value",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                        "title": "nw_txt_record_find_key_non_empty_value",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nw_txt_record_find_key_t",
                    "title": "nw_txt_record_find_key_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                    "title": "nw_txt_record_is_equal",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                    "title": "nw_txt_record_access_bytes",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_bytes_t",
                    "title": "nw_txt_record_access_bytes_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_txt_record_t",
                "title": "nw_txt_record_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_additional_header_enumerator_t",
                "title": "nw_ws_additional_header_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_client_request_handler_t",
                "title": "nw_ws_client_request_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_pong_handler_t",
                "title": "nw_ws_pong_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_request_t",
                "title": "nw_ws_request_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_response_t",
                "title": "nw_ws_response_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_subprotocol_enumerator_t",
                "title": "nw_ws_subprotocol_enumerator_t",
                "type": "typealias"
              }
            ],
            "path": "/documentation/network/network-data-types",
            "title": "Network Data Types",
            "type": "collection"
          }
        ],
        "path": "/documentation/network",
        "title": "Network",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Endpoint Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwendpoint/hostport(host:port:)",
                "title": "case hostPort(host: NWEndpoint.Host, port: NWEndpoint.Port)",
                "type": "case"
              },
              {
                "path": "/documentation/network/nwendpoint/service(name:type:domain:interface:)",
                "title": "case service(name: String, type: String, domain: String, interface: NWInterface?)",
                "type": "case"
              },
              {
                "path": "/documentation/network/nwendpoint/url(_:)",
                "title": "case url(URL)",
                "type": "case"
              },
              {
                "path": "/documentation/network/nwendpoint/unix(path:)",
                "title": "case unix(path: String)",
                "type": "case"
              },
              {
                "title": "Host and Ports",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating Hosts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/host/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing Host Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/host/name(_:_:)",
                    "title": "case name(String, NWInterface?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/host/ipv4(_:)",
                    "title": "case ipv4(IPv4Address)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/host/ipv6(_:)",
                    "title": "case ipv6(IPv6Address)",
                    "type": "case"
                  },
                  {
                    "title": "Requiring Interfaces",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/host/interface",
                    "title": "var interface: NWInterface?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwendpoint/host",
                "title": "NWEndpoint.Host",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating Ports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/init(_:)",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "title": "Setting Well-Known Ports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/any",
                    "title": "static let any: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/ssh",
                    "title": "static let ssh: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/smtp",
                    "title": "static let smtp: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/http",
                    "title": "static let http: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/pop",
                    "title": "static let pop: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/imap",
                    "title": "static let imap: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/https",
                    "title": "static let https: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/imaps",
                    "title": "static let imaps: NWEndpoint.Port",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwendpoint/port/socks",
                    "title": "static let socks: NWEndpoint.Port",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwendpoint/port",
                "title": "NWEndpoint.Port",
                "type": "struct"
              },
              {
                "title": "Internet Addresses",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipaddress/init(_:)",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/ipaddress/init(_:_:)",
                    "title": "init?(Data, NWInterface?)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting Address Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipaddress/rawvalue",
                    "title": "var rawValue: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipaddress/interface",
                    "title": "var interface: NWInterface?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipaddress/islinklocal",
                    "title": "var isLinkLocal: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipaddress/isloopback",
                    "title": "var isLoopback: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipaddress/ismulticast",
                    "title": "var isMulticast: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/ipaddress",
                "title": "IPAddress",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv4address/init(_:)",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/ipv4address/init(_:_:)",
                    "title": "init?(Data, NWInterface?)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting Address Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv4address/rawvalue",
                    "title": "var rawValue: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/interface",
                    "title": "let interface: NWInterface?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/islinklocal",
                    "title": "var isLinkLocal: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/isloopback",
                    "title": "var isLoopback: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/ismulticast",
                    "title": "var isMulticast: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Setting Well-Known Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv4address/any",
                    "title": "static let any: IPv4Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/broadcast",
                    "title": "static let broadcast: IPv4Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/loopback",
                    "title": "static let loopback: IPv4Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/allhostsgroup",
                    "title": "static let allHostsGroup: IPv4Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/allroutersgroup",
                    "title": "static let allRoutersGroup: IPv4Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/allreportsgroup",
                    "title": "static let allReportsGroup: IPv4Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv4address/mdnsgroup",
                    "title": "static let mdnsGroup: IPv4Address",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/ipv4address",
                "title": "IPv4Address",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv6address/init(_:)",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/ipv6address/init(_:_:)",
                    "title": "init?(Data, NWInterface?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/ipv6address/asipv4",
                    "title": "var asIPv4: IPv4Address?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Address Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv6address/rawvalue",
                    "title": "var rawValue: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/interface",
                    "title": "let interface: NWInterface?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/multicastscope",
                    "title": "var multicastScope: IPv6Address.Scope?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Scope Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/ipv6address/scope/nodelocal",
                        "title": "case nodeLocal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/ipv6address/scope/linklocal",
                        "title": "case linkLocal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/ipv6address/scope/sitelocal",
                        "title": "case siteLocal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/ipv6address/scope/organizationlocal",
                        "title": "case organizationLocal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/ipv6address/scope/global",
                        "title": "case global",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/ipv6address/scope",
                    "title": "IPv6Address.Scope",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/ipv6address/isany",
                    "title": "var isAny: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/is6to4",
                    "title": "var is6to4: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/isipv4compatabile",
                    "title": "var isIPv4Compatabile: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/isipv4mapped",
                    "title": "var isIPv4Mapped: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/islinklocal",
                    "title": "var isLinkLocal: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/isloopback",
                    "title": "var isLoopback: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/ismulticast",
                    "title": "var isMulticast: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Setting Well-Known Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv6address/any",
                    "title": "static let any: IPv6Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/broadcast",
                    "title": "static let broadcast: IPv6Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/loopback",
                    "title": "static let loopback: IPv6Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/nodelocalnodes",
                    "title": "static let nodeLocalNodes: IPv6Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/linklocalnodes",
                    "title": "static let linkLocalNodes: IPv6Address",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/ipv6address/linklocalrouters",
                    "title": "static let linkLocalRouters: IPv6Address",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/ipv6address/isuniquelocal",
                    "title": "var isUniqueLocal: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/ipv6address",
                "title": "IPv6Address",
                "type": "struct"
              },
              {
                "title": "Endpoint Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwendpoint/interface",
                "title": "var interface: NWInterface?",
                "type": "property"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwendpoint/opaque(_:)",
                "title": "case opaque(nw_endpoint_t)",
                "type": "case"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwendpoint/txtrecord",
                "title": "var txtRecord: NWTXTRecord?",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwendpoint",
            "title": "NWEndpoint",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Creating Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/tls",
                "title": "class var tls: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/tcp",
                "title": "class var tcp: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/dtls",
                "title": "class var dtls: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/udp",
                "title": "class var udp: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/quic(alpn:)",
                "title": "class func quic(alpn: [String]) -> NWParameters",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwparameters/quicdatagram(alpn:)",
                "title": "class func quicDatagram(alpn: [String]) -> NWParameters",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwparameters/init(tls:tcp:)",
                "title": "convenience init(tls: NWProtocolTLS.Options?, tcp: NWProtocolTCP.Options)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwparameters/init(dtls:udp:)",
                "title": "convenience init(dtls: NWProtocolTLS.Options?, udp: NWProtocolUDP.Options)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwparameters/init(quic:)",
                "title": "convenience init(quic: NWProtocolQUIC.Options)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwparameters/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwparameters/init(customipprotocolnumber:)",
                "title": "init(customIPProtocolNumber: UInt8)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwparameters/copy()",
                "title": "func copy() -> NWParameters",
                "type": "method"
              },
              {
                "title": "Modifying Protocol Stacks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/defaultprotocolstack",
                "title": "var defaultProtocolStack: NWParameters.ProtocolStack",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Adding Application Protocols",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/protocolstack/applicationprotocols",
                    "title": "var applicationProtocols: [NWProtocolOptions]",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Lower Protocols",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/protocolstack/transportprotocol",
                    "title": "var transportProtocol: NWProtocolOptions?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwparameters/protocolstack/internetprotocol",
                    "title": "var internetProtocol: NWProtocolOptions?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwparameters/protocolstack",
                "title": "NWParameters.ProtocolStack",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Adding Protocols to Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoloptions",
                    "title": "NWProtocolOptions",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting Protocol Definitions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocoldefinition/name",
                        "title": "let name: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwprotocoldefinition",
                    "title": "NWProtocolDefinition",
                    "type": "class"
                  },
                  {
                    "title": "Interacting with Protocols",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolmetadata",
                    "title": "NWProtocolMetadata",
                    "type": "class"
                  }
                ],
                "path": "/documentation/network/nwprotocol",
                "title": "NWProtocol",
                "type": "class"
              },
              {
                "title": "Selecting Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/requiredinterfacetype",
                "title": "var requiredInterfaceType: NWInterface.InterfaceType",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/requiredinterface",
                "title": "var requiredInterface: NWInterface?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/requiredlocalendpoint",
                "title": "var requiredLocalEndpoint: NWEndpoint?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/prohibitconstrainedpaths",
                "title": "var prohibitConstrainedPaths: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/prohibitexpensivepaths",
                "title": "var prohibitExpensivePaths: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/prohibitedinterfacetypes",
                "title": "var prohibitedInterfaceTypes: [NWInterface.InterfaceType]?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/prohibitedinterfaces",
                "title": "var prohibitedInterfaces: [NWInterface]?",
                "type": "property"
              },
              {
                "title": "Customizing Connection Options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/multipathservicetype-swift.property",
                "title": "var multipathServiceType: NWParameters.MultipathServiceType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Multipath Service Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/multipathservicetype-swift.enum/disabled",
                    "title": "case disabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/multipathservicetype-swift.enum/handover",
                    "title": "case handover",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/multipathservicetype-swift.enum/interactive",
                    "title": "case interactive",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/multipathservicetype-swift.enum/aggregate",
                    "title": "case aggregate",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwparameters/multipathservicetype-swift.enum",
                "title": "NWParameters.MultipathServiceType",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwparameters/serviceclass-swift.property",
                "title": "var serviceClass: NWParameters.ServiceClass",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Service Classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/serviceclass-swift.enum/besteffort",
                    "title": "case bestEffort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/serviceclass-swift.enum/background",
                    "title": "case background",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/serviceclass-swift.enum/interactivevideo",
                    "title": "case interactiveVideo",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/serviceclass-swift.enum/interactivevoice",
                    "title": "case interactiveVoice",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/serviceclass-swift.enum/responsivedata",
                    "title": "case responsiveData",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/serviceclass-swift.enum/signaling",
                    "title": "case signaling",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwparameters/serviceclass-swift.enum",
                "title": "NWParameters.ServiceClass",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwparameters/allowfastopen",
                "title": "var allowFastOpen: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/expireddnsbehavior-swift.property",
                "title": "var expiredDNSBehavior: NWParameters.ExpiredDNSBehavior",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Behaviors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/expireddnsbehavior-swift.enum/systemdefault",
                    "title": "case systemDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/expireddnsbehavior-swift.enum/allow",
                    "title": "case allow",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/expireddnsbehavior-swift.enum/prohibit",
                    "title": "case prohibit",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/expireddnsbehavior-swift.enum/persistent",
                    "title": "case persistent",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwparameters/expireddnsbehavior-swift.enum",
                "title": "NWParameters.ExpiredDNSBehavior",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwparameters/requiresdnssecvalidation",
                "title": "var requiresDNSSECValidation: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/prefernoproxies",
                "title": "var preferNoProxies: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/includepeertopeer",
                "title": "var includePeerToPeer: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/allowlocalendpointreuse",
                "title": "var allowLocalEndpointReuse: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwparameters/acceptlocalonly",
                "title": "var acceptLocalOnly: Bool",
                "type": "property"
              },
              {
                "title": "Configuring Privacy Settings",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/setprivacycontext(_:)",
                "title": "func setPrivacyContext(NWParameters.PrivacyContext)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Configuring Custom Privacy Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/privacycontext/init(description:)",
                    "title": "init(description: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwparameters/privacycontext/default",
                    "title": "static let `default`: NWParameters.PrivacyContext",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwparameters/privacycontext/disablelogging()",
                    "title": "func disableLogging()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwparameters/privacycontext/flushcache()",
                    "title": "func flushCache()",
                    "type": "method"
                  },
                  {
                    "title": "Requiring Encrypted DNS",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/privacycontext/requireencryptednameresolution(_:fallbackresolver:)",
                    "title": "func requireEncryptedNameResolution(Bool, fallbackResolver: NWParameters.PrivacyContext.ResolverConfiguration?)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Resolver Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwparameters/privacycontext/resolverconfiguration/https(_:serveraddresses:)",
                        "title": "case https(URL, serverAddresses: [NWEndpoint])",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwparameters/privacycontext/resolverconfiguration/tls(_:serveraddresses:)",
                        "title": "case tls(NWEndpoint, serverAddresses: [NWEndpoint])",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwparameters/privacycontext/resolverconfiguration",
                    "title": "NWParameters.PrivacyContext.ResolverConfiguration",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring Proxies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/privacycontext/proxyconfigurations",
                    "title": "var proxyConfigurations: [ProxyConfiguration]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Proxy Configurations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/init(relayhops:)",
                        "title": "init(relayHops: [ProxyConfiguration.RelayHop])",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating Relay Hops",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/proxyconfiguration/relayhop/init(http3relayendpoint:http2relayendpoint:tlsoptions:additionalhttpheaderfields:)",
                            "title": "init(http3RelayEndpoint: NWEndpoint, http2RelayEndpoint: NWEndpoint?, tlsOptions: NWProtocolTLS.Options, additionalHTTPHeaderFields: [String : String])",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/network/proxyconfiguration/relayhop/init(http2relayendpoint:tlsoptions:additionalhttpheaderfields:)",
                            "title": "init(http2RelayEndpoint: NWEndpoint, tlsOptions: NWProtocolTLS.Options, additionalHTTPHeaderFields: [String : String])",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/network/proxyconfiguration/relayhop",
                        "title": "ProxyConfiguration.RelayHop",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/init(httpconnectproxy:tlsoptions:)",
                        "title": "init(httpCONNECTProxy: NWEndpoint, tlsOptions: NWProtocolTLS.Options?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/init(socksv5proxy:)",
                        "title": "init(socksv5Proxy: NWEndpoint)",
                        "type": "init"
                      },
                      {
                        "title": "Customizing Proxy Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/allowfailover",
                        "title": "var allowFailover: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/applycredential(username:password:)",
                        "title": "func applyCredential(username: String, password: String)",
                        "type": "method"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/init(oblivioushttprelay:relayresourcepath:gatewaykeyconfig:matchdomains:)",
                        "title": "init(obliviousHTTPRelay: ProxyConfiguration.RelayHop, relayResourcePath: String, gatewayKeyConfig: Data, matchDomains: [String])",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/excludeddomains",
                        "title": "var excludedDomains: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/proxyconfiguration/matchdomains",
                        "title": "var matchDomains: [String]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/proxyconfiguration",
                    "title": "ProxyConfiguration",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/network/nwparameters/privacycontext",
                "title": "NWParameters.PrivacyContext",
                "type": "class"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/attribution-swift.property",
                "title": "var attribution: NWParameters.Attribution",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwparameters/applicationservice",
                "title": "class var applicationService: NWParameters",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwparameters/attribution-swift.enum/developer",
                    "title": "case developer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwparameters/attribution-swift.enum/user",
                    "title": "case user",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwparameters/attribution-swift.enum",
                "title": "NWParameters.Attribution",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/nwparameters",
            "title": "NWParameters",
            "type": "class"
          },
          {
            "title": "Connections and Listeners",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/init(host:port:using:)",
                "title": "convenience init(host: NWEndpoint.Host, port: NWEndpoint.Port, using: NWParameters)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwconnection/init(to:using:)",
                "title": "init(to: NWEndpoint, using: NWParameters)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwconnection/start(queue:)",
                "title": "func start(queue: DispatchQueue)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/restart()",
                "title": "func restart()",
                "type": "method"
              },
              {
                "title": "Handling State Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/state-swift.property",
                "title": "var state: NWConnection.State",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/state-swift.enum/setup",
                    "title": "case setup",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnection/state-swift.enum/waiting(_:)",
                    "title": "case waiting(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnection/state-swift.enum/preparing",
                    "title": "case preparing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnection/state-swift.enum/ready",
                    "title": "case ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnection/state-swift.enum/failed(_:)",
                    "title": "case failed(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnection/state-swift.enum/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwconnection/state-swift.enum",
                "title": "NWConnection.State",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwconnection/stateupdatehandler",
                "title": "var stateUpdateHandler: ((NWConnection.State) -> Void)?",
                "type": "property"
              },
              {
                "title": "Sending and Receiving Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/send(content:contentcontext:iscomplete:completion:)-5ecuz",
                "title": "func send(content: Data?, contentContext: NWConnection.ContentContext, isComplete: Bool, completion: NWConnection.SendCompletion)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/send(content:contentcontext:iscomplete:completion:)-3mfmt",
                "title": "func send<Content>(content: Content?, contentContext: NWConnection.ContentContext, isComplete: Bool, completion: NWConnection.SendCompletion)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Completions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/sendcompletion/contentprocessed(_:)",
                    "title": "case contentProcessed((NWError?) -> Void)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnection/sendcompletion/idempotent",
                    "title": "case idempotent",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwconnection/sendcompletion",
                "title": "NWConnection.SendCompletion",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwconnection/receive(minimumincompletelength:maximumlength:completion:)",
                "title": "func receive(minimumIncompleteLength: Int, maximumLength: Int, completion: (Data?, NWConnection.ContentContext?, Bool, NWError?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/receivemessage(completion:)",
                "title": "func receiveMessage(completion: (Data?, NWConnection.ContentContext?, Bool, NWError?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/batch(_:)",
                "title": "func batch(() -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Using Constant Send Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/defaultmessage",
                    "title": "static let defaultMessage: NWConnection.ContentContext",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/finalmessage",
                    "title": "static let finalMessage: NWConnection.ContentContext",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/defaultstream",
                    "title": "static let defaultStream: NWConnection.ContentContext",
                    "type": "property"
                  },
                  {
                    "title": "Creating Custom Send Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/init(identifier:expiration:priority:isfinal:antecedent:metadata:)",
                    "title": "init(identifier: String, expiration: UInt64, priority: Double, isFinal: Bool, antecedent: NWConnection.ContentContext?, metadata: [NWProtocolMetadata]?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/identifier",
                    "title": "let identifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/protocolmetadata",
                    "title": "var protocolMetadata: [NWProtocolMetadata]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolmetadata",
                    "title": "NWProtocolMetadata",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/antecedent",
                    "title": "let antecedent: NWConnection.ContentContext?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/expirationmilliseconds",
                    "title": "let expirationMilliseconds: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/relativepriority",
                    "title": "let relativePriority: Double",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Receive Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/isfinal",
                    "title": "let isFinal: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/contentcontext/protocolmetadata(definition:)",
                    "title": "func protocolMetadata(definition: NWProtocolDefinition) -> NWProtocolMetadata?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/network/nwconnection/contentcontext",
                "title": "NWConnection.ContentContext",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwconnection/maximumdatagramsize",
                "title": "var maximumDatagramSize: Int",
                "type": "property"
              },
              {
                "title": "Canceling Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/forcecancel()",
                "title": "func forceCancel()",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/cancelcurrentendpoint()",
                "title": "func cancelCurrentEndpoint()",
                "type": "method"
              },
              {
                "title": "Handling Path Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/currentpath",
                "title": "var currentPath: NWPath?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnection/pathupdatehandler",
                "title": "var pathUpdateHandler: ((NWPath) -> Void)?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnection/viabilityupdatehandler",
                "title": "var viabilityUpdateHandler: ((Bool) -> Void)?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnection/betterpathupdatehandler",
                "title": "var betterPathUpdateHandler: ((Bool) -> Void)?",
                "type": "property"
              },
              {
                "title": "Collecting Connection Metrics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/collecting-network-connection-metrics",
                "title": "Collecting Network Connection Metrics",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/network/nwconnection/requestestablishmentreport(queue:completion:)",
                "title": "func requestEstablishmentReport(queue: DispatchQueue, completion: (NWConnection.EstablishmentReport?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Connection Attempts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/duration",
                    "title": "let duration: TimeInterval",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/previousattemptcount",
                    "title": "let previousAttemptCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/attemptstartedafterinterval",
                    "title": "let attemptStartedAfterInterval: TimeInterval",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Resolution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/resolutions",
                    "title": "let resolutions: [NWConnection.EstablishmentReport.Resolution]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Measuring Performance",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/duration",
                        "title": "let duration: TimeInterval",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/source-swift.property",
                        "title": "let source: NWConnection.EstablishmentReport.Resolution.Source",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Resolution Sources",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/source-swift.enum/query",
                            "title": "case query",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/source-swift.enum/cache",
                            "title": "case cache",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/source-swift.enum/expiredcache",
                            "title": "case expiredCache",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/source-swift.enum",
                        "title": "NWConnection.EstablishmentReport.Resolution.Source",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.property",
                        "title": "var dnsProtocol: NWConnection.EstablishmentReport.Resolution.DNSProtocol",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Resolution Transports",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.enum/unknown",
                            "title": "case unknown",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.enum/udp",
                            "title": "case udp",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.enum/tcp",
                            "title": "case tcp",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.enum/tls",
                            "title": "case tls",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.enum/https",
                            "title": "case https",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/dnsprotocol-swift.enum",
                        "title": "NWConnection.EstablishmentReport.Resolution.DNSProtocol",
                        "type": "enum"
                      },
                      {
                        "title": "Examining Resolved Endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/successfulendpoint",
                        "title": "let successfulEndpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/preferredendpoint",
                        "title": "let preferredEndpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/resolution/endpointcount",
                        "title": "let endpointCount: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwconnection/establishmentreport/resolution",
                    "title": "NWConnection.EstablishmentReport.Resolution",
                    "type": "struct"
                  },
                  {
                    "title": "Inspecting Protocol Handshakes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/handshakes",
                    "title": "let handshakes: [NWConnection.EstablishmentReport.Handshake]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Measuring Performance",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/handshake/handshakeduration",
                        "title": "let handshakeDuration: TimeInterval",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/handshake/handshakertt",
                        "title": "let handshakeRTT: TimeInterval",
                        "type": "property"
                      },
                      {
                        "title": "Identifying Protocols",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/establishmentreport/handshake/definition",
                        "title": "let definition: NWProtocolDefinition",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwconnection/establishmentreport/handshake",
                    "title": "NWConnection.EstablishmentReport.Handshake",
                    "type": "struct"
                  },
                  {
                    "title": "Checking for Proxies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/proxyconfigured",
                    "title": "let proxyConfigured: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/usedproxy",
                    "title": "let usedProxy: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/establishmentreport/proxyendpoint",
                    "title": "let proxyEndpoint: NWEndpoint?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwconnection/establishmentreport",
                "title": "NWConnection.EstablishmentReport",
                "type": "struct"
              },
              {
                "path": "/documentation/network/nwconnection/startdatatransferreport()",
                "title": "func startDataTransferReport() -> NWConnection.PendingDataTransferReport",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Collecting Reports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/pendingdatatransferreport/collect(queue:completion:)",
                    "title": "func collect(queue: DispatchQueue, completion: (NWConnection.DataTransferReport) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/network/nwconnection/pendingdatatransferreport",
                "title": "NWConnection.PendingDataTransferReport",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Examining Data Transfer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/datatransferreport/aggregatepathreport",
                    "title": "let aggregatePathReport: NWConnection.DataTransferReport.PathReport",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnection/datatransferreport/pathreports",
                    "title": "let pathReports: [NWConnection.DataTransferReport.PathReport]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying Paths",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/interface",
                        "title": "let interface: NWInterface",
                        "type": "property"
                      },
                      {
                        "title": "Inspecting Application Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/receivedapplicationbytecount",
                        "title": "let receivedApplicationByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/sentapplicationbytecount",
                        "title": "let sentApplicationByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "title": "Inspecting Transport Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/receivedtransportbytecount",
                        "title": "let receivedTransportByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/receivedtransportduplicatebytecount",
                        "title": "let receivedTransportDuplicateByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/receivedtransportoutoforderbytecount",
                        "title": "let receivedTransportOutOfOrderByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/senttransportbytecount",
                        "title": "let sentTransportByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/retransmittedtransportbytecount",
                        "title": "let retransmittedTransportByteCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/transportsmoothedrtt",
                        "title": "let transportSmoothedRTT: TimeInterval",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/transportminimumrtt",
                        "title": "let transportMinimumRTT: TimeInterval",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/transportrttvariance",
                        "title": "let transportRTTVariance: TimeInterval",
                        "type": "property"
                      },
                      {
                        "title": "Inspecting Packet Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/receivedippacketcount",
                        "title": "let receivedIPPacketCount: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/sentippacketcount",
                        "title": "let sentIPPacketCount: UInt64",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwconnection/datatransferreport/pathreport/radiotype",
                        "title": "var radioType: NWInterface.RadioType?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwconnection/datatransferreport/pathreport",
                    "title": "NWConnection.DataTransferReport.PathReport",
                    "type": "struct"
                  },
                  {
                    "title": "Summarizing Reports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnection/datatransferreport/duration",
                    "title": "let duration: TimeInterval",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwconnection/datatransferreport",
                "title": "NWConnection.DataTransferReport",
                "type": "struct"
              },
              {
                "title": "Inspecting Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/metadata(definition:)",
                "title": "func metadata(definition: NWProtocolDefinition) -> NWProtocolMetadata?",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwprotocolmetadata",
                "title": "NWProtocolMetadata",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwconnection/endpoint",
                "title": "let endpoint: NWEndpoint",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnection/parameters",
                "title": "let parameters: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnection/queue",
                "title": "var queue: DispatchQueue?",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/init(from:to:using:)",
                "title": "convenience init?(from: NWConnectionGroup, to: NWEndpoint?, using: NWProtocolOptions?)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwconnection/init(message:)",
                "title": "convenience init?(message: NWConnectionGroup.Message)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnection/receivediscontiguous(minimumincompletelength:maximumlength:completion:)",
                "title": "func receiveDiscontiguous(minimumIncompleteLength: Int, maximumLength: Int, completion: (DispatchData?, NWConnection.ContentContext?, Bool, NWError?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnection/receivemessagediscontiguous(completion:)",
                "title": "func receiveMessageDiscontiguous(completion: (DispatchData?, NWConnection.ContentContext?, Bool, NWError?) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/network/nwconnection",
            "title": "NWConnection",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Listeners",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwlistener/init(using:on:)",
                "title": "init(using: NWParameters, on: NWEndpoint.Port) throws",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwlistener/start(queue:)",
                "title": "func start(queue: DispatchQueue)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwlistener/stateupdatehandler",
                "title": "var stateUpdateHandler: ((NWListener.State) -> Void)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwlistener/state-swift.enum/setup",
                    "title": "case setup",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwlistener/state-swift.enum/waiting(_:)",
                    "title": "case waiting(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwlistener/state-swift.enum/ready",
                    "title": "case ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwlistener/state-swift.enum/failed(_:)",
                    "title": "case failed(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwlistener/state-swift.enum/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwlistener/state-swift.enum",
                "title": "NWListener.State",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwlistener/port",
                "title": "var port: NWEndpoint.Port?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwlistener/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Receiving Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwlistener/newconnectionhandler",
                "title": "var newConnectionHandler: ((NWConnection) -> Void)?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwlistener/newconnectionlimit",
                "title": "var newConnectionLimit: Int",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwlistener/infiniteconnectionlimit",
                "title": "static let InfiniteConnectionLimit: Int",
                "type": "property"
              },
              {
                "title": "Advertising Bonjour Services",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsbonjourservices",
                "title": "NSBonjourServices",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nslocalnetworkusagedescription",
                "title": "NSLocalNetworkUsageDescription",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nwlistener/service-swift.property",
                "title": "var service: NWListener.Service?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Defining Services",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/init(name:type:domain:txtrecord:)-1lb30",
                    "title": "init(name: String?, type: String, domain: String?, txtRecord: Data?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/init(name:type:domain:txtrecord:)-8qh5",
                    "title": "init(name: String?, type: String, domain: String?, txtRecord: NWTXTRecord)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/noautorename",
                    "title": "var noAutoRename: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Services",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/name",
                    "title": "let name: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/type",
                    "title": "let type: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/domain",
                    "title": "let domain: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/txtrecordobject",
                    "title": "var txtRecordObject: NWTXTRecord?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/txtrecord",
                    "title": "let txtRecord: Data?",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwlistener/service-swift.struct/init(applicationservice:)",
                    "title": "init(applicationService: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/network/nwlistener/service-swift.struct",
                "title": "NWListener.Service",
                "type": "struct"
              },
              {
                "path": "/documentation/network/nwlistener/serviceregistrationupdatehandler",
                "title": "var serviceRegistrationUpdateHandler: ((NWListener.ServiceRegistrationChange) -> Void)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwlistener/serviceregistrationchange/add(_:)",
                    "title": "case add(NWEndpoint)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwlistener/serviceregistrationchange/remove(_:)",
                    "title": "case remove(NWEndpoint)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwlistener/serviceregistrationchange",
                "title": "NWListener.ServiceRegistrationChange",
                "type": "enum"
              },
              {
                "title": "Inspecting Listeners",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwlistener/parameters",
                "title": "let parameters: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwlistener/queue",
                "title": "var queue: DispatchQueue?",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwlistener/init(applicationservice:using:)",
                "title": "convenience init(applicationService: String, using: NWParameters) throws",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/network/nwlistener/init(launchd:using:)",
                "title": "convenience init?(launchd: String, using: NWParameters)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwlistener/init(launchdsocketkey:parameters:)",
                "title": "convenience init(launchdSocketKey: String, parameters: NWParameters)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwlistener/init(service:using:)",
                "title": "convenience init(service: NWListener.Service, using: NWParameters) throws",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwlistener/newconnectiongrouphandler",
                "title": "var newConnectionGroupHandler: ((NWConnectionGroup) -> Void)?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwlistener/state-swift.property",
                "title": "var state: NWListener.State",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwlistener",
            "title": "NWListener",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsbonjourservices",
                "title": "NSBonjourServices",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nslocalnetworkusagedescription",
                "title": "NSLocalNetworkUsageDescription",
                "type": "typealias"
              },
              {
                "title": "Browsing for Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwbrowser/init(for:using:)",
                "title": "init(for: NWBrowser.Descriptor, using: NWParameters)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Descriptor Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/descriptor-swift.enum/bonjour(type:domain:)",
                    "title": "case bonjour(type: String, domain: String?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/descriptor-swift.enum/bonjourwithtxtrecord(type:domain:)",
                    "title": "case bonjourWithTXTRecord(type: String, domain: String?)",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/descriptor-swift.enum/applicationservice(name:)",
                    "title": "case applicationService(name: String)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwbrowser/descriptor-swift.enum",
                "title": "NWBrowser.Descriptor",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwbrowser/start(queue:)",
                "title": "func start(queue: DispatchQueue)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwbrowser/browseresultschangedhandler",
                "title": "var browseResultsChangedHandler: ((Set<NWBrowser.Result>, Set<NWBrowser.Result.Change>) -> Void)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Evaluating Browser Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/result/endpoint",
                    "title": "let endpoint: NWEndpoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/result/interfaces",
                    "title": "let interfaces: [NWInterface]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/result/metadata-swift.property",
                    "title": "let metadata: NWBrowser.Result.Metadata",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Metadata Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/metadata-swift.enum/bonjour(_:)",
                        "title": "case bonjour(NWTXTRecord)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/metadata-swift.enum/none",
                        "title": "case none",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwbrowser/result/metadata-swift.enum",
                    "title": "NWBrowser.Result.Metadata",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/init(_:)-566pd",
                        "title": "init([String : String])",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/removeentry(key:)",
                        "title": "func removeEntry(key: String) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/setentry(_:for:)",
                        "title": "func setEntry(NWTXTRecord.Entry, for: String) -> Bool",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Entry Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwtxtrecord/entry/none",
                            "title": "case none",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwtxtrecord/entry/empty",
                            "title": "case empty",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwtxtrecord/entry/string(_:)",
                            "title": "case string(String)",
                            "type": "case"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwtxtrecord/entry/data(_:)",
                            "title": "case data(Data)",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwtxtrecord/entry/init(_:)",
                            "title": "init(Data?)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwtxtrecord/entry/data",
                            "title": "var data: Data?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/network/nwtxtrecord/entry",
                        "title": "NWTXTRecord.Entry",
                        "type": "enum"
                      },
                      {
                        "title": "Examining TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/getentry(for:)",
                        "title": "func getEntry(for: String) -> NWTXTRecord.Entry?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/subscript(_:)",
                        "title": "subscript(String) -> String?",
                        "type": "subscript"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/dictionary",
                        "title": "var dictionary: [String : String]",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/init(_:)-30jy4",
                        "title": "init(Data)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwtxtrecord/data",
                        "title": "var data: Data",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwtxtrecord",
                    "title": "NWTXTRecord",
                    "type": "struct"
                  },
                  {
                    "title": "Comparing Results",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting Change Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/change/identical",
                        "title": "case identical",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/change/added(_:)",
                        "title": "case added(NWBrowser.Result)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/change/removed(_:)",
                        "title": "case removed(NWBrowser.Result)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/change/changed(old:new:flags:)",
                        "title": "case changed(old: NWBrowser.Result, new: NWBrowser.Result, flags: NWBrowser.Result.Change.Flags)",
                        "type": "case"
                      },
                      {
                        "children": [
                          {
                            "title": "Change Flags",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwbrowser/result/change/flags/identical",
                            "title": "static let identical: NWBrowser.Result.Change.Flags",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/network/nwbrowser/result/change/flags/interfaceadded",
                            "title": "static let interfaceAdded: NWBrowser.Result.Change.Flags",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/network/nwbrowser/result/change/flags/interfaceremoved",
                            "title": "static let interfaceRemoved: NWBrowser.Result.Change.Flags",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/network/nwbrowser/result/change/flags/metadatachanged",
                            "title": "static let metadataChanged: NWBrowser.Result.Change.Flags",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/network/nwbrowser/result/change/flags",
                        "title": "NWBrowser.Result.Change.Flags",
                        "type": "struct"
                      },
                      {
                        "title": "Calculating Result Changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwbrowser/result/change/init(between:_:)",
                        "title": "init(between: NWBrowser.Result?, NWBrowser.Result?)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/network/nwbrowser/result/change",
                    "title": "NWBrowser.Result.Change",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/network/nwbrowser/result",
                "title": "NWBrowser.Result",
                "type": "struct"
              },
              {
                "path": "/documentation/network/nwbrowser/browseresults",
                "title": "var browseResults: Set<NWBrowser.Result>",
                "type": "property"
              },
              {
                "title": "Managing Browsers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwbrowser/stateupdatehandler",
                "title": "var stateUpdateHandler: ((NWBrowser.State) -> Void)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/state-swift.enum/setup",
                    "title": "case setup",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/state-swift.enum/ready",
                    "title": "case ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/state-swift.enum/failed(_:)",
                    "title": "case failed(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/state-swift.enum/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwbrowser/state-swift.enum/waiting(_:)",
                    "title": "case waiting(NWError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwbrowser/state-swift.enum",
                "title": "NWBrowser.State",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwbrowser/state-swift.property",
                "title": "var state: NWBrowser.State",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwbrowser/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Inspecting Browsers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwbrowser/descriptor-swift.property",
                "title": "let descriptor: NWBrowser.Descriptor",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwbrowser/parameters",
                "title": "let parameters: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwbrowser/queue",
                "title": "var queue: DispatchQueue?",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwbrowser",
            "title": "NWBrowser",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Establishing Group Connectivity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/init(with:using:)",
                "title": "init(with: any NWGroupDescriptor, using: NWParameters)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.multicast",
                    "title": "com.apple.developer.networking.multicast",
                    "type": "typealias"
                  },
                  {
                    "title": "Defining Multicast Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwmulticastgroup/init(for:from:disableunicast:)",
                    "title": "init(for: [NWEndpoint], from: NWEndpoint?, disableUnicast: Bool) throws",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting Multicast Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwmulticastgroup/members",
                    "title": "var members: [NWEndpoint]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwmulticastgroup/sourcefilter",
                    "title": "let sourceFilter: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwmulticastgroup/isunicastdisabled",
                    "title": "let isUnicastDisabled: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwmulticastgroup",
                "title": "NWMulticastGroup",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwgroupdescriptor/members",
                    "title": "var members: [NWEndpoint]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwgroupdescriptor",
                "title": "NWGroupDescriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/start(queue:)",
                "title": "func start(queue: DispatchQueue)",
                "type": "method"
              },
              {
                "title": "Sending and Receiving Group Messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/setreceivehandler(maximummessagesize:rejectoversizedmessages:handler:)",
                "title": "func setReceiveHandler(maximumMessageSize: Int, rejectOversizedMessages: Bool, handler: ((NWConnectionGroup.Message, Data?, Bool) -> Void)?)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/send(content:to:message:completion:)",
                "title": "func send(content: Data?, to: NWEndpoint?, message: NWConnectionGroup.Message, completion: (NWError?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Received Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/remoteendpoint",
                    "title": "var remoteEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/localendpoint",
                    "title": "var localEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/path",
                    "title": "var path: NWPath?",
                    "type": "property"
                  },
                  {
                    "title": "Replying to Received Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/reply(content:message:)",
                    "title": "func reply(content: Data?, message: NWConnectionGroup.Message)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/extractconnection()",
                    "title": "func extractConnection() -> NWConnection?",
                    "type": "method"
                  },
                  {
                    "title": "Sending Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/default",
                    "title": "static let `default`: NWConnectionGroup.Message",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/init(identifier:expiration:priority:isfinal:antecedent:metadata:)",
                    "title": "init(identifier: String, expiration: UInt64, priority: Double, isFinal: Bool, antecedent: NWConnection.ContentContext?, metadata: [NWProtocolMetadata]?)",
                    "type": "init"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/init(nw:)",
                    "title": "init(nw: nw_content_context_t)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/message/metadata(definition:)",
                    "title": "func metadata(definition: NWProtocolDefinition) -> NWProtocolMetadata?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/network/nwconnectiongroup/message",
                "title": "NWConnectionGroup.Message",
                "type": "class"
              },
              {
                "title": "Managing Groups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/stateupdatehandler",
                "title": "var stateUpdateHandler: ((NWConnectionGroup.State) -> Void)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/state-swift.enum/setup",
                    "title": "case setup",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/state-swift.enum/waiting(_:)",
                    "title": "case waiting(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/state-swift.enum/ready",
                    "title": "case ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/state-swift.enum/failed(_:)",
                    "title": "case failed(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwconnectiongroup/state-swift.enum/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwconnectiongroup/state-swift.enum",
                "title": "NWConnectionGroup.State",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/state-swift.property",
                "title": "var state: NWConnectionGroup.State",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Inspecting Groups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/descriptor",
                "title": "let descriptor: any NWGroupDescriptor",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/parameters",
                "title": "let parameters: NWParameters",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/queue",
                "title": "var queue: DispatchQueue?",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/newconnectionhandler",
                "title": "var newConnectionHandler: ((NWConnection) -> Void)?",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/extract(connectionto:using:)",
                "title": "func extract(connectionTo: NWEndpoint?, using: NWProtocolOptions?) -> NWConnection?",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/metadata(definition:)",
                "title": "func metadata(definition: NWProtocolDefinition) -> NWProtocolMetadata?",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwconnectiongroup/reinsert(connection:)",
                "title": "func reinsert(connection: NWConnection) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/network/nwconnectiongroup",
            "title": "NWConnectionGroup",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Ethernet Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwethernetchannel/init(on:ethertype:)",
                "title": "init(on: NWInterface, etherType: UInt16)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwethernetchannel/start(queue:)",
                "title": "func start(queue: DispatchQueue)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwethernetchannel/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Handling State Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwethernetchannel/state-swift.property",
                "title": "var state: NWEthernetChannel.State",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/state-swift.enum/setup",
                    "title": "case setup",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/state-swift.enum/waiting(_:)",
                    "title": "case waiting(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/state-swift.enum/preparing",
                    "title": "case preparing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/state-swift.enum/ready",
                    "title": "case ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/state-swift.enum/failed(_:)",
                    "title": "case failed(NWError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/state-swift.enum/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwethernetchannel/state-swift.enum",
                "title": "NWEthernetChannel.State",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwethernetchannel/stateupdatehandler",
                "title": "var stateUpdateHandler: ((NWEthernetChannel.State) -> Void)?",
                "type": "property"
              },
              {
                "title": "Sending and Receiving Ethernet Frames",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwethernetchannel/send(content:to:vlantag:completion:)",
                "title": "func send(content: Data, to: NWEthernetChannel.EthernetAddress, vlanTag: UInt16, completion: (NWError?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwethernetchannel/receivehandler",
                "title": "var receiveHandler: ((Data, UInt16, NWEthernetChannel.EthernetAddress, NWEthernetChannel.EthernetAddress) -> Void)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/ethernetaddress/init(_:)-62x9i",
                    "title": "init?(Data)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/ethernetaddress/init(_:)-1brh7",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting Addresses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwethernetchannel/ethernetaddress/rawvalue",
                    "title": "var rawValue: Data",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwethernetchannel/ethernetaddress",
                "title": "NWEthernetChannel.EthernetAddress",
                "type": "struct"
              },
              {
                "title": "Inspecting Ethernet Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwethernetchannel/ethertype",
                "title": "let etherType: UInt16",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwethernetchannel/interface",
                "title": "let interface: NWInterface",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwethernetchannel/queue",
                "title": "var queue: DispatchQueue?",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwethernetchannel/init(on:ethertype:parameters:)",
                "title": "init(on: NWInterface, etherType: UInt16, parameters: NWParameters)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwethernetchannel/maximumpayloadsize",
                "title": "var maximumPayloadSize: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwethernetchannel",
            "title": "NWEthernetChannel",
            "type": "class"
          },
          {
            "title": "Network Protocols",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/building-a-custom-peer-to-peer-protocol",
            "title": "Building a custom peer-to-peer protocol",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating TCP Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Customizing TCP Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/enablefastopen",
                    "title": "var enableFastOpen: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/maximumsegmentsize",
                    "title": "var maximumSegmentSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/nodelay",
                    "title": "var noDelay: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/nooptions",
                    "title": "var noOptions: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/nopush",
                    "title": "var noPush: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/retransmitfindrop",
                    "title": "var retransmitFinDrop: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/disableackstretching",
                    "title": "var disableAckStretching: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/disableecn",
                    "title": "var disableECN: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Keepalives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/enablekeepalive",
                    "title": "var enableKeepalive: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/keepaliveidle",
                    "title": "var keepaliveIdle: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/keepalivecount",
                    "title": "var keepaliveCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/keepaliveinterval",
                    "title": "var keepaliveInterval: Int",
                    "type": "property"
                  },
                  {
                    "title": "Setting Timeouts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/connectiontimeout",
                    "title": "var connectionTimeout: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/connectiondroptime",
                    "title": "var connectionDropTime: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/options/persisttimeout",
                    "title": "var persistTimeout: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocoltcp/options",
                "title": "NWProtocolTCP.Options",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwprotocoltcp/definition",
                "title": "static let definition: NWProtocolDefinition",
                "type": "property"
              },
              {
                "title": "Inspecting TCP State",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting TCP State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/metadata/availablesendbuffer",
                    "title": "var availableSendBuffer: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltcp/metadata/availablereceivebuffer",
                    "title": "var availableReceiveBuffer: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocoltcp/metadata",
                "title": "NWProtocolTCP.Metadata",
                "type": "class"
              }
            ],
            "path": "/documentation/network/nwprotocoltcp",
            "title": "NWProtocolTCP",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating TLS Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Customizing TLS Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltls/options/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltls/options/securityprotocoloptions",
                    "title": "var securityProtocolOptions: sec_protocol_options_t",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocoltls/options",
                "title": "NWProtocolTLS.Options",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwprotocoltls/definition",
                "title": "static let definition: NWProtocolDefinition",
                "type": "property"
              },
              {
                "title": "Inspecting TLS State",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting TLS State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoltls/metadata/securityprotocolmetadata",
                    "title": "var securityProtocolMetadata: sec_protocol_metadata_t",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocoltls/metadata",
                "title": "NWProtocolTLS.Metadata",
                "type": "class"
              }
            ],
            "path": "/documentation/network/nwprotocoltls",
            "title": "NWProtocolTLS",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating QUIC Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Customizing Connection Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/init(alpn:)",
                    "title": "convenience init(alpn: [String])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/alpn",
                    "title": "var alpn: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/idletimeout",
                    "title": "var idleTimeout: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/initialmaxdata",
                    "title": "var initialMaxData: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/initialmaxstreamdatabidirectionallocal",
                    "title": "var initialMaxStreamDataBidirectionalLocal: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/initialmaxstreamdatabidirectionalremote",
                    "title": "var initialMaxStreamDataBidirectionalRemote: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/initialmaxstreamdataunidirectional",
                    "title": "var initialMaxStreamDataUnidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/initialmaxstreamsbidirectional",
                    "title": "var initialMaxStreamsBidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/initialmaxstreamsunidirectional",
                    "title": "var initialMaxStreamsUnidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/maxdatagramframesize",
                    "title": "var maxDatagramFrameSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/maxudppayloadsize",
                    "title": "var maxUDPPayloadSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/securityprotocoloptions",
                    "title": "var securityProtocolOptions: sec_protocol_options_t",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Stream Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/direction-swift.property",
                    "title": "var direction: NWProtocolQUIC.Options.Direction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Direction Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/options/direction-swift.enum/bidirectional",
                        "title": "case bidirectional",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/options/direction-swift.enum/unidirectional",
                        "title": "case unidirectional",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolquic/options/direction-swift.enum",
                    "title": "NWProtocolQUIC.Options.Direction",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/options/isdatagram",
                    "title": "var isDatagram: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocolquic/options",
                "title": "NWProtocolQUIC.Options",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwprotocolquic/definition",
                "title": "static let definition: NWProtocolDefinition",
                "type": "property"
              },
              {
                "title": "Inspecting QUIC State",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Connection State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/negotiatedalpn",
                    "title": "var negotiatedALPN: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/localmaxstreamsbidirectional",
                    "title": "var localMaxStreamsBidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/localmaxstreamsunidirectional",
                    "title": "var localMaxStreamsUnidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/remotemaxstreamsbidirectional",
                    "title": "var remoteMaxStreamsBidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/remotemaxstreamsunidirectional",
                    "title": "var remoteMaxStreamsUnidirectional: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/remoteidletimeout",
                    "title": "var remoteIdleTimeout: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/securityprotocolmetadata",
                    "title": "var securityProtocolMetadata: sec_protocol_metadata_t",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Stream State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/streamidentifier",
                    "title": "var streamIdentifier: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/usabledatagramframesize",
                    "title": "var usableDatagramFrameSize: Int",
                    "type": "property"
                  },
                  {
                    "title": "Handling Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/applicationerror",
                    "title": "var applicationError: NWProtocolQUIC.ApplicationError",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Application Errors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/applicationerror/init(code:reason:)",
                        "title": "init(code: UInt64, reason: String?)",
                        "type": "init"
                      },
                      {
                        "title": "Inspecting Application Errors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/applicationerror/code",
                        "title": "let code: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/applicationerror/reason",
                        "title": "let reason: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolquic/applicationerror",
                    "title": "NWProtocolQUIC.ApplicationError",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/streamapplicationerrorcode",
                    "title": "var streamApplicationErrorCode: UInt64",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Keepalives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/metadata/keepalive",
                    "title": "var keepAlive: NWProtocolQUIC.Metadata.KeepAliveBehavior",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Keepalive Behaviors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/metadata/keepalivebehavior/on",
                        "title": "case on",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/metadata/keepalivebehavior/off",
                        "title": "case off",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolquic/metadata/keepalivebehavior/seconds(_:)",
                        "title": "case seconds(Int)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolquic/metadata/keepalivebehavior",
                    "title": "NWProtocolQUIC.Metadata.KeepAliveBehavior",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/network/nwprotocolquic/metadata",
                "title": "NWProtocolQUIC.Metadata",
                "type": "class"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring Application Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/applicationerror/init(code:reason:)",
                    "title": "init(code: UInt64, reason: String?)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting Application Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/applicationerror/code",
                    "title": "let code: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolquic/applicationerror/reason",
                    "title": "let reason: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocolquic/applicationerror",
                "title": "NWProtocolQUIC.ApplicationError",
                "type": "struct"
              }
            ],
            "path": "/documentation/network/nwprotocolquic",
            "title": "NWProtocolQUIC",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating UDP Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Customizing UDP Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoludp/options/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocoludp/options/prefernochecksum",
                    "title": "var preferNoChecksum: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocoludp/options",
                "title": "NWProtocolUDP.Options",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwprotocoludp/definition",
                "title": "static let definition: NWProtocolDefinition",
                "type": "property"
              },
              {
                "title": "Sending UDP Messages",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating UDP Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocoludp/metadata/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/network/nwprotocoludp/metadata",
                "title": "NWProtocolUDP.Metadata",
                "type": "class"
              }
            ],
            "path": "/documentation/network/nwprotocoludp",
            "title": "NWProtocolUDP",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Handling IP Packets",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Sending IP Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/metadata/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/metadata/ecn",
                    "title": "var ecn: NWProtocolIP.ECN",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "ECN Flags",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/ecn/nonect",
                        "title": "case nonECT",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/ecn/ect0",
                        "title": "case ect0",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/ecn/ect1",
                        "title": "case ect1",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/ecn/ce",
                        "title": "case ce",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolip/ecn",
                    "title": "NWProtocolIP.ECN",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/metadata/serviceclass",
                    "title": "var serviceClass: NWParameters.ServiceClass",
                    "type": "property"
                  },
                  {
                    "title": "Receiving IP Packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/metadata/receivetime",
                    "title": "var receiveTime: UInt64",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocolip/metadata",
                "title": "NWProtocolIP.Metadata",
                "type": "class"
              },
              {
                "title": "Configuring IP Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Selecting an IP Version",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/version-swift.property",
                    "title": "var version: NWProtocolIP.Options.Version",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Versions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/options/version-swift.enum/any",
                        "title": "case any",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/options/version-swift.enum/v4",
                        "title": "case v4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/options/version-swift.enum/v6",
                        "title": "case v6",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolip/options/version-swift.enum",
                    "title": "NWProtocolIP.Options.Version",
                    "type": "enum"
                  },
                  {
                    "title": "Customizing IP Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/shouldcalculatereceivetime",
                    "title": "var shouldCalculateReceiveTime: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/hoplimit",
                    "title": "var hopLimit: UInt8",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/useminimummtu",
                    "title": "var useMinimumMTU: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/disablefragmentation",
                    "title": "var disableFragmentation: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/disablemulticastloopback",
                    "title": "var disableMulticastLoopback: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/options/localaddresspreference",
                    "title": "var localAddressPreference: NWProtocolIP.Options.AddressPreference",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/options/addresspreference/default",
                        "title": "case `default`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/options/addresspreference/stable",
                        "title": "case stable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolip/options/addresspreference/temporary",
                        "title": "case temporary",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolip/options/addresspreference",
                    "title": "NWProtocolIP.Options.AddressPreference",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/network/nwprotocolip/options",
                "title": "NWProtocolIP.Options",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwprotocolip/definition",
                "title": "static let definition: NWProtocolDefinition",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "ECN Flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/ecn/nonect",
                    "title": "case nonECT",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/ecn/ect0",
                    "title": "case ect0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/ecn/ect1",
                    "title": "case ect1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolip/ecn/ce",
                    "title": "case ce",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwprotocolip/ecn",
                "title": "NWProtocolIP.ECN",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/nwprotocolip",
            "title": "NWProtocolIP",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating WebSocket Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring WebSocket Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/init(_:)",
                    "title": "init(NWProtocolWebSocket.Version)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Versions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/version/version13",
                        "title": "case version13",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/version",
                    "title": "NWProtocolWebSocket.Version",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/autoreplyping",
                    "title": "var autoReplyPing: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/maximummessagesize",
                    "title": "var maximumMessageSize: Int",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Client Handshakes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/setadditionalheaders(_:)",
                    "title": "func setAdditionalHeaders([(name: String, value: String)])",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/setsubprotocols(_:)",
                    "title": "func setSubprotocols([String])",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/skiphandshake",
                    "title": "var skipHandshake: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Handling Server Handshakes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/options/setclientrequesthandler(_:handler:)",
                    "title": "func setClientRequestHandler(DispatchQueue, handler: ([String], [(name: String, value: String)]) -> NWProtocolWebSocket.Response)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Sending Handshake Responses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/response/init(status:subprotocol:additionalheaders:)",
                        "title": "init(status: NWProtocolWebSocket.Response.Status, subprotocol: String?, additionalHeaders: [(name: String, value: String)]?)",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Handshake Status Values",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.enum/accept",
                            "title": "case accept",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.enum/reject",
                            "title": "case reject",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.enum",
                        "title": "NWProtocolWebSocket.Response.Status",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.property",
                        "title": "let status: NWProtocolWebSocket.Response.Status",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/response/subprotocol",
                        "title": "let subprotocol: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/response/additionalheaders",
                        "title": "let additionalHeaders: [(name: String, value: String)]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/response",
                    "title": "NWProtocolWebSocket.Response",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/network/nwprotocolwebsocket/options",
                "title": "NWProtocolWebSocket.Options",
                "type": "class"
              },
              {
                "path": "/documentation/network/nwprotocolwebsocket/definition",
                "title": "static let definition: NWProtocolDefinition",
                "type": "property"
              },
              {
                "title": "Handling WebSocket Messages",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Sending Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/init(opcode:)",
                    "title": "init(opcode: NWProtocolWebSocket.Opcode)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Data Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/opcode/binary",
                        "title": "case binary",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/opcode/text",
                        "title": "case text",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/opcode/cont",
                        "title": "case cont",
                        "type": "case"
                      },
                      {
                        "title": "Control Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/opcode/ping",
                        "title": "case ping",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/opcode/pong",
                        "title": "case pong",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/opcode/close",
                        "title": "case close",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/opcode",
                    "title": "NWProtocolWebSocket.Opcode",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/setponghandler(_:handler:)",
                    "title": "func setPongHandler(DispatchQueue, handler: (NWError?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/closecode",
                    "title": "var closeCode: NWProtocolWebSocket.CloseCode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Close Code Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/init(rawvalue:)",
                        "title": "init(rawValue: UInt16) throws",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/protocolcode(_:)",
                        "title": "case protocolCode(NWProtocolWebSocket.CloseCode.Defined)",
                        "type": "case"
                      },
                      {
                        "children": [
                          {
                            "title": "Defined Close Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/normalclosure",
                            "title": "case normalClosure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/goingaway",
                            "title": "case goingAway",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/protocolerror",
                            "title": "case protocolError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/unsupporteddata",
                            "title": "case unsupportedData",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/nostatusreceived",
                            "title": "case noStatusReceived",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/abnormalclosure",
                            "title": "case abnormalClosure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/invalidframepayloaddata",
                            "title": "case invalidFramePayloadData",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/policyviolation",
                            "title": "case policyViolation",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/messagetoobig",
                            "title": "case messageTooBig",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/mandatoryextension",
                            "title": "case mandatoryExtension",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/internalservererror",
                            "title": "case internalServerError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/tlshandshake",
                            "title": "case tlsHandshake",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined",
                        "title": "NWProtocolWebSocket.CloseCode.Defined",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/applicationcode(_:)",
                        "title": "case applicationCode(UInt16)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/privatecode(_:)",
                        "title": "case privateCode(UInt16)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/closecode",
                    "title": "NWProtocolWebSocket.CloseCode",
                    "type": "enum"
                  },
                  {
                    "title": "Receiving Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/opcode",
                    "title": "let opcode: NWProtocolWebSocket.Opcode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/closecode",
                    "title": "var closeCode: NWProtocolWebSocket.CloseCode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Close Code Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/init(rawvalue:)",
                        "title": "init(rawValue: UInt16) throws",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/protocolcode(_:)",
                        "title": "case protocolCode(NWProtocolWebSocket.CloseCode.Defined)",
                        "type": "case"
                      },
                      {
                        "children": [
                          {
                            "title": "Defined Close Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/normalclosure",
                            "title": "case normalClosure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/goingaway",
                            "title": "case goingAway",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/protocolerror",
                            "title": "case protocolError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/unsupporteddata",
                            "title": "case unsupportedData",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/nostatusreceived",
                            "title": "case noStatusReceived",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/abnormalclosure",
                            "title": "case abnormalClosure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/invalidframepayloaddata",
                            "title": "case invalidFramePayloadData",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/policyviolation",
                            "title": "case policyViolation",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/messagetoobig",
                            "title": "case messageTooBig",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/mandatoryextension",
                            "title": "case mandatoryExtension",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/internalservererror",
                            "title": "case internalServerError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/tlshandshake",
                            "title": "case tlsHandshake",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined",
                        "title": "NWProtocolWebSocket.CloseCode.Defined",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/applicationcode(_:)",
                        "title": "case applicationCode(UInt16)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/privatecode(_:)",
                        "title": "case privateCode(UInt16)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/closecode",
                    "title": "NWProtocolWebSocket.CloseCode",
                    "type": "enum"
                  },
                  {
                    "title": "Inspecting Handshake Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/selectedsubprotocol",
                    "title": "var selectedSubprotocol: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/metadata/additionalserverheaders",
                    "title": "var additionalServerHeaders: [(String, String)]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocolwebsocket/metadata",
                "title": "NWProtocolWebSocket.Metadata",
                "type": "class"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Sending Handshake Responses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/response/init(status:subprotocol:additionalheaders:)",
                    "title": "init(status: NWProtocolWebSocket.Response.Status, subprotocol: String?, additionalHeaders: [(name: String, value: String)]?)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Handshake Status Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.enum/accept",
                        "title": "case accept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.enum/reject",
                        "title": "case reject",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.enum",
                    "title": "NWProtocolWebSocket.Response.Status",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/response/status-swift.property",
                    "title": "let status: NWProtocolWebSocket.Response.Status",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/response/subprotocol",
                    "title": "let subprotocol: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/response/additionalheaders",
                    "title": "let additionalHeaders: [(name: String, value: String)]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwprotocolwebsocket/response",
                "title": "NWProtocolWebSocket.Response",
                "type": "struct"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Close Code Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/closecode/init(rawvalue:)",
                    "title": "init(rawValue: UInt16) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/closecode/protocolcode(_:)",
                    "title": "case protocolCode(NWProtocolWebSocket.CloseCode.Defined)",
                    "type": "case"
                  },
                  {
                    "children": [
                      {
                        "title": "Defined Close Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/normalclosure",
                        "title": "case normalClosure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/goingaway",
                        "title": "case goingAway",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/protocolerror",
                        "title": "case protocolError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/unsupporteddata",
                        "title": "case unsupportedData",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/nostatusreceived",
                        "title": "case noStatusReceived",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/abnormalclosure",
                        "title": "case abnormalClosure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/invalidframepayloaddata",
                        "title": "case invalidFramePayloadData",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/policyviolation",
                        "title": "case policyViolation",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/messagetoobig",
                        "title": "case messageTooBig",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/mandatoryextension",
                        "title": "case mandatoryExtension",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/internalservererror",
                        "title": "case internalServerError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolwebsocket/closecode/defined/tlshandshake",
                        "title": "case tlsHandshake",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolwebsocket/closecode/defined",
                    "title": "NWProtocolWebSocket.CloseCode.Defined",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/closecode/applicationcode(_:)",
                    "title": "case applicationCode(UInt16)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/closecode/privatecode(_:)",
                    "title": "case privateCode(UInt16)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwprotocolwebsocket/closecode",
                "title": "NWProtocolWebSocket.CloseCode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Data Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/opcode/binary",
                    "title": "case binary",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/opcode/text",
                    "title": "case text",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/opcode/cont",
                    "title": "case cont",
                    "type": "case"
                  },
                  {
                    "title": "Control Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/opcode/ping",
                    "title": "case ping",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/opcode/pong",
                    "title": "case pong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/opcode/close",
                    "title": "case close",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwprotocolwebsocket/opcode",
                "title": "NWProtocolWebSocket.Opcode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Versions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolwebsocket/version/version13",
                    "title": "case version13",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwprotocolwebsocket/version",
                "title": "NWProtocolWebSocket.Version",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/nwprotocolwebsocket",
            "title": "NWProtocolWebSocket",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Implementing Framer Protocols",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling Instance Lifetime",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/init(framer:)",
                    "title": "init(framer: NWProtocolFramer.Instance)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/start(framer:)",
                    "title": "func start(framer: NWProtocolFramer.Instance) -> NWProtocolFramer.StartResult",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Start Results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolframer/startresult/ready",
                        "title": "case ready",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolframer/startresult/willmarkready",
                        "title": "case willMarkReady",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolframer/startresult",
                    "title": "NWProtocolFramer.StartResult",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/wakeup(framer:)",
                    "title": "func wakeup(framer: NWProtocolFramer.Instance)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/stop(framer:)",
                    "title": "func stop(framer: NWProtocolFramer.Instance) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/cleanup(framer:)",
                    "title": "func cleanup(framer: NWProtocolFramer.Instance)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/label",
                    "title": "static var label: String",
                    "type": "property"
                  },
                  {
                    "title": "Handling Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/handleoutput(framer:message:messagelength:iscomplete:)",
                    "title": "func handleOutput(framer: NWProtocolFramer.Instance, message: NWProtocolFramer.Message, messageLength: Int, isComplete: Bool)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframerimplementation/handleinput(framer:)",
                    "title": "func handleInput(framer: NWProtocolFramer.Instance) -> Int",
                    "type": "method"
                  }
                ],
                "path": "/documentation/network/nwprotocolframerimplementation",
                "title": "NWProtocolFramerImplementation",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Writing Output",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/parseoutput(minimumincompletelength:maximumlength:parse:)",
                    "title": "func parseOutput(minimumIncompleteLength: Int, maximumLength: Int, parse: (UnsafeMutableRawBufferPointer?, Bool) -> Int) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/writeoutput(data:)-ydvk",
                    "title": "func writeOutput(data: Data)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/writeoutputnocopy(length:)",
                    "title": "func writeOutputNoCopy(length: Int) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/passthroughoutput()",
                    "title": "func passThroughOutput()",
                    "type": "method"
                  },
                  {
                    "title": "Delivering Input",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/parseinput(minimumincompletelength:maximumlength:parse:)",
                    "title": "func parseInput(minimumIncompleteLength: Int, maximumLength: Int, parse: (UnsafeMutableRawBufferPointer?, Bool) -> Int) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/deliverinput(data:message:iscomplete:)",
                    "title": "func deliverInput(data: Data, message: NWProtocolFramer.Message, isComplete: Bool)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/deliverinputnocopy(length:message:iscomplete:)",
                    "title": "func deliverInputNoCopy(length: Int, message: NWProtocolFramer.Message, isComplete: Bool) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/passthroughinput()",
                    "title": "func passThroughInput()",
                    "type": "method"
                  },
                  {
                    "title": "Managing Instance Lifetime",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/markready()",
                    "title": "func markReady()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/markfailed(error:)",
                    "title": "func markFailed(error: NWError?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/prependapplicationprotocol(options:)",
                    "title": "func prependApplicationProtocol(options: NWProtocolOptions) throws",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/remote",
                    "title": "var remote: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/local",
                    "title": "var local: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/parameters",
                    "title": "var parameters: NWParameters?",
                    "type": "property"
                  },
                  {
                    "title": "Handling Asynchronous Events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/async(execute:)",
                    "title": "func async(execute: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/schedulewakeup(wakeuptime:)",
                    "title": "func scheduleWakeup(wakeupTime: NWProtocolFramer.Instance.WakeupTime)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Time Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwprotocolframer/instance/wakeuptime/milliseconds(_:)",
                        "title": "case milliseconds(UInt64)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwprotocolframer/instance/wakeuptime/forever",
                        "title": "case forever",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwprotocolframer/instance/wakeuptime",
                    "title": "NWProtocolFramer.Instance.WakeupTime",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/options",
                    "title": "var options: NWProtocolFramer.Options",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/instance/writeoutput(data:)-9axn3",
                    "title": "func writeOutput<Output>(data: Output)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/network/nwprotocolframer/instance",
                "title": "NWProtocolFramer.Instance",
                "type": "class"
              },
              {
                "title": "Using Framers with Connections",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Defining Framer Protocols",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/definition/init(implementation:)",
                    "title": "init(implementation: any NWProtocolFramerImplementation.Type)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/network/nwprotocolframer/definition",
                "title": "NWProtocolFramer.Definition",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating Framer Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/options/init(definition:)",
                    "title": "init(definition: NWProtocolFramer.Definition)",
                    "type": "init"
                  },
                  {
                    "title": "Subscripts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/options/subscript(_:)",
                    "title": "subscript(String) -> Any?",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/network/nwprotocolframer/options",
                "title": "NWProtocolFramer.Options",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating Framer Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/message/init(definition:)",
                    "title": "init(definition: NWProtocolFramer.Definition)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/message/init(instance:)",
                    "title": "init(instance: NWProtocolFramer.Instance)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing Message Metadata",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/message/subscript(_:)",
                    "title": "subscript(String) -> Any?",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/network/nwprotocolframer/message",
                "title": "NWProtocolFramer.Message",
                "type": "class"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Start Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/startresult/ready",
                    "title": "case ready",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwprotocolframer/startresult/willmarkready",
                    "title": "case willMarkReady",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwprotocolframer/startresult",
                "title": "NWProtocolFramer.StartResult",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/nwprotocolframer",
            "title": "NWProtocolFramer",
            "type": "class"
          },
          {
            "title": "Network Security and Privacy",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Configuring TLS Handshake Options",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_t",
                "title": "sec_protocol_options_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_protocol_options",
                "title": "OS_sec_protocol_options",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_server_name(_:_:)",
                "title": "func sec_protocol_options_set_tls_server_name(sec_protocol_options_t, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_pre_shared_key(_:_:_:)",
                "title": "func sec_protocol_options_add_pre_shared_key(sec_protocol_options_t, dispatch_data_t, dispatch_data_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_tls_application_protocol(_:_:)",
                "title": "func sec_protocol_options_add_tls_application_protocol(sec_protocol_options_t, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_append_tls_ciphersuite(_:_:)",
                "title": "func sec_protocol_options_append_tls_ciphersuite(sec_protocol_options_t, tls_ciphersuite_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_append_tls_ciphersuite_group(_:_:)",
                "title": "func sec_protocol_options_append_tls_ciphersuite_group(sec_protocol_options_t, tls_ciphersuite_group_t)",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_tls_ciphersuite(_:_:)",
                "title": "func sec_protocol_options_add_tls_ciphersuite(sec_protocol_options_t, SSLCipherSuite)",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_add_tls_ciphersuite_group(_:_:)",
                "title": "func sec_protocol_options_add_tls_ciphersuite_group(sec_protocol_options_t, SSLCiphersuiteGroup)",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_diffie_hellman_parameters(_:_:)",
                "title": "func sec_protocol_options_set_tls_diffie_hellman_parameters(sec_protocol_options_t, dispatch_data_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_are_equal(_:_:)",
                "title": "func sec_protocol_options_are_equal(sec_protocol_options_t, sec_protocol_options_t) -> Bool",
                "type": "func"
              },
              {
                "title": "Configuring TLS Versions",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_min_tls_protocol_version(_:_:)",
                "title": "func sec_protocol_options_set_min_tls_protocol_version(sec_protocol_options_t, tls_protocol_version_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_max_tls_protocol_version(_:_:)",
                "title": "func sec_protocol_options_set_max_tls_protocol_version(sec_protocol_options_t, tls_protocol_version_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_min_tls_protocol_version()",
                "title": "func sec_protocol_options_get_default_min_tls_protocol_version() -> tls_protocol_version_t",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_max_tls_protocol_version()",
                "title": "func sec_protocol_options_get_default_max_tls_protocol_version() -> tls_protocol_version_t",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_min_dtls_protocol_version()",
                "title": "func sec_protocol_options_get_default_min_dtls_protocol_version() -> tls_protocol_version_t",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_get_default_max_dtls_protocol_version()",
                "title": "func sec_protocol_options_get_default_max_dtls_protocol_version() -> tls_protocol_version_t",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_min_version(_:_:)",
                "title": "func sec_protocol_options_set_tls_min_version(sec_protocol_options_t, SSLProtocol)",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_max_version(_:_:)",
                "title": "func sec_protocol_options_set_tls_max_version(sec_protocol_options_t, SSLProtocol)",
                "type": "func"
              },
              {
                "title": "Configuring TLS Behavior",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_resumption_enabled(_:_:)",
                "title": "func sec_protocol_options_set_tls_resumption_enabled(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_tickets_enabled(_:_:)",
                "title": "func sec_protocol_options_set_tls_tickets_enabled(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_false_start_enabled(_:_:)",
                "title": "func sec_protocol_options_set_tls_false_start_enabled(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_sct_enabled(_:_:)",
                "title": "func sec_protocol_options_set_tls_sct_enabled(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_ocsp_enabled(_:_:)",
                "title": "func sec_protocol_options_set_tls_ocsp_enabled(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_renegotiation_enabled(_:_:)",
                "title": "func sec_protocol_options_set_tls_renegotiation_enabled(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_peer_authentication_required(_:_:)",
                "title": "func sec_protocol_options_set_peer_authentication_required(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_is_fallback_attempt(_:_:)",
                "title": "func sec_protocol_options_set_tls_is_fallback_attempt(sec_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_tls_pre_shared_key_identity_hint(_:_:)",
                "title": "func sec_protocol_options_set_tls_pre_shared_key_identity_hint(sec_protocol_options_t, dispatch_data_t)",
                "type": "func"
              },
              {
                "title": "Handling TLS Events",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_verify_block(_:_:_:)",
                "title": "func sec_protocol_options_set_verify_block(sec_protocol_options_t, sec_protocol_verify_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_verify_t",
                "title": "sec_protocol_verify_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_verify_complete_t",
                "title": "sec_protocol_verify_complete_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_challenge_block(_:_:_:)",
                "title": "func sec_protocol_options_set_challenge_block(sec_protocol_options_t, sec_protocol_challenge_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_challenge_t",
                "title": "sec_protocol_challenge_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_challenge_complete_t",
                "title": "sec_protocol_challenge_complete_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_key_update_block(_:_:_:)",
                "title": "func sec_protocol_options_set_key_update_block(sec_protocol_options_t, sec_protocol_key_update_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_key_update_t",
                "title": "sec_protocol_key_update_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_key_update_complete_t",
                "title": "sec_protocol_key_update_complete_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_pre_shared_key_selection_block(_:_:_:)",
                "title": "func sec_protocol_options_set_pre_shared_key_selection_block(sec_protocol_options_t, sec_protocol_pre_shared_key_selection_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_pre_shared_key_selection_t",
                "title": "sec_protocol_pre_shared_key_selection_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_pre_shared_key_selection_complete_t",
                "title": "sec_protocol_pre_shared_key_selection_complete_t",
                "type": "typealias"
              },
              {
                "title": "Inspecting TLS State",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_t",
                "title": "sec_protocol_metadata_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_protocol_metadata",
                "title": "OS_sec_protocol_metadata",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_protocol(_:)",
                "title": "func sec_protocol_metadata_get_negotiated_protocol(sec_protocol_metadata_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_server_name(_:)",
                "title": "func sec_protocol_metadata_get_server_name(sec_protocol_metadata_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_tls_protocol_version(_:)",
                "title": "func sec_protocol_metadata_get_negotiated_tls_protocol_version(sec_protocol_metadata_t) -> tls_protocol_version_t",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_tls_ciphersuite(_:)",
                "title": "func sec_protocol_metadata_get_negotiated_tls_ciphersuite(sec_protocol_metadata_t) -> tls_ciphersuite_t",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_protocol_version(_:)",
                "title": "func sec_protocol_metadata_get_negotiated_protocol_version(sec_protocol_metadata_t) -> SSLProtocol",
                "type": "func"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_negotiated_ciphersuite(_:)",
                "title": "func sec_protocol_metadata_get_negotiated_ciphersuite(sec_protocol_metadata_t) -> SSLCipherSuite",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_get_early_data_accepted(_:)",
                "title": "func sec_protocol_metadata_get_early_data_accepted(sec_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_copy_peer_public_key(_:)",
                "title": "func sec_protocol_metadata_copy_peer_public_key(sec_protocol_metadata_t) -> dispatch_data_t?",
                "type": "func"
              },
              {
                "title": "Handling TLS Challenges",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_distinguished_names(_:_:)",
                "title": "func sec_protocol_metadata_access_distinguished_names(sec_protocol_metadata_t, (dispatch_data_t) -> Void) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_ocsp_response(_:_:)",
                "title": "func sec_protocol_metadata_access_ocsp_response(sec_protocol_metadata_t, (dispatch_data_t) -> Void) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_peer_certificate_chain(_:_:)",
                "title": "func sec_protocol_metadata_access_peer_certificate_chain(sec_protocol_metadata_t, (sec_certificate_t) -> Void) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_supported_signature_algorithms(_:_:)",
                "title": "func sec_protocol_metadata_access_supported_signature_algorithms(sec_protocol_metadata_t, (UInt16) -> Void) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_access_pre_shared_keys(_:_:)",
                "title": "func sec_protocol_metadata_access_pre_shared_keys(sec_protocol_metadata_t, (dispatch_data_t, dispatch_data_t) -> Void) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_create_secret(_:_:_:_:)",
                "title": "func sec_protocol_metadata_create_secret(sec_protocol_metadata_t, Int, UnsafePointer<CChar>, Int) -> dispatch_data_t?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_create_secret_with_context(_:_:_:_:_:_:)",
                "title": "func sec_protocol_metadata_create_secret_with_context(sec_protocol_metadata_t, Int, UnsafePointer<CChar>, Int, UnsafePointer<UInt8>, Int) -> dispatch_data_t?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_peers_are_equal(_:_:)",
                "title": "func sec_protocol_metadata_peers_are_equal(sec_protocol_metadata_t, sec_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_metadata_challenge_parameters_are_equal(_:_:)",
                "title": "func sec_protocol_metadata_challenge_parameters_are_equal(sec_protocol_metadata_t, sec_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "title": "Handling Certificates",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_certificate_t",
                "title": "sec_certificate_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_certificate",
                "title": "OS_sec_certificate",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_certificate_create(_:)",
                "title": "func sec_certificate_create(SecCertificate) -> sec_certificate_t?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_certificate_copy_ref(_:)",
                "title": "func sec_certificate_copy_ref(sec_certificate_t) -> Unmanaged<SecCertificate>",
                "type": "func"
              },
              {
                "title": "Handling Identities",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_protocol_options_set_local_identity(_:_:)",
                "title": "func sec_protocol_options_set_local_identity(sec_protocol_options_t, sec_identity_t)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_t",
                "title": "sec_identity_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_identity",
                "title": "OS_sec_identity",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_create(_:)",
                "title": "func sec_identity_create(SecIdentity) -> sec_identity_t?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_create_with_certificates(_:_:)",
                "title": "func sec_identity_create_with_certificates(SecIdentity, CFArray) -> sec_identity_t?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_copy_ref(_:)",
                "title": "func sec_identity_copy_ref(sec_identity_t) -> Unmanaged<SecIdentity>?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_access_certificates(_:_:)",
                "title": "func sec_identity_access_certificates(sec_identity_t, (sec_certificate_t) -> Void) -> Bool",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_identity_copy_certificates_ref(_:)",
                "title": "func sec_identity_copy_certificates_ref(sec_identity_t) -> Unmanaged<CFArray>?",
                "type": "func"
              },
              {
                "title": "Handling Trust",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_trust_t",
                "title": "sec_trust_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_trust",
                "title": "OS_sec_trust",
                "type": "protocol"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_trust_create(_:)",
                "title": "func sec_trust_create(SecTrust) -> sec_trust_t?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_trust_copy_ref(_:)",
                "title": "func sec_trust_copy_ref(sec_trust_t) -> Unmanaged<SecTrust>",
                "type": "func"
              },
              {
                "title": "Managing Security Objects",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_release(_:)",
                "title": "func sec_release(UnsafeMutableRawPointer!)",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_retain(_:)",
                "title": "func sec_retain(UnsafeMutableRawPointer!) -> UnsafeMutableRawPointer!",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/security/sec_object_t",
                "title": "sec_object_t",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/security/os_sec_object",
                "title": "OS_sec_object",
                "type": "protocol"
              }
            ],
            "path": "/documentation/network/security-options",
            "title": "Security Options",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Traffic Attribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/inspecting-app-activity-data",
                "title": "Inspecting app activity data",
                "type": "article"
              },
              {
                "path": "/documentation/network/indicating-the-source-of-network-activity",
                "title": "Indicating the source of network activity",
                "type": "article"
              },
              {
                "path": "/documentation/network/nw_parameters_set_attribution(_:_:)",
                "title": "func nw_parameters_set_attribution(nw_parameters_t, nw_parameters_attribution_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_get_attribution(_:)",
                "title": "func nw_parameters_get_attribution(nw_parameters_t) -> nw_parameters_attribution_t",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Request Sources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_attribution_t/developer",
                    "title": "case developer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_attribution_t/user",
                    "title": "case user",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_attribution_t/init(rawvalue:)",
                    "title": "init?(rawValue: UInt8)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/network/nw_parameters_attribution_t",
                "title": "nw_parameters_attribution_t",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/privacy-management",
            "title": "Privacy Management",
            "type": "collection"
          },
          {
            "path": "/documentation/network/creating-an-identity-for-local-network-tls",
            "title": "Creating an Identity for Local Network TLS",
            "type": "article"
          },
          {
            "title": "Paths and Interfaces",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Checking Path Availability",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpath/status-swift.property",
                "title": "let status: NWPath.Status",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Status Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwpath/status-swift.enum/unsatisfied",
                    "title": "case unsatisfied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwpath/status-swift.enum/satisfied",
                    "title": "case satisfied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwpath/status-swift.enum/requiresconnection",
                    "title": "case requiresConnection",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwpath/status-swift.enum",
                "title": "NWPath.Status",
                "type": "enum"
              },
              {
                "title": "Inspecting Interfaces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpath/usesinterfacetype(_:)",
                "title": "func usesInterfaceType(NWInterface.InterfaceType) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwpath/availableinterfaces",
                "title": "let availableInterfaces: [NWInterface]",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpath/gateways",
                "title": "var gateways: [NWEndpoint]",
                "type": "property"
              },
              {
                "title": "Checking Path Capabilities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpath/supportsipv4",
                "title": "let supportsIPv4: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpath/supportsipv6",
                "title": "let supportsIPv6: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpath/supportsdns",
                "title": "let supportsDNS: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpath/isconstrained",
                "title": "var isConstrained: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpath/isexpensive",
                "title": "let isExpensive: Bool",
                "type": "property"
              },
              {
                "title": "Inspecting Connected Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpath/localendpoint",
                "title": "let localEndpoint: NWEndpoint?",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpath/remoteendpoint",
                "title": "let remoteEndpoint: NWEndpoint?",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpath/unsatisfiedreason-swift.property",
                "title": "var unsatisfiedReason: NWPath.UnsatisfiedReason",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwpath/unsatisfiedreason-swift.enum/cellulardenied",
                    "title": "case cellularDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwpath/unsatisfiedreason-swift.enum/localnetworkdenied",
                    "title": "case localNetworkDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwpath/unsatisfiedreason-swift.enum/notavailable",
                    "title": "case notAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwpath/unsatisfiedreason-swift.enum/vpninactive",
                    "title": "case vpnInactive",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwpath/unsatisfiedreason-swift.enum/wifidenied",
                    "title": "case wifiDenied",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwpath/unsatisfiedreason-swift.enum",
                "title": "NWPath.UnsatisfiedReason",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/nwpath",
            "title": "NWPath",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating Path Monitors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpathmonitor/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwpathmonitor/init(requiredinterfacetype:)",
                "title": "init(requiredInterfaceType: NWInterface.InterfaceType)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwpathmonitor/init(prohibitedinterfacetypes:)",
                "title": "init(prohibitedInterfaceTypes: [NWInterface.InterfaceType])",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwpathmonitor/start(queue:)",
                "title": "func start(queue: DispatchQueue)",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwpathmonitor/queue",
                "title": "var queue: DispatchQueue?",
                "type": "property"
              },
              {
                "title": "Handling Path Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpathmonitor/currentpath",
                "title": "var currentPath: NWPath",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwpathmonitor/pathupdatehandler",
                "title": "var pathUpdateHandler: ((NWPath) -> Void)?",
                "type": "property"
              },
              {
                "title": "Canceling Path Monitors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpathmonitor/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpathmonitor/iterator",
                "title": "NWPathMonitor.Iterator",
                "type": "struct"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwpathmonitor/ethernetchannel",
                "title": "static var ethernetChannel: NWPathMonitor",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwpathmonitor",
            "title": "NWPathMonitor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Inspecting Interfaces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwinterface/type",
                "title": "var type: NWInterface.InterfaceType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Interface Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwinterface/interfacetype/wifi",
                    "title": "case wifi",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwinterface/interfacetype/cellular",
                    "title": "case cellular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwinterface/interfacetype/wiredethernet",
                    "title": "case wiredEthernet",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwinterface/interfacetype/loopback",
                    "title": "case loopback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwinterface/interfacetype/other",
                    "title": "case other",
                    "type": "case"
                  }
                ],
                "path": "/documentation/network/nwinterface/interfacetype",
                "title": "NWInterface.InterfaceType",
                "type": "enum"
              },
              {
                "path": "/documentation/network/nwinterface/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "path": "/documentation/network/nwinterface/index",
                "title": "var index: Int",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwinterface/radiotype/cell(_:)",
                    "title": "case cell(NWInterface.RadioType.Cellular)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwinterface/radiotype/wifi(_:)",
                    "title": "case wifi(NWInterface.RadioType.WiFi)",
                    "type": "case"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/cdma",
                        "title": "case cdma",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/dualconnectivity5g(_:)",
                        "title": "case dualConnectivity5G(NWInterface.RadioType.Cellular.NewRadio5GVariant)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/evdo",
                        "title": "case evdo",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/gsm",
                        "title": "case gsm",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/lte",
                        "title": "case lte",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/standalone5g(_:)",
                        "title": "case standalone5G(NWInterface.RadioType.Cellular.NewRadio5GVariant)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/cellular/wcdma",
                        "title": "case wcdma",
                        "type": "case"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nwinterface/radiotype/cellular/newradio5gvariant/mmwave",
                            "title": "case mmWave",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/network/nwinterface/radiotype/cellular/newradio5gvariant/sub6ghz",
                            "title": "case sub6GHz",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/network/nwinterface/radiotype/cellular/newradio5gvariant",
                        "title": "NWInterface.RadioType.Cellular.NewRadio5GVariant",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/network/nwinterface/radiotype/cellular",
                    "title": "NWInterface.RadioType.Cellular",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/wifi/a",
                        "title": "case a",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/wifi/ac",
                        "title": "case ac",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/wifi/ax",
                        "title": "case ax",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/wifi/b",
                        "title": "case b",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/wifi/g",
                        "title": "case g",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/network/nwinterface/radiotype/wifi/n",
                        "title": "case n",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/network/nwinterface/radiotype/wifi",
                    "title": "NWInterface.RadioType.WiFi",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/network/nwinterface/radiotype",
                "title": "NWInterface.RadioType",
                "type": "enum"
              }
            ],
            "path": "/documentation/network/nwinterface",
            "title": "NWInterface",
            "type": "struct"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Checking Error Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwerror/posix(_:)",
                "title": "case posix(POSIXErrorCode)",
                "type": "case"
              },
              {
                "path": "/documentation/network/nwerror/dns(_:)",
                "title": "case dns(DNSServiceErrorType)",
                "type": "case"
              },
              {
                "path": "/documentation/network/nwerror/tls(_:)",
                "title": "case tls(OSStatus)",
                "type": "case"
              }
            ],
            "path": "/documentation/network/nwerror",
            "title": "NWError",
            "type": "enum"
          },
          {
            "title": "Network Debugging",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/network/choosing-a-network-debugging-tool",
            "title": "Choosing a Network Debugging Tool",
            "type": "article"
          },
          {
            "path": "/documentation/network/debugging-http-server-side-errors",
            "title": "Debugging HTTP Server-Side Errors",
            "type": "article"
          },
          {
            "path": "/documentation/network/debugging-https-problems-with-cfnetwork-diagnostic-logging",
            "title": "Debugging HTTPS Problems with CFNetwork Diagnostic Logging",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Working with Packet Traces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/troubleshooting-packet-traces",
                "title": "Troubleshooting Packet Traces",
                "type": "article"
              },
              {
                "path": "/documentation/network/recording-a-wi-fi-packet-trace",
                "title": "Recording a Wi-Fi Packet Trace",
                "type": "article"
              },
              {
                "path": "/documentation/network/submitting-a-packet-trace-to-apple",
                "title": "Submitting a Packet Trace to Apple",
                "type": "article"
              }
            ],
            "path": "/documentation/network/recording-a-packet-trace",
            "title": "Recording a Packet Trace",
            "type": "collection"
          },
          {
            "path": "/documentation/network/taking-advantage-of-third-party-network-debugging-tools",
            "title": "Taking Advantage of Third-Party Network Debugging Tools",
            "type": "article"
          },
          {
            "path": "/documentation/network/testing-and-debugging-l4s-in-your-app",
            "title": "Testing and Debugging L4S in Your App",
            "type": "article"
          },
          {
            "title": "C-Language Symbols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "C Network Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_invalid",
                    "title": "var nw_connection_group_state_invalid: nw_connection_group_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_waiting",
                    "title": "var nw_connection_group_state_waiting: nw_connection_group_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_ready",
                    "title": "var nw_connection_group_state_ready: nw_connection_group_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_failed",
                    "title": "var nw_connection_group_state_failed: nw_connection_group_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_cancelled",
                    "title": "var nw_connection_group_state_cancelled: nw_connection_group_state_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_connection_group_state_t",
                "title": "nw_connection_group_state_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_invalid",
                    "title": "var nw_browser_state_invalid: nw_browser_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_ready",
                    "title": "var nw_browser_state_ready: nw_browser_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_failed",
                    "title": "var nw_browser_state_failed: nw_browser_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_cancelled",
                    "title": "var nw_browser_state_cancelled: nw_browser_state_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_browser_state_t",
                "title": "nw_browser_state_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Connection States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_invalid",
                    "title": "var nw_connection_state_invalid: nw_connection_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_waiting",
                    "title": "var nw_connection_state_waiting: nw_connection_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_preparing",
                    "title": "var nw_connection_state_preparing: nw_connection_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_ready",
                    "title": "var nw_connection_state_ready: nw_connection_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_failed",
                    "title": "var nw_connection_state_failed: nw_connection_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_cancelled",
                    "title": "var nw_connection_state_cancelled: nw_connection_state_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_connection_state_t",
                "title": "nw_connection_state_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Report States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_collecting",
                    "title": "var nw_data_transfer_report_state_collecting: nw_data_transfer_report_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_collected",
                    "title": "var nw_data_transfer_report_state_collected: nw_data_transfer_report_state_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_state_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_data_transfer_report_state_t",
                "title": "nw_data_transfer_report_state_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Endpoint Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_invalid",
                    "title": "var nw_endpoint_type_invalid: nw_endpoint_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_address",
                    "title": "var nw_endpoint_type_address: nw_endpoint_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_host",
                    "title": "var nw_endpoint_type_host: nw_endpoint_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_bonjour_service",
                    "title": "var nw_endpoint_type_bonjour_service: nw_endpoint_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_url",
                    "title": "var nw_endpoint_type_url: nw_endpoint_type_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_type_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_endpoint_type_t",
                "title": "nw_endpoint_type_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Error Domain Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_invalid",
                    "title": "var nw_error_domain_invalid: nw_error_domain_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_posix",
                    "title": "var nw_error_domain_posix: nw_error_domain_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_dns",
                    "title": "var nw_error_domain_dns: nw_error_domain_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_tls",
                    "title": "var nw_error_domain_tls: nw_error_domain_t",
                    "type": "var"
                  },
                  {
                    "title": "CFError Domain Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/knwerrordomainposix",
                    "title": "let kNWErrorDomainPOSIX: CFString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/knwerrordomaindns",
                    "title": "let kNWErrorDomainDNS: CFString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/knwerrordomaintls",
                    "title": "let kNWErrorDomainTLS: CFString",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_error_domain_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_error_domain_t",
                "title": "nw_error_domain_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_invalid",
                    "title": "var nw_ethernet_channel_state_invalid: nw_ethernet_channel_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_waiting",
                    "title": "var nw_ethernet_channel_state_waiting: nw_ethernet_channel_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_preparing",
                    "title": "var nw_ethernet_channel_state_preparing: nw_ethernet_channel_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_ready",
                    "title": "var nw_ethernet_channel_state_ready: nw_ethernet_channel_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_failed",
                    "title": "var nw_ethernet_channel_state_failed: nw_ethernet_channel_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_cancelled",
                    "title": "var nw_ethernet_channel_state_cancelled: nw_ethernet_channel_state_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ethernet_channel_state_t",
                "title": "nw_ethernet_channel_state_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Start Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_ready",
                    "title": "var nw_framer_start_result_ready: nw_framer_start_result_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_will_mark_ready",
                    "title": "var nw_framer_start_result_will_mark_ready: nw_framer_start_result_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_framer_start_result_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_framer_start_result_t",
                "title": "nw_framer_start_result_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating an interface type instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Interface types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_wifi",
                    "title": "var nw_interface_type_wifi: nw_interface_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_cellular",
                    "title": "var nw_interface_type_cellular: nw_interface_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_wired",
                    "title": "var nw_interface_type_wired: nw_interface_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_loopback",
                    "title": "var nw_interface_type_loopback: nw_interface_type_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_other",
                    "title": "var nw_interface_type_other: nw_interface_type_t",
                    "type": "var"
                  },
                  {
                    "title": "Accessing the raw value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_interface_type_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_interface_type_t",
                "title": "nw_interface_type_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "ECN Flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_non_ect",
                    "title": "var nw_ip_ecn_flag_non_ect: nw_ip_ecn_flag_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_ect_0",
                    "title": "var nw_ip_ecn_flag_ect_0: nw_ip_ecn_flag_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_ect_1",
                    "title": "var nw_ip_ecn_flag_ect_1: nw_ip_ecn_flag_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_ce",
                    "title": "var nw_ip_ecn_flag_ce: nw_ip_ecn_flag_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_ecn_flag_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ip_ecn_flag_t",
                "title": "nw_ip_ecn_flag_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Address Preferences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_default",
                    "title": "var nw_ip_local_address_preference_default: nw_ip_local_address_preference_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_temporary",
                    "title": "var nw_ip_local_address_preference_temporary: nw_ip_local_address_preference_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_stable",
                    "title": "var nw_ip_local_address_preference_stable: nw_ip_local_address_preference_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_local_address_preference_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ip_local_address_preference_t",
                "title": "nw_ip_local_address_preference_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Versions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_any",
                    "title": "var nw_ip_version_any: nw_ip_version_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_4",
                    "title": "var nw_ip_version_4: nw_ip_version_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_6",
                    "title": "var nw_ip_version_6: nw_ip_version_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ip_version_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ip_version_t",
                "title": "nw_ip_version_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Listener States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_invalid",
                    "title": "var nw_listener_state_invalid: nw_listener_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_waiting",
                    "title": "var nw_listener_state_waiting: nw_listener_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_ready",
                    "title": "var nw_listener_state_ready: nw_listener_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_failed",
                    "title": "var nw_listener_state_failed: nw_listener_state_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_cancelled",
                    "title": "var nw_listener_state_cancelled: nw_listener_state_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_listener_state_t",
                "title": "nw_listener_state_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a multipath service type instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Multipath service types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_disabled",
                    "title": "var nw_multipath_service_disabled: nw_multipath_service_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_handover",
                    "title": "var nw_multipath_service_handover: nw_multipath_service_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_interactive",
                    "title": "var nw_multipath_service_interactive: nw_multipath_service_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_aggregate",
                    "title": "var nw_multipath_service_aggregate: nw_multipath_service_t",
                    "type": "var"
                  },
                  {
                    "title": "Accessing the raw value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_multipath_service_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_multipath_service_t",
                "title": "nw_multipath_service_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating an expired DNS behavior instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Expired DNS behaviors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_default",
                    "title": "var nw_parameters_expired_dns_behavior_default: nw_parameters_expired_dns_behavior_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_allow",
                    "title": "var nw_parameters_expired_dns_behavior_allow: nw_parameters_expired_dns_behavior_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_prohibit",
                    "title": "var nw_parameters_expired_dns_behavior_prohibit: nw_parameters_expired_dns_behavior_t",
                    "type": "var"
                  },
                  {
                    "title": "Accessing the raw value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_parameters_expired_dns_behavior_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_parameters_expired_dns_behavior_t",
                "title": "nw_parameters_expired_dns_behavior_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Status Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_invalid",
                    "title": "var nw_path_status_invalid: nw_path_status_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_unsatisfied",
                    "title": "var nw_path_status_unsatisfied: nw_path_status_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_satisfied",
                    "title": "var nw_path_status_satisfied: nw_path_status_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_satisfiable",
                    "title": "var nw_path_status_satisfiable: nw_path_status_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_status_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_path_status_t",
                "title": "nw_path_status_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolution Transports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_unknown",
                    "title": "var nw_report_resolution_protocol_unknown: nw_report_resolution_protocol_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_udp",
                    "title": "var nw_report_resolution_protocol_udp: nw_report_resolution_protocol_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_tcp",
                    "title": "var nw_report_resolution_protocol_tcp: nw_report_resolution_protocol_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_tls",
                    "title": "var nw_report_resolution_protocol_tls: nw_report_resolution_protocol_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_https",
                    "title": "var nw_report_resolution_protocol_https: nw_report_resolution_protocol_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_protocol_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_report_resolution_protocol_t",
                "title": "nw_report_resolution_protocol_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Resolution Sources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_query",
                    "title": "var nw_report_resolution_source_query: nw_report_resolution_source_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_cache",
                    "title": "var nw_report_resolution_source_cache: nw_report_resolution_source_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_expired_cache",
                    "title": "var nw_report_resolution_source_expired_cache: nw_report_resolution_source_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_source_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_report_resolution_source_t",
                "title": "nw_report_resolution_source_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a service class instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Service classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_best_effort",
                    "title": "var nw_service_class_best_effort: nw_service_class_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_background",
                    "title": "var nw_service_class_background: nw_service_class_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_interactive_video",
                    "title": "var nw_service_class_interactive_video: nw_service_class_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_interactive_voice",
                    "title": "var nw_service_class_interactive_voice: nw_service_class_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_responsive_data",
                    "title": "var nw_service_class_responsive_data: nw_service_class_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_signaling",
                    "title": "var nw_service_class_signaling: nw_service_class_t",
                    "type": "var"
                  },
                  {
                    "title": "Accessing the raw value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_service_class_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_service_class_t",
                "title": "nw_service_class_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Key Value Status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_invalid",
                    "title": "var nw_txt_record_find_key_invalid: nw_txt_record_find_key_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_not_present",
                    "title": "var nw_txt_record_find_key_not_present: nw_txt_record_find_key_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_no_value",
                    "title": "var nw_txt_record_find_key_no_value: nw_txt_record_find_key_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                    "title": "var nw_txt_record_find_key_empty_value: nw_txt_record_find_key_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                    "title": "var nw_txt_record_find_key_non_empty_value: nw_txt_record_find_key_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_txt_record_find_key_t",
                "title": "nw_txt_record_find_key_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Defined Close Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_normal_closure",
                    "title": "var nw_ws_close_code_normal_closure: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_going_away",
                    "title": "var nw_ws_close_code_going_away: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_protocol_error",
                    "title": "var nw_ws_close_code_protocol_error: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_unsupported_data",
                    "title": "var nw_ws_close_code_unsupported_data: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_no_status_received",
                    "title": "var nw_ws_close_code_no_status_received: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_abnormal_closure",
                    "title": "var nw_ws_close_code_abnormal_closure: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_invalid_frame_payload_data",
                    "title": "var nw_ws_close_code_invalid_frame_payload_data: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_policy_violation",
                    "title": "var nw_ws_close_code_policy_violation: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_message_too_big",
                    "title": "var nw_ws_close_code_message_too_big: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_mandatory_extension",
                    "title": "var nw_ws_close_code_mandatory_extension: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_internal_server_error",
                    "title": "var nw_ws_close_code_internal_server_error: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_tls_handshake",
                    "title": "var nw_ws_close_code_tls_handshake: nw_ws_close_code_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_close_code_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ws_close_code_t",
                "title": "nw_ws_close_code_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Data Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_binary",
                    "title": "var nw_ws_opcode_binary: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_text",
                    "title": "var nw_ws_opcode_text: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_cont",
                    "title": "var nw_ws_opcode_cont: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "title": "Control Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_ping",
                    "title": "var nw_ws_opcode_ping: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_pong",
                    "title": "var nw_ws_opcode_pong: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_close",
                    "title": "var nw_ws_opcode_close: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_invalid",
                    "title": "var nw_ws_opcode_invalid: nw_ws_opcode_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_t/init(_:)",
                    "title": "init(Int32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_t/init(rawvalue:)",
                    "title": "init(rawValue: Int32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_opcode_t/rawvalue",
                    "title": "var rawValue: Int32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ws_opcode_t",
                "title": "nw_ws_opcode_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Handshake Status Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_invalid",
                    "title": "var nw_ws_response_status_invalid: nw_ws_response_status_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_accept",
                    "title": "var nw_ws_response_status_accept: nw_ws_response_status_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_reject",
                    "title": "var nw_ws_response_status_reject: nw_ws_response_status_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_response_status_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ws_response_status_t",
                "title": "nw_ws_response_status_t",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Versions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_invalid",
                    "title": "var nw_ws_version_invalid: nw_ws_version_t",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_13",
                    "title": "var nw_ws_version_13: nw_ws_version_t",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_t/init(_:)",
                    "title": "init(UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_t/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ws_version_t/rawvalue",
                    "title": "var rawValue: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nw_ws_version_t",
                "title": "nw_ws_version_t",
                "type": "struct"
              },
              {
                "title": "C Network Protocols",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/os_nw_advertise_descriptor",
                "title": "OS_nw_advertise_descriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_browse_descriptor",
                "title": "OS_nw_browse_descriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_browse_result",
                "title": "OS_nw_browse_result",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_browser",
                "title": "OS_nw_browser",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_connection",
                "title": "OS_nw_connection",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_connection_group",
                "title": "OS_nw_connection_group",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_content_context",
                "title": "OS_nw_content_context",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_data_transfer_report",
                "title": "OS_nw_data_transfer_report",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_endpoint",
                "title": "OS_nw_endpoint",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_error",
                "title": "OS_nw_error",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_establishment_report",
                "title": "OS_nw_establishment_report",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_ethernet_channel",
                "title": "OS_nw_ethernet_channel",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_framer",
                "title": "OS_nw_framer",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_group_descriptor",
                "title": "OS_nw_group_descriptor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_interface",
                "title": "OS_nw_interface",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_listener",
                "title": "OS_nw_listener",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_object",
                "title": "OS_nw_object",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_parameters",
                "title": "OS_nw_parameters",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_path",
                "title": "OS_nw_path",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_path_monitor",
                "title": "OS_nw_path_monitor",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_privacy_context",
                "title": "OS_nw_privacy_context",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_definition",
                "title": "OS_nw_protocol_definition",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_metadata",
                "title": "OS_nw_protocol_metadata",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_options",
                "title": "OS_nw_protocol_options",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_protocol_stack",
                "title": "OS_nw_protocol_stack",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_proxy_config",
                "title": "OS_nw_proxy_config",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_relay_hop",
                "title": "OS_nw_relay_hop",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_resolution_report",
                "title": "OS_nw_resolution_report",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_resolver_config",
                "title": "OS_nw_resolver_config",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_txt_record",
                "title": "OS_nw_txt_record",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_ws_request",
                "title": "OS_nw_ws_request",
                "type": "protocol"
              },
              {
                "path": "/documentation/network/os_nw_ws_response",
                "title": "OS_nw_ws_response",
                "type": "protocol"
              }
            ],
            "path": "/documentation/network/c-language-symbols",
            "title": "C-Language Symbols",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_t/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_t/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_t/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nw_interface_radio_type_t",
            "title": "nw_interface_radio_type_t",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_multipath_version_t/init(_:)",
                "title": "init(Int32)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nw_multipath_version_t/init(rawvalue:)",
                "title": "init(rawValue: Int32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_multipath_version_t/rawvalue",
                "title": "var rawValue: Int32",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nw_multipath_version_t",
            "title": "nw_multipath_version_t",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_t/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_t/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_t/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nw_path_unsatisfied_reason_t",
            "title": "nw_path_unsatisfied_reason_t",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_t/init(_:)",
                "title": "init(UInt32)",
                "type": "init"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_t/init(rawvalue:)",
                "title": "init(rawValue: UInt32)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_t/rawvalue",
                "title": "var rawValue: UInt32",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nw_quic_stream_type_t",
            "title": "nw_quic_stream_type_t",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating TXT Records",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwtxtrecord/init(_:)-566pd",
                "title": "init([String : String])",
                "type": "init"
              },
              {
                "path": "/documentation/network/nwtxtrecord/removeentry(key:)",
                "title": "func removeEntry(key: String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwtxtrecord/setentry(_:for:)",
                "title": "func setEntry(NWTXTRecord.Entry, for: String) -> Bool",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Entry Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwtxtrecord/entry/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwtxtrecord/entry/empty",
                    "title": "case empty",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/network/nwtxtrecord/entry/string(_:)",
                    "title": "case string(String)",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwtxtrecord/entry/data(_:)",
                    "title": "case data(Data)",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwtxtrecord/entry/init(_:)",
                    "title": "init(Data?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nwtxtrecord/entry/data",
                    "title": "var data: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/network/nwtxtrecord/entry",
                "title": "NWTXTRecord.Entry",
                "type": "enum"
              },
              {
                "title": "Examining TXT Records",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwtxtrecord/getentry(for:)",
                "title": "func getEntry(for: String) -> NWTXTRecord.Entry?",
                "type": "method"
              },
              {
                "path": "/documentation/network/nwtxtrecord/subscript(_:)",
                "title": "subscript(String) -> String?",
                "type": "subscript"
              },
              {
                "path": "/documentation/network/nwtxtrecord/dictionary",
                "title": "var dictionary: [String : String]",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwtxtrecord/init(_:)-30jy4",
                "title": "init(Data)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwtxtrecord/data",
                "title": "var data: Data",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwtxtrecord",
            "title": "NWTXTRecord",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating Proxy Configurations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/proxyconfiguration/init(relayhops:)",
                "title": "init(relayHops: [ProxyConfiguration.RelayHop])",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Creating Relay Hops",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/proxyconfiguration/relayhop/init(http3relayendpoint:http2relayendpoint:tlsoptions:additionalhttpheaderfields:)",
                    "title": "init(http3RelayEndpoint: NWEndpoint, http2RelayEndpoint: NWEndpoint?, tlsOptions: NWProtocolTLS.Options, additionalHTTPHeaderFields: [String : String])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/network/proxyconfiguration/relayhop/init(http2relayendpoint:tlsoptions:additionalhttpheaderfields:)",
                    "title": "init(http2RelayEndpoint: NWEndpoint, tlsOptions: NWProtocolTLS.Options, additionalHTTPHeaderFields: [String : String])",
                    "type": "init"
                  }
                ],
                "path": "/documentation/network/proxyconfiguration/relayhop",
                "title": "ProxyConfiguration.RelayHop",
                "type": "struct"
              },
              {
                "path": "/documentation/network/proxyconfiguration/init(httpconnectproxy:tlsoptions:)",
                "title": "init(httpCONNECTProxy: NWEndpoint, tlsOptions: NWProtocolTLS.Options?)",
                "type": "init"
              },
              {
                "path": "/documentation/network/proxyconfiguration/init(socksv5proxy:)",
                "title": "init(socksv5Proxy: NWEndpoint)",
                "type": "init"
              },
              {
                "title": "Customizing Proxy Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/proxyconfiguration/allowfailover",
                "title": "var allowFailover: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/network/proxyconfiguration/applycredential(username:password:)",
                "title": "func applyCredential(username: String, password: String)",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/proxyconfiguration/init(oblivioushttprelay:relayresourcepath:gatewaykeyconfig:matchdomains:)",
                "title": "init(obliviousHTTPRelay: ProxyConfiguration.RelayHop, relayResourcePath: String, gatewayKeyConfig: Data, matchDomains: [String])",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/proxyconfiguration/excludeddomains",
                "title": "var excludedDomains: [String]",
                "type": "property"
              },
              {
                "path": "/documentation/network/proxyconfiguration/matchdomains",
                "title": "var matchDomains: [String]",
                "type": "property"
              }
            ],
            "path": "/documentation/network/proxyconfiguration",
            "title": "ProxyConfiguration",
            "type": "struct"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwmultiplexgroup/init(to:)",
                "title": "init(to: NWEndpoint)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nwmultiplexgroup/members",
                "title": "var members: [NWEndpoint]",
                "type": "property"
              }
            ],
            "path": "/documentation/network/nwmultiplexgroup",
            "title": "NWMultiplexGroup",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_framer_create_flags_default",
                "title": "var NW_FRAMER_CREATE_FLAGS_DEFAULT: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_framer_wakeup_time_forever",
                "title": "var NW_FRAMER_WAKEUP_TIME_FOREVER: UInt64",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_listener_infinite_connection_limit",
                "title": "var NW_LISTENER_INFINITE_CONNECTION_LIMIT: UInt32",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_quic_connection_default_keepalive",
                "title": "var NW_QUIC_CONNECTION_DEFAULT_KEEPALIVE: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_browser_state_waiting",
                "title": "var nw_browser_state_waiting: nw_browser_state_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_cdma",
                "title": "var nw_interface_radio_type_cell_cdma: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_endc_mmw",
                "title": "var nw_interface_radio_type_cell_endc_mmw: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_endc_sub6",
                "title": "var nw_interface_radio_type_cell_endc_sub6: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_evdo",
                "title": "var nw_interface_radio_type_cell_evdo: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_gsm",
                "title": "var nw_interface_radio_type_cell_gsm: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_lte",
                "title": "var nw_interface_radio_type_cell_lte: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_nr_sa_mmw",
                "title": "var nw_interface_radio_type_cell_nr_sa_mmw: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_nr_sa_sub6",
                "title": "var nw_interface_radio_type_cell_nr_sa_sub6: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_cell_wcdma",
                "title": "var nw_interface_radio_type_cell_wcdma: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_unknown",
                "title": "var nw_interface_radio_type_unknown: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_a",
                "title": "var nw_interface_radio_type_wifi_a: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_ac",
                "title": "var nw_interface_radio_type_wifi_ac: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_ax",
                "title": "var nw_interface_radio_type_wifi_ax: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_b",
                "title": "var nw_interface_radio_type_wifi_b: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_g",
                "title": "var nw_interface_radio_type_wifi_g: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_interface_radio_type_wifi_n",
                "title": "var nw_interface_radio_type_wifi_n: nw_interface_radio_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_multipath_version_0",
                "title": "var nw_multipath_version_0: nw_multipath_version_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_multipath_version_1",
                "title": "var nw_multipath_version_1: nw_multipath_version_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_multipath_version_unspecified",
                "title": "var nw_multipath_version_unspecified: nw_multipath_version_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_parameters_expired_dns_behavior_persistent",
                "title": "var nw_parameters_expired_dns_behavior_persistent: nw_parameters_expired_dns_behavior_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_cellular_denied",
                "title": "var nw_path_unsatisfied_reason_cellular_denied: nw_path_unsatisfied_reason_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_local_network_denied",
                "title": "var nw_path_unsatisfied_reason_local_network_denied: nw_path_unsatisfied_reason_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_not_available",
                "title": "var nw_path_unsatisfied_reason_not_available: nw_path_unsatisfied_reason_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_vpn_inactive",
                "title": "var nw_path_unsatisfied_reason_vpn_inactive: nw_path_unsatisfied_reason_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_path_unsatisfied_reason_wifi_denied",
                "title": "var nw_path_unsatisfied_reason_wifi_denied: nw_path_unsatisfied_reason_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_bidirectional",
                "title": "var nw_quic_stream_type_bidirectional: nw_quic_stream_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_datagram",
                "title": "var nw_quic_stream_type_datagram: nw_quic_stream_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_unidirectional",
                "title": "var nw_quic_stream_type_unidirectional: nw_quic_stream_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/network/nw_quic_stream_type_unknown",
                "title": "var nw_quic_stream_type_unknown: nw_quic_stream_type_t",
                "type": "var"
              }
            ],
            "path": "/documentation/network/network-constants",
            "title": "Network Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_copy_txt_record_object(_:)",
                "title": "func nw_advertise_descriptor_copy_txt_record_object(nw_advertise_descriptor_t) -> nw_txt_record_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_create_application_service(_:)",
                "title": "func nw_advertise_descriptor_create_application_service(UnsafePointer<CChar>) -> nw_advertise_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_create_bonjour_service(_:_:_:)",
                "title": "func nw_advertise_descriptor_create_bonjour_service(UnsafePointer<CChar>?, UnsafePointer<CChar>, UnsafePointer<CChar>?) -> nw_advertise_descriptor_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_get_application_service_name(_:)",
                "title": "func nw_advertise_descriptor_get_application_service_name(nw_advertise_descriptor_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_get_no_auto_rename(_:)",
                "title": "func nw_advertise_descriptor_get_no_auto_rename(nw_advertise_descriptor_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_set_no_auto_rename(_:_:)",
                "title": "func nw_advertise_descriptor_set_no_auto_rename(nw_advertise_descriptor_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_set_txt_record(_:_:_:)",
                "title": "func nw_advertise_descriptor_set_txt_record(nw_advertise_descriptor_t, UnsafeRawPointer?, Int)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_advertise_descriptor_set_txt_record_object(_:_:)",
                "title": "func nw_advertise_descriptor_set_txt_record_object(nw_advertise_descriptor_t, nw_txt_record_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_create_application_service(_:)",
                "title": "func nw_browse_descriptor_create_application_service(UnsafePointer<CChar>) -> nw_browse_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_create_bonjour_service(_:_:)",
                "title": "func nw_browse_descriptor_create_bonjour_service(UnsafePointer<CChar>, UnsafePointer<CChar>?) -> nw_browse_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_application_service_name(_:)",
                "title": "func nw_browse_descriptor_get_application_service_name(nw_browse_descriptor_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_domain(_:)",
                "title": "func nw_browse_descriptor_get_bonjour_service_domain(nw_browse_descriptor_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_type(_:)",
                "title": "func nw_browse_descriptor_get_bonjour_service_type(nw_browse_descriptor_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_get_include_txt_record(_:)",
                "title": "func nw_browse_descriptor_get_include_txt_record(nw_browse_descriptor_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_descriptor_set_include_txt_record(_:_:)",
                "title": "func nw_browse_descriptor_set_include_txt_record(nw_browse_descriptor_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_copy_endpoint(_:)",
                "title": "func nw_browse_result_copy_endpoint(nw_browse_result_t) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_copy_txt_record_object(_:)",
                "title": "func nw_browse_result_copy_txt_record_object(nw_browse_result_t) -> nw_txt_record_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_enumerate_interfaces(_:_:)",
                "title": "func nw_browse_result_enumerate_interfaces(nw_browse_result_t, (nw_interface_t) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_get_changes(_:_:)",
                "title": "func nw_browse_result_get_changes(nw_browse_result_t?, nw_browse_result_t?) -> nw_browse_result_change_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browse_result_get_interfaces_count(_:)",
                "title": "func nw_browse_result_get_interfaces_count(nw_browse_result_t) -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_cancel(_:)",
                "title": "func nw_browser_cancel(nw_browser_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_copy_browse_descriptor(_:)",
                "title": "func nw_browser_copy_browse_descriptor(nw_browser_t) -> nw_browse_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_copy_parameters(_:)",
                "title": "func nw_browser_copy_parameters(nw_browser_t) -> nw_parameters_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_create(_:_:)",
                "title": "func nw_browser_create(nw_browse_descriptor_t, nw_parameters_t?) -> nw_browser_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_set_browse_results_changed_handler(_:_:)",
                "title": "func nw_browser_set_browse_results_changed_handler(nw_browser_t, nw_browser_browse_results_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_set_queue(_:_:)",
                "title": "func nw_browser_set_queue(nw_browser_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_set_state_changed_handler(_:_:)",
                "title": "func nw_browser_set_state_changed_handler(nw_browser_t, nw_browser_state_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_browser_start(_:)",
                "title": "func nw_browser_start(nw_browser_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_access_establishment_report(_:_:_:)",
                "title": "func nw_connection_access_establishment_report(nw_connection_t, dispatch_queue_t, nw_establishment_report_access_block_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_batch(_:_:)",
                "title": "func nw_connection_batch(nw_connection_t, () -> Void)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_cancel(_:)",
                "title": "func nw_connection_cancel(nw_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_cancel_current_endpoint(_:)",
                "title": "func nw_connection_cancel_current_endpoint(nw_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_current_path(_:)",
                "title": "func nw_connection_copy_current_path(nw_connection_t) -> nw_path_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_description(_:)",
                "title": "func nw_connection_copy_description(nw_connection_t) -> UnsafeMutablePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_endpoint(_:)",
                "title": "func nw_connection_copy_endpoint(nw_connection_t) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_parameters(_:)",
                "title": "func nw_connection_copy_parameters(nw_connection_t) -> nw_parameters_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_copy_protocol_metadata(_:_:)",
                "title": "func nw_connection_copy_protocol_metadata(nw_connection_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_create(_:_:)",
                "title": "func nw_connection_create(nw_endpoint_t, nw_parameters_t) -> nw_connection_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_create_new_data_transfer_report(_:)",
                "title": "func nw_connection_create_new_data_transfer_report(nw_connection_t) -> nw_data_transfer_report_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_force_cancel(_:)",
                "title": "func nw_connection_force_cancel(nw_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_get_maximum_datagram_size(_:)",
                "title": "func nw_connection_get_maximum_datagram_size(nw_connection_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_cancel(_:)",
                "title": "func nw_connection_group_cancel(nw_connection_group_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_descriptor(_:)",
                "title": "func nw_connection_group_copy_descriptor(nw_connection_group_t) -> nw_group_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_local_endpoint_for_message(_:_:)",
                "title": "func nw_connection_group_copy_local_endpoint_for_message(nw_connection_group_t, nw_content_context_t) -> nw_endpoint_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_parameters(_:)",
                "title": "func nw_connection_group_copy_parameters(nw_connection_group_t) -> nw_parameters_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_path_for_message(_:_:)",
                "title": "func nw_connection_group_copy_path_for_message(nw_connection_group_t, nw_content_context_t) -> nw_path_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_protocol_metadata(_:_:)",
                "title": "func nw_connection_group_copy_protocol_metadata(nw_connection_group_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_protocol_metadata_for_message(_:_:_:)",
                "title": "func nw_connection_group_copy_protocol_metadata_for_message(nw_connection_group_t, nw_content_context_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_copy_remote_endpoint_for_message(_:_:)",
                "title": "func nw_connection_group_copy_remote_endpoint_for_message(nw_connection_group_t, nw_content_context_t) -> nw_endpoint_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_create(_:_:)",
                "title": "func nw_connection_group_create(nw_group_descriptor_t, nw_parameters_t) -> nw_connection_group_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_extract_connection(_:_:_:)",
                "title": "func nw_connection_group_extract_connection(nw_connection_group_t, nw_endpoint_t?, nw_protocol_options_t?) -> nw_connection_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_extract_connection_for_message(_:_:)",
                "title": "func nw_connection_group_extract_connection_for_message(nw_connection_group_t, nw_content_context_t) -> nw_connection_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_reinsert_extracted_connection(_:_:)",
                "title": "func nw_connection_group_reinsert_extracted_connection(nw_connection_group_t, nw_connection_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_reply(_:_:_:_:)",
                "title": "func nw_connection_group_reply(nw_connection_group_t, nw_content_context_t, nw_content_context_t, dispatch_data_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_send_message(_:_:_:_:_:)",
                "title": "func nw_connection_group_send_message(nw_connection_group_t, dispatch_data_t?, nw_endpoint_t?, nw_content_context_t, nw_connection_group_send_completion_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_new_connection_handler(_:_:)",
                "title": "func nw_connection_group_set_new_connection_handler(nw_connection_group_t, nw_connection_group_new_connection_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_queue(_:_:)",
                "title": "func nw_connection_group_set_queue(nw_connection_group_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_receive_handler(_:_:_:_:)",
                "title": "func nw_connection_group_set_receive_handler(nw_connection_group_t, UInt32, Bool, nw_connection_group_receive_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_set_state_changed_handler(_:_:)",
                "title": "func nw_connection_group_set_state_changed_handler(nw_connection_group_t, nw_connection_group_state_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_group_start(_:)",
                "title": "func nw_connection_group_start(nw_connection_group_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_receive(_:_:_:_:)",
                "title": "func nw_connection_receive(nw_connection_t, UInt32, UInt32, nw_connection_receive_completion_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_receive_message(_:_:)",
                "title": "func nw_connection_receive_message(nw_connection_t, nw_connection_receive_completion_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_restart(_:)",
                "title": "func nw_connection_restart(nw_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_send(_:_:_:_:_:)",
                "title": "func nw_connection_send(nw_connection_t, dispatch_data_t?, nw_content_context_t, Bool, nw_connection_send_completion_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_better_path_available_handler(_:_:)",
                "title": "func nw_connection_set_better_path_available_handler(nw_connection_t, nw_connection_boolean_event_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_path_changed_handler(_:_:)",
                "title": "func nw_connection_set_path_changed_handler(nw_connection_t, nw_connection_path_event_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_queue(_:_:)",
                "title": "func nw_connection_set_queue(nw_connection_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_state_changed_handler(_:_:)",
                "title": "func nw_connection_set_state_changed_handler(nw_connection_t, nw_connection_state_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_set_viability_changed_handler(_:_:)",
                "title": "func nw_connection_set_viability_changed_handler(nw_connection_t, nw_connection_boolean_event_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_connection_start(_:)",
                "title": "func nw_connection_start(nw_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_copy_antecedent(_:)",
                "title": "func nw_content_context_copy_antecedent(nw_content_context_t) -> nw_content_context_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_copy_protocol_metadata(_:_:)",
                "title": "func nw_content_context_copy_protocol_metadata(nw_content_context_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_create(_:)",
                "title": "func nw_content_context_create(UnsafePointer<CChar>) -> nw_content_context_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_foreach_protocol_metadata(_:_:)",
                "title": "func nw_content_context_foreach_protocol_metadata(nw_content_context_t, (nw_protocol_definition_t, nw_protocol_metadata_t) -> Void)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_expiration_milliseconds(_:)",
                "title": "func nw_content_context_get_expiration_milliseconds(nw_content_context_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_identifier(_:)",
                "title": "func nw_content_context_get_identifier(nw_content_context_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_is_final(_:)",
                "title": "func nw_content_context_get_is_final(nw_content_context_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_get_relative_priority(_:)",
                "title": "func nw_content_context_get_relative_priority(nw_content_context_t) -> Double",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_antecedent(_:_:)",
                "title": "func nw_content_context_set_antecedent(nw_content_context_t, nw_content_context_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_expiration_milliseconds(_:_:)",
                "title": "func nw_content_context_set_expiration_milliseconds(nw_content_context_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_is_final(_:_:)",
                "title": "func nw_content_context_set_is_final(nw_content_context_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_metadata_for_protocol(_:_:)",
                "title": "func nw_content_context_set_metadata_for_protocol(nw_content_context_t, nw_protocol_metadata_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_content_context_set_relative_priority(_:_:)",
                "title": "func nw_content_context_set_relative_priority(nw_content_context_t, Double)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_collect(_:_:_:)",
                "title": "func nw_data_transfer_report_collect(nw_data_transfer_report_t, dispatch_queue_t, nw_data_transfer_report_collect_block_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_copy_path_interface(_:_:)",
                "title": "func nw_data_transfer_report_copy_path_interface(nw_data_transfer_report_t, UInt32) -> nw_interface_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_duration_milliseconds(_:)",
                "title": "func nw_data_transfer_report_get_duration_milliseconds(nw_data_transfer_report_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_path_count(_:)",
                "title": "func nw_data_transfer_report_get_path_count(nw_data_transfer_report_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_path_radio_type(_:_:)",
                "title": "func nw_data_transfer_report_get_path_radio_type(nw_data_transfer_report_t, UInt32) -> nw_interface_radio_type_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_application_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_received_application_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_ip_packet_count(_:_:)",
                "title": "func nw_data_transfer_report_get_received_ip_packet_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_transport_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_received_transport_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_transport_duplicate_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_received_transport_duplicate_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_received_transport_out_of_order_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_received_transport_out_of_order_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_application_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_sent_application_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_ip_packet_count(_:_:)",
                "title": "func nw_data_transfer_report_get_sent_ip_packet_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_sent_transport_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(_:_:)",
                "title": "func nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_state(_:)",
                "title": "func nw_data_transfer_report_get_state(nw_data_transfer_report_t) -> nw_data_transfer_report_state_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(_:_:)",
                "title": "func nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_transport_rtt_variance(_:_:)",
                "title": "func nw_data_transfer_report_get_transport_rtt_variance(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(_:_:)",
                "title": "func nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(nw_data_transfer_report_t, UInt32) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_copy_address_string(_:)",
                "title": "func nw_endpoint_copy_address_string(nw_endpoint_t) -> UnsafeMutablePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_copy_port_string(_:)",
                "title": "func nw_endpoint_copy_port_string(nw_endpoint_t) -> UnsafeMutablePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_copy_txt_record(_:)",
                "title": "func nw_endpoint_copy_txt_record(nw_endpoint_t) -> nw_txt_record_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_address(_:)",
                "title": "func nw_endpoint_create_address(UnsafePointer<sockaddr>) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_bonjour_service(_:_:_:)",
                "title": "func nw_endpoint_create_bonjour_service(UnsafePointer<CChar>, UnsafePointer<CChar>, UnsafePointer<CChar>) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_host(_:_:)",
                "title": "func nw_endpoint_create_host(UnsafePointer<CChar>, UnsafePointer<CChar>) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_create_url(_:)",
                "title": "func nw_endpoint_create_url(UnsafePointer<CChar>) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_address(_:)",
                "title": "func nw_endpoint_get_address(nw_endpoint_t) -> UnsafePointer<sockaddr>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_bonjour_service_domain(_:)",
                "title": "func nw_endpoint_get_bonjour_service_domain(nw_endpoint_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_bonjour_service_name(_:)",
                "title": "func nw_endpoint_get_bonjour_service_name(nw_endpoint_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_bonjour_service_type(_:)",
                "title": "func nw_endpoint_get_bonjour_service_type(nw_endpoint_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_hostname(_:)",
                "title": "func nw_endpoint_get_hostname(nw_endpoint_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_port(_:)",
                "title": "func nw_endpoint_get_port(nw_endpoint_t) -> UInt16",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_signature(_:_:)",
                "title": "func nw_endpoint_get_signature(nw_endpoint_t, UnsafeMutablePointer<Int>) -> UnsafePointer<UInt8>?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_type(_:)",
                "title": "func nw_endpoint_get_type(nw_endpoint_t) -> nw_endpoint_type_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_endpoint_get_url(_:)",
                "title": "func nw_endpoint_get_url(nw_endpoint_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_error_copy_cf_error(_:)",
                "title": "func nw_error_copy_cf_error(nw_error_t) -> Unmanaged<CFError>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_error_get_error_code(_:)",
                "title": "func nw_error_get_error_code(nw_error_t) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_error_get_error_domain(_:)",
                "title": "func nw_error_get_error_domain(nw_error_t) -> nw_error_domain_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_copy_proxy_endpoint(_:)",
                "title": "func nw_establishment_report_copy_proxy_endpoint(nw_establishment_report_t) -> nw_endpoint_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_enumerate_protocols(_:_:)",
                "title": "func nw_establishment_report_enumerate_protocols(nw_establishment_report_t, (nw_protocol_definition_t, UInt64, UInt64) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_enumerate_resolution_reports(_:_:)",
                "title": "func nw_establishment_report_enumerate_resolution_reports(nw_establishment_report_t, (nw_resolution_report_t) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_enumerate_resolutions(_:_:)",
                "title": "func nw_establishment_report_enumerate_resolutions(nw_establishment_report_t, (nw_report_resolution_source_t, UInt64, UInt32, nw_endpoint_t, nw_endpoint_t) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_attempt_started_after_milliseconds(_:)",
                "title": "func nw_establishment_report_get_attempt_started_after_milliseconds(nw_establishment_report_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_duration_milliseconds(_:)",
                "title": "func nw_establishment_report_get_duration_milliseconds(nw_establishment_report_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_previous_attempt_count(_:)",
                "title": "func nw_establishment_report_get_previous_attempt_count(nw_establishment_report_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_proxy_configured(_:)",
                "title": "func nw_establishment_report_get_proxy_configured(nw_establishment_report_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_establishment_report_get_used_proxy(_:)",
                "title": "func nw_establishment_report_get_used_proxy(nw_establishment_report_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_cancel(_:)",
                "title": "func nw_ethernet_channel_cancel(nw_ethernet_channel_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_create(_:_:)",
                "title": "func nw_ethernet_channel_create(UInt16, nw_interface_t) -> nw_ethernet_channel_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_create_with_parameters(_:_:_:)",
                "title": "func nw_ethernet_channel_create_with_parameters(UInt16, nw_interface_t, nw_parameters_t) -> nw_ethernet_channel_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_get_maximum_payload_size(_:)",
                "title": "func nw_ethernet_channel_get_maximum_payload_size(nw_ethernet_channel_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_send(_:_:_:_:_:)",
                "title": "func nw_ethernet_channel_send(nw_ethernet_channel_t, dispatch_data_t, UInt16, UnsafeMutablePointer<UInt8>, nw_ethernet_channel_send_completion_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_set_queue(_:_:)",
                "title": "func nw_ethernet_channel_set_queue(nw_ethernet_channel_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_set_receive_handler(_:_:)",
                "title": "func nw_ethernet_channel_set_receive_handler(nw_ethernet_channel_t, nw_ethernet_channel_receive_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_set_state_changed_handler(_:_:)",
                "title": "func nw_ethernet_channel_set_state_changed_handler(nw_ethernet_channel_t, nw_ethernet_channel_state_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_start(_:)",
                "title": "func nw_ethernet_channel_start(nw_ethernet_channel_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_async(_:_:)",
                "title": "func nw_framer_async(nw_framer_t, nw_framer_block_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_local_endpoint(_:)",
                "title": "func nw_framer_copy_local_endpoint(nw_framer_t) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_options(_:)",
                "title": "func nw_framer_copy_options(nw_framer_t) -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_parameters(_:)",
                "title": "func nw_framer_copy_parameters(nw_framer_t) -> nw_parameters_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_copy_remote_endpoint(_:)",
                "title": "func nw_framer_copy_remote_endpoint(nw_framer_t) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_create_definition(_:_:_:)",
                "title": "func nw_framer_create_definition(UnsafePointer<CChar>, UInt32, nw_framer_start_handler_t) -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_create_options(_:)",
                "title": "func nw_framer_create_options(nw_protocol_definition_t) -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_deliver_input(_:_:_:_:_:)",
                "title": "func nw_framer_deliver_input(nw_framer_t, UnsafePointer<UInt8>, Int, nw_framer_message_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_deliver_input_no_copy(_:_:_:_:)",
                "title": "func nw_framer_deliver_input_no_copy(nw_framer_t, Int, nw_framer_message_t, Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_mark_failed_with_error(_:_:)",
                "title": "func nw_framer_mark_failed_with_error(nw_framer_t, Int32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_mark_ready(_:)",
                "title": "func nw_framer_mark_ready(nw_framer_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_access_value(_:_:_:)",
                "title": "func nw_framer_message_access_value(nw_framer_message_t, UnsafePointer<CChar>, (UnsafeRawPointer?) -> Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_copy_object_value(_:_:)",
                "title": "func nw_framer_message_copy_object_value(nw_framer_message_t, UnsafePointer<CChar>) -> Any?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_create(_:)",
                "title": "func nw_framer_message_create(nw_framer_t) -> nw_framer_message_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_set_object_value(_:_:_:)",
                "title": "func nw_framer_message_set_object_value(nw_framer_message_t, UnsafePointer<CChar>, Any?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_message_set_value(_:_:_:_:)",
                "title": "func nw_framer_message_set_value(nw_framer_message_t, UnsafePointer<CChar>, UnsafeMutableRawPointer?, nw_framer_message_dispose_value_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_options_copy_object_value(_:_:)",
                "title": "func nw_framer_options_copy_object_value(nw_protocol_options_t, UnsafePointer<CChar>) -> Any?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_options_set_object_value(_:_:_:)",
                "title": "func nw_framer_options_set_object_value(nw_protocol_options_t, UnsafePointer<CChar>, Any?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_parse_input(_:_:_:_:_:)",
                "title": "func nw_framer_parse_input(nw_framer_t, Int, Int, UnsafeMutablePointer<UInt8>?, (UnsafeMutablePointer<UInt8>?, Int, Bool) -> Int) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_parse_output(_:_:_:_:_:)",
                "title": "func nw_framer_parse_output(nw_framer_t, Int, Int, UnsafeMutablePointer<UInt8>?, (UnsafeMutablePointer<UInt8>?, Int, Bool) -> Int) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_pass_through_input(_:)",
                "title": "func nw_framer_pass_through_input(nw_framer_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_pass_through_output(_:)",
                "title": "func nw_framer_pass_through_output(nw_framer_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_prepend_application_protocol(_:_:)",
                "title": "func nw_framer_prepend_application_protocol(nw_framer_t, nw_protocol_options_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_protocol_create_message(_:)",
                "title": "func nw_framer_protocol_create_message(nw_protocol_definition_t) -> nw_framer_message_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_schedule_wakeup(_:_:)",
                "title": "func nw_framer_schedule_wakeup(nw_framer_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_cleanup_handler(_:_:)",
                "title": "func nw_framer_set_cleanup_handler(nw_framer_t, nw_framer_cleanup_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_input_handler(_:_:)",
                "title": "func nw_framer_set_input_handler(nw_framer_t, nw_framer_input_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_output_handler(_:_:)",
                "title": "func nw_framer_set_output_handler(nw_framer_t, nw_framer_output_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_stop_handler(_:_:)",
                "title": "func nw_framer_set_stop_handler(nw_framer_t, nw_framer_stop_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_set_wakeup_handler(_:_:)",
                "title": "func nw_framer_set_wakeup_handler(nw_framer_t, nw_framer_wakeup_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_write_output(_:_:_:)",
                "title": "func nw_framer_write_output(nw_framer_t, UnsafePointer<UInt8>, Int)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_write_output_data(_:_:)",
                "title": "func nw_framer_write_output_data(nw_framer_t, dispatch_data_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_framer_write_output_no_copy(_:_:)",
                "title": "func nw_framer_write_output_no_copy(nw_framer_t, Int) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_add_endpoint(_:_:)",
                "title": "func nw_group_descriptor_add_endpoint(nw_group_descriptor_t, nw_endpoint_t) -> Bool",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Customizing Multicast Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_multicast_group_descriptor_set_disable_unicast_traffic(_:_:)",
                    "title": "func nw_multicast_group_descriptor_set_disable_unicast_traffic(nw_group_descriptor_t, Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_multicast_group_descriptor_get_disable_unicast_traffic(_:)",
                    "title": "func nw_multicast_group_descriptor_get_disable_unicast_traffic(nw_group_descriptor_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_multicast_group_descriptor_set_specific_source(_:_:)",
                    "title": "func nw_multicast_group_descriptor_set_specific_source(nw_group_descriptor_t, nw_endpoint_t)",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_group_descriptor_create_multicast(_:)",
                "title": "func nw_group_descriptor_create_multicast(nw_endpoint_t) -> nw_group_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_create_multiplex(_:)",
                "title": "func nw_group_descriptor_create_multiplex(nw_endpoint_t) -> nw_group_descriptor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints(_:_:)",
                "title": "func nw_group_descriptor_enumerate_endpoints(nw_group_descriptor_t, (nw_endpoint_t) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_interface_get_index(_:)",
                "title": "func nw_interface_get_index(nw_interface_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_interface_get_name(_:)",
                "title": "func nw_interface_get_name(nw_interface_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_interface_get_type(_:)",
                "title": "func nw_interface_get_type(nw_interface_t) -> nw_interface_type_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_create_metadata()",
                "title": "func nw_ip_create_metadata() -> nw_protocol_metadata_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_get_ecn_flag(_:)",
                "title": "func nw_ip_metadata_get_ecn_flag(nw_protocol_metadata_t) -> nw_ip_ecn_flag_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_get_receive_time(_:)",
                "title": "func nw_ip_metadata_get_receive_time(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_get_service_class(_:)",
                "title": "func nw_ip_metadata_get_service_class(nw_protocol_metadata_t) -> nw_service_class_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_set_ecn_flag(_:_:)",
                "title": "func nw_ip_metadata_set_ecn_flag(nw_protocol_metadata_t, nw_ip_ecn_flag_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_metadata_set_service_class(_:_:)",
                "title": "func nw_ip_metadata_set_service_class(nw_protocol_metadata_t, nw_service_class_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_calculate_receive_time(_:_:)",
                "title": "func nw_ip_options_set_calculate_receive_time(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_disable_fragmentation(_:_:)",
                "title": "func nw_ip_options_set_disable_fragmentation(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_disable_multicast_loopback(_:_:)",
                "title": "func nw_ip_options_set_disable_multicast_loopback(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_hop_limit(_:_:)",
                "title": "func nw_ip_options_set_hop_limit(nw_protocol_options_t, UInt8)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_local_address_preference(_:_:)",
                "title": "func nw_ip_options_set_local_address_preference(nw_protocol_options_t, nw_ip_local_address_preference_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_use_minimum_mtu(_:_:)",
                "title": "func nw_ip_options_set_use_minimum_mtu(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ip_options_set_version(_:_:)",
                "title": "func nw_ip_options_set_version(nw_protocol_options_t, nw_ip_version_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_cancel(_:)",
                "title": "func nw_listener_cancel(nw_listener_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create(_:)",
                "title": "func nw_listener_create(nw_parameters_t) -> nw_listener_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create_with_connection(_:_:)",
                "title": "func nw_listener_create_with_connection(nw_connection_t, nw_parameters_t) -> nw_listener_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create_with_launchd_key(_:_:)",
                "title": "func nw_listener_create_with_launchd_key(nw_parameters_t, UnsafePointer<CChar>) -> nw_listener_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_create_with_port(_:_:)",
                "title": "func nw_listener_create_with_port(UnsafePointer<CChar>, nw_parameters_t) -> nw_listener_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_get_new_connection_limit(_:)",
                "title": "func nw_listener_get_new_connection_limit(nw_listener_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_get_port(_:)",
                "title": "func nw_listener_get_port(nw_listener_t) -> UInt16",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_advertise_descriptor(_:_:)",
                "title": "func nw_listener_set_advertise_descriptor(nw_listener_t, nw_advertise_descriptor_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_advertised_endpoint_changed_handler(_:_:)",
                "title": "func nw_listener_set_advertised_endpoint_changed_handler(nw_listener_t, nw_listener_advertised_endpoint_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_new_connection_group_handler(_:_:)",
                "title": "func nw_listener_set_new_connection_group_handler(nw_listener_t, nw_listener_new_connection_group_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_new_connection_handler(_:_:)",
                "title": "func nw_listener_set_new_connection_handler(nw_listener_t, nw_listener_new_connection_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_new_connection_limit(_:_:)",
                "title": "func nw_listener_set_new_connection_limit(nw_listener_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_queue(_:_:)",
                "title": "func nw_listener_set_queue(nw_listener_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_set_state_changed_handler(_:_:)",
                "title": "func nw_listener_set_state_changed_handler(nw_listener_t, nw_listener_state_changed_handler_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_listener_start(_:)",
                "title": "func nw_listener_start(nw_listener_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_multicast_group_descriptor_get_disable_unicast_traffic(_:)",
                "title": "func nw_multicast_group_descriptor_get_disable_unicast_traffic(nw_group_descriptor_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_multicast_group_descriptor_set_disable_unicast_traffic(_:_:)",
                "title": "func nw_multicast_group_descriptor_set_disable_unicast_traffic(nw_group_descriptor_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_multicast_group_descriptor_set_specific_source(_:_:)",
                "title": "func nw_multicast_group_descriptor_set_specific_source(nw_group_descriptor_t, nw_endpoint_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_create_application_service()",
                "title": "func nw_parameters_create_application_service() -> nw_parameters_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_create_quic(_:)",
                "title": "func nw_parameters_create_quic(nw_parameters_configure_protocol_block_t) -> nw_parameters_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_requires_dnssec_validation(_:)",
                "title": "func nw_parameters_requires_dnssec_validation(nw_parameters_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_parameters_set_requires_dnssec_validation(_:_:)",
                "title": "func nw_parameters_set_requires_dnssec_validation(nw_parameters_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_copy_effective_local_endpoint(_:)",
                "title": "func nw_path_copy_effective_local_endpoint(nw_path_t) -> nw_endpoint_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_copy_effective_remote_endpoint(_:)",
                "title": "func nw_path_copy_effective_remote_endpoint(nw_path_t) -> nw_endpoint_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_gateways(_:_:)",
                "title": "func nw_path_enumerate_gateways(nw_path_t, (nw_endpoint_t) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_interfaces(_:_:)",
                "title": "func nw_path_enumerate_interfaces(nw_path_t, (nw_interface_t) -> Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_get_status(_:)",
                "title": "func nw_path_get_status(nw_path_t) -> nw_path_status_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_get_unsatisfied_reason(_:)",
                "title": "func nw_path_get_unsatisfied_reason(nw_path_t) -> nw_path_unsatisfied_reason_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_has_dns(_:)",
                "title": "func nw_path_has_dns(nw_path_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_has_ipv4(_:)",
                "title": "func nw_path_has_ipv4(nw_path_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_has_ipv6(_:)",
                "title": "func nw_path_has_ipv6(nw_path_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_is_constrained(_:)",
                "title": "func nw_path_is_constrained(nw_path_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_is_equal(_:_:)",
                "title": "func nw_path_is_equal(nw_path_t, nw_path_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_is_expensive(_:)",
                "title": "func nw_path_is_expensive(nw_path_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_cancel(_:)",
                "title": "func nw_path_monitor_cancel(nw_path_monitor_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_create()",
                "title": "func nw_path_monitor_create() -> nw_path_monitor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_create_for_ethernet_channel()",
                "title": "func nw_path_monitor_create_for_ethernet_channel() -> nw_path_monitor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_create_with_type(_:)",
                "title": "func nw_path_monitor_create_with_type(nw_interface_type_t) -> nw_path_monitor_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_prohibit_interface_type(_:_:)",
                "title": "func nw_path_monitor_prohibit_interface_type(nw_path_monitor_t, nw_interface_type_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_set_cancel_handler(_:_:)",
                "title": "func nw_path_monitor_set_cancel_handler(nw_path_monitor_t, nw_path_monitor_cancel_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_set_queue(_:_:)",
                "title": "func nw_path_monitor_set_queue(nw_path_monitor_t, dispatch_queue_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_set_update_handler(_:_:)",
                "title": "func nw_path_monitor_set_update_handler(nw_path_monitor_t, nw_path_monitor_update_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_monitor_start(_:)",
                "title": "func nw_path_monitor_start(nw_path_monitor_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_path_uses_interface_type(_:_:)",
                "title": "func nw_path_uses_interface_type(nw_path_t, nw_interface_type_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_ip_definition()",
                "title": "func nw_protocol_copy_ip_definition() -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_quic_definition()",
                "title": "func nw_protocol_copy_quic_definition() -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_tcp_definition()",
                "title": "func nw_protocol_copy_tcp_definition() -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_tls_definition()",
                "title": "func nw_protocol_copy_tls_definition() -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_udp_definition()",
                "title": "func nw_protocol_copy_udp_definition() -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_copy_ws_definition()",
                "title": "func nw_protocol_copy_ws_definition() -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                "title": "func nw_protocol_metadata_copy_definition(nw_protocol_metadata_t) -> nw_protocol_definition_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_framer_message(_:)",
                "title": "func nw_protocol_metadata_is_framer_message(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_ip(_:)",
                "title": "func nw_protocol_metadata_is_ip(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_quic(_:)",
                "title": "func nw_protocol_metadata_is_quic(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_tcp(_:)",
                "title": "func nw_protocol_metadata_is_tcp(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_tls(_:)",
                "title": "func nw_protocol_metadata_is_tls(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_udp(_:)",
                "title": "func nw_protocol_metadata_is_udp(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_metadata_is_ws(_:)",
                "title": "func nw_protocol_metadata_is_ws(nw_protocol_metadata_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_protocol_options_is_quic(_:)",
                "title": "func nw_protocol_options_is_quic(nw_protocol_options_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_add_excluded_domain(_:_:)",
                "title": "func nw_proxy_config_add_excluded_domain(nw_proxy_config_t, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_add_match_domain(_:_:)",
                "title": "func nw_proxy_config_add_match_domain(nw_proxy_config_t, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_clear_excluded_domains(_:)",
                "title": "func nw_proxy_config_clear_excluded_domains(nw_proxy_config_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_clear_match_domains(_:)",
                "title": "func nw_proxy_config_clear_match_domains(nw_proxy_config_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_enumerate_excluded_domains(_:_:)",
                "title": "func nw_proxy_config_enumerate_excluded_domains(nw_proxy_config_t, (UnsafePointer<CChar>) -> Void)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_proxy_config_enumerate_match_domains(_:_:)",
                "title": "func nw_proxy_config_enumerate_match_domains(nw_proxy_config_t, (UnsafePointer<CChar>) -> Void)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_add_tls_application_protocol(_:_:)",
                "title": "func nw_quic_add_tls_application_protocol(nw_protocol_options_t, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_copy_sec_protocol_metadata(_:)",
                "title": "func nw_quic_copy_sec_protocol_metadata(nw_protocol_metadata_t) -> sec_protocol_metadata_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_copy_sec_protocol_options(_:)",
                "title": "func nw_quic_copy_sec_protocol_options(nw_protocol_options_t) -> sec_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_create_options()",
                "title": "func nw_quic_create_options() -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_application_error(_:)",
                "title": "func nw_quic_get_application_error(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_application_error_reason(_:)",
                "title": "func nw_quic_get_application_error_reason(nw_protocol_metadata_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_idle_timeout(_:)",
                "title": "func nw_quic_get_idle_timeout(nw_protocol_options_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_data(_:)",
                "title": "func nw_quic_get_initial_max_data(nw_protocol_options_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_stream_data_bidirectional_local(_:)",
                "title": "func nw_quic_get_initial_max_stream_data_bidirectional_local(nw_protocol_options_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_stream_data_bidirectional_remote(_:)",
                "title": "func nw_quic_get_initial_max_stream_data_bidirectional_remote(nw_protocol_options_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_stream_data_unidirectional(_:)",
                "title": "func nw_quic_get_initial_max_stream_data_unidirectional(nw_protocol_options_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_streams_bidirectional(_:)",
                "title": "func nw_quic_get_initial_max_streams_bidirectional(nw_protocol_options_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_initial_max_streams_unidirectional(_:)",
                "title": "func nw_quic_get_initial_max_streams_unidirectional(nw_protocol_options_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_keepalive_interval(_:)",
                "title": "func nw_quic_get_keepalive_interval(nw_protocol_metadata_t) -> UInt16",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_local_max_streams_bidirectional(_:)",
                "title": "func nw_quic_get_local_max_streams_bidirectional(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_local_max_streams_unidirectional(_:)",
                "title": "func nw_quic_get_local_max_streams_unidirectional(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_max_datagram_frame_size(_:)",
                "title": "func nw_quic_get_max_datagram_frame_size(nw_protocol_options_t) -> UInt16",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_max_udp_payload_size(_:)",
                "title": "func nw_quic_get_max_udp_payload_size(nw_protocol_options_t) -> UInt16",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_remote_idle_timeout(_:)",
                "title": "func nw_quic_get_remote_idle_timeout(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_remote_max_streams_bidirectional(_:)",
                "title": "func nw_quic_get_remote_max_streams_bidirectional(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_remote_max_streams_unidirectional(_:)",
                "title": "func nw_quic_get_remote_max_streams_unidirectional(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_application_error(_:)",
                "title": "func nw_quic_get_stream_application_error(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_id(_:)",
                "title": "func nw_quic_get_stream_id(nw_protocol_metadata_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_is_datagram(_:)",
                "title": "func nw_quic_get_stream_is_datagram(nw_protocol_options_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_is_unidirectional(_:)",
                "title": "func nw_quic_get_stream_is_unidirectional(nw_protocol_options_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_type(_:)",
                "title": "func nw_quic_get_stream_type(nw_protocol_metadata_t) -> UInt8",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_get_stream_usable_datagram_frame_size(_:)",
                "title": "func nw_quic_get_stream_usable_datagram_frame_size(nw_protocol_metadata_t) -> UInt16",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_application_error(_:_:_:)",
                "title": "func nw_quic_set_application_error(nw_protocol_metadata_t, UInt64, UnsafePointer<CChar>?)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_idle_timeout(_:_:)",
                "title": "func nw_quic_set_idle_timeout(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_data(_:_:)",
                "title": "func nw_quic_set_initial_max_data(nw_protocol_options_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_stream_data_bidirectional_local(_:_:)",
                "title": "func nw_quic_set_initial_max_stream_data_bidirectional_local(nw_protocol_options_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_stream_data_bidirectional_remote(_:_:)",
                "title": "func nw_quic_set_initial_max_stream_data_bidirectional_remote(nw_protocol_options_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_stream_data_unidirectional(_:_:)",
                "title": "func nw_quic_set_initial_max_stream_data_unidirectional(nw_protocol_options_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_streams_bidirectional(_:_:)",
                "title": "func nw_quic_set_initial_max_streams_bidirectional(nw_protocol_options_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_initial_max_streams_unidirectional(_:_:)",
                "title": "func nw_quic_set_initial_max_streams_unidirectional(nw_protocol_options_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_keepalive_interval(_:_:)",
                "title": "func nw_quic_set_keepalive_interval(nw_protocol_metadata_t, UInt16)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_local_max_streams_bidirectional(_:_:)",
                "title": "func nw_quic_set_local_max_streams_bidirectional(nw_protocol_metadata_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_local_max_streams_unidirectional(_:_:)",
                "title": "func nw_quic_set_local_max_streams_unidirectional(nw_protocol_metadata_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_max_datagram_frame_size(_:_:)",
                "title": "func nw_quic_set_max_datagram_frame_size(nw_protocol_options_t, UInt16)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_max_udp_payload_size(_:_:)",
                "title": "func nw_quic_set_max_udp_payload_size(nw_protocol_options_t, UInt16)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_stream_application_error(_:_:)",
                "title": "func nw_quic_set_stream_application_error(nw_protocol_metadata_t, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_stream_is_datagram(_:_:)",
                "title": "func nw_quic_set_stream_is_datagram(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_quic_set_stream_is_unidirectional(_:_:)",
                "title": "func nw_quic_set_stream_is_unidirectional(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_copy_preferred_endpoint(_:)",
                "title": "func nw_resolution_report_copy_preferred_endpoint(nw_resolution_report_t) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_copy_successful_endpoint(_:)",
                "title": "func nw_resolution_report_copy_successful_endpoint(nw_resolution_report_t) -> nw_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_endpoint_count(_:)",
                "title": "func nw_resolution_report_get_endpoint_count(nw_resolution_report_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_milliseconds(_:)",
                "title": "func nw_resolution_report_get_milliseconds(nw_resolution_report_t) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_protocol(_:)",
                "title": "func nw_resolution_report_get_protocol(nw_resolution_report_t) -> nw_report_resolution_protocol_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_resolution_report_get_source(_:)",
                "title": "func nw_resolution_report_get_source(nw_resolution_report_t) -> nw_report_resolution_source_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_create_options()",
                "title": "func nw_tcp_create_options() -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_get_available_receive_buffer(_:)",
                "title": "func nw_tcp_get_available_receive_buffer(nw_protocol_metadata_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_get_available_send_buffer(_:)",
                "title": "func nw_tcp_get_available_send_buffer(nw_protocol_metadata_t) -> UInt32",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_connection_timeout(_:_:)",
                "title": "func nw_tcp_options_set_connection_timeout(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_disable_ack_stretching(_:_:)",
                "title": "func nw_tcp_options_set_disable_ack_stretching(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_disable_ecn(_:_:)",
                "title": "func nw_tcp_options_set_disable_ecn(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_enable_fast_open(_:_:)",
                "title": "func nw_tcp_options_set_enable_fast_open(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_enable_keepalive(_:_:)",
                "title": "func nw_tcp_options_set_enable_keepalive(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_keepalive_count(_:_:)",
                "title": "func nw_tcp_options_set_keepalive_count(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_keepalive_idle_time(_:_:)",
                "title": "func nw_tcp_options_set_keepalive_idle_time(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_keepalive_interval(_:_:)",
                "title": "func nw_tcp_options_set_keepalive_interval(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_maximum_segment_size(_:_:)",
                "title": "func nw_tcp_options_set_maximum_segment_size(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_multipath_force_version(_:_:)",
                "title": "func nw_tcp_options_set_multipath_force_version(nw_protocol_options_t, nw_multipath_version_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_no_delay(_:_:)",
                "title": "func nw_tcp_options_set_no_delay(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_no_options(_:_:)",
                "title": "func nw_tcp_options_set_no_options(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_no_push(_:_:)",
                "title": "func nw_tcp_options_set_no_push(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_persist_timeout(_:_:)",
                "title": "func nw_tcp_options_set_persist_timeout(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_retransmit_connection_drop_time(_:_:)",
                "title": "func nw_tcp_options_set_retransmit_connection_drop_time(nw_protocol_options_t, UInt32)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tcp_options_set_retransmit_fin_drop(_:_:)",
                "title": "func nw_tcp_options_set_retransmit_fin_drop(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tls_copy_sec_protocol_metadata(_:)",
                "title": "func nw_tls_copy_sec_protocol_metadata(nw_protocol_metadata_t) -> sec_protocol_metadata_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tls_copy_sec_protocol_options(_:)",
                "title": "func nw_tls_copy_sec_protocol_options(nw_protocol_options_t) -> sec_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_tls_create_options()",
                "title": "func nw_tls_create_options() -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                "title": "func nw_txt_record_access_bytes(nw_txt_record_t, nw_txt_record_access_bytes_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                "title": "func nw_txt_record_access_key(nw_txt_record_t, UnsafePointer<CChar>, nw_txt_record_access_key_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                "title": "func nw_txt_record_apply(nw_txt_record_t, nw_txt_record_applier_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_copy(_:)",
                "title": "func nw_txt_record_copy(nw_txt_record_t?) -> nw_txt_record_t?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_create_dictionary()",
                "title": "func nw_txt_record_create_dictionary() -> nw_txt_record_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                "title": "func nw_txt_record_create_with_bytes(UnsafePointer<UInt8>, Int) -> nw_txt_record_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                "title": "func nw_txt_record_find_key(nw_txt_record_t, UnsafePointer<CChar>) -> nw_txt_record_find_key_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                "title": "func nw_txt_record_get_key_count(nw_txt_record_t?) -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                "title": "func nw_txt_record_is_dictionary(nw_txt_record_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                "title": "func nw_txt_record_is_equal(nw_txt_record_t?, nw_txt_record_t?) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                "title": "func nw_txt_record_remove_key(nw_txt_record_t, UnsafePointer<CChar>) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                "title": "func nw_txt_record_set_key(nw_txt_record_t, UnsafePointer<CChar>, UnsafePointer<UInt8>?, Int) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_udp_create_metadata()",
                "title": "func nw_udp_create_metadata() -> nw_protocol_metadata_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_udp_create_options()",
                "title": "func nw_udp_create_options() -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_udp_options_set_prefer_no_checksum(_:_:)",
                "title": "func nw_udp_options_set_prefer_no_checksum(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_create_metadata(_:)",
                "title": "func nw_ws_create_metadata(nw_ws_opcode_t) -> nw_protocol_metadata_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_create_options(_:)",
                "title": "func nw_ws_create_options(nw_ws_version_t) -> nw_protocol_options_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_copy_server_response(_:)",
                "title": "func nw_ws_metadata_copy_server_response(nw_protocol_metadata_t) -> nw_ws_response_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_get_close_code(_:)",
                "title": "func nw_ws_metadata_get_close_code(nw_protocol_metadata_t) -> nw_ws_close_code_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_get_opcode(_:)",
                "title": "func nw_ws_metadata_get_opcode(nw_protocol_metadata_t) -> nw_ws_opcode_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_set_close_code(_:_:)",
                "title": "func nw_ws_metadata_set_close_code(nw_protocol_metadata_t, nw_ws_close_code_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_metadata_set_pong_handler(_:_:_:)",
                "title": "func nw_ws_metadata_set_pong_handler(nw_protocol_metadata_t, dispatch_queue_t, nw_ws_pong_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_add_additional_header(_:_:_:)",
                "title": "func nw_ws_options_add_additional_header(nw_protocol_options_t, UnsafePointer<CChar>, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_add_subprotocol(_:_:)",
                "title": "func nw_ws_options_add_subprotocol(nw_protocol_options_t, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_auto_reply_ping(_:_:)",
                "title": "func nw_ws_options_set_auto_reply_ping(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_client_request_handler(_:_:_:)",
                "title": "func nw_ws_options_set_client_request_handler(nw_protocol_options_t, dispatch_queue_t, nw_ws_client_request_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_maximum_message_size(_:_:)",
                "title": "func nw_ws_options_set_maximum_message_size(nw_protocol_options_t, Int)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_options_set_skip_handshake(_:_:)",
                "title": "func nw_ws_options_set_skip_handshake(nw_protocol_options_t, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_request_enumerate_additional_headers(_:_:)",
                "title": "func nw_ws_request_enumerate_additional_headers(nw_ws_request_t, (UnsafePointer<CChar>, UnsafePointer<CChar>) -> Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_request_enumerate_subprotocols(_:_:)",
                "title": "func nw_ws_request_enumerate_subprotocols(nw_ws_request_t, (UnsafePointer<CChar>) -> Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_add_additional_header(_:_:_:)",
                "title": "func nw_ws_response_add_additional_header(nw_ws_response_t, UnsafePointer<CChar>, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_create(_:_:)",
                "title": "func nw_ws_response_create(nw_ws_response_status_t, UnsafePointer<CChar>?) -> nw_ws_response_t",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_enumerate_additional_headers(_:_:)",
                "title": "func nw_ws_response_enumerate_additional_headers(nw_ws_response_t, (UnsafePointer<CChar>, UnsafePointer<CChar>) -> Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_get_selected_subprotocol(_:)",
                "title": "func nw_ws_response_get_selected_subprotocol(nw_ws_response_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/network/nw_ws_response_get_status(_:)",
                "title": "func nw_ws_response_get_status(nw_ws_response_t?) -> nw_ws_response_status_t",
                "type": "func"
              }
            ],
            "path": "/documentation/network/network-functions",
            "title": "Network Functions",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Advertising Bonjour Services",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_create_bonjour_service(_:_:_:)",
                    "title": "func nw_advertise_descriptor_create_bonjour_service(UnsafePointer<CChar>?, UnsafePointer<CChar>, UnsafePointer<CChar>?) -> nw_advertise_descriptor_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_set_no_auto_rename(_:_:)",
                    "title": "func nw_advertise_descriptor_set_no_auto_rename(nw_advertise_descriptor_t, Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_get_no_auto_rename(_:)",
                    "title": "func nw_advertise_descriptor_get_no_auto_rename(nw_advertise_descriptor_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "title": "Configuring TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_set_txt_record(_:_:_:)",
                    "title": "func nw_advertise_descriptor_set_txt_record(nw_advertise_descriptor_t, UnsafeRawPointer?, Int)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_set_txt_record_object(_:_:)",
                    "title": "func nw_advertise_descriptor_set_txt_record_object(nw_advertise_descriptor_t, nw_txt_record_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_advertise_descriptor_copy_txt_record_object(_:)",
                    "title": "func nw_advertise_descriptor_copy_txt_record_object(nw_advertise_descriptor_t) -> nw_txt_record_t?",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_advertise_descriptor_t",
                "title": "nw_advertise_descriptor_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Browse Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_create_bonjour_service(_:_:)",
                    "title": "func nw_browse_descriptor_create_bonjour_service(UnsafePointer<CChar>, UnsafePointer<CChar>?) -> nw_browse_descriptor_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_set_include_txt_record(_:_:)",
                    "title": "func nw_browse_descriptor_set_include_txt_record(nw_browse_descriptor_t, Bool)",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Browse Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_type(_:)",
                    "title": "func nw_browse_descriptor_get_bonjour_service_type(nw_browse_descriptor_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_domain(_:)",
                    "title": "func nw_browse_descriptor_get_bonjour_service_domain(nw_browse_descriptor_t) -> UnsafePointer<CChar>?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_descriptor_get_include_txt_record(_:)",
                    "title": "func nw_browse_descriptor_get_include_txt_record(nw_browse_descriptor_t) -> Bool",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_browse_descriptor_t",
                "title": "nw_browse_descriptor_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Browse Result Change Flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_invalid",
                    "title": "var nw_browse_result_change_invalid: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_identical",
                    "title": "var nw_browse_result_change_identical: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_result_added",
                    "title": "var nw_browse_result_change_result_added: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_result_removed",
                    "title": "var nw_browse_result_change_result_removed: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_txt_record_changed",
                    "title": "var nw_browse_result_change_txt_record_changed: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_interface_added",
                    "title": "var nw_browse_result_change_interface_added: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_change_interface_removed",
                    "title": "var nw_browse_result_change_interface_removed: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/network/nw_browse_result_change_t",
                "title": "nw_browse_result_change_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_browse_result_enumerate_interface_t",
                "title": "nw_browse_result_enumerate_interface_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Evaluating Browser Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_copy_endpoint(_:)",
                    "title": "func nw_browse_result_copy_endpoint(nw_browse_result_t) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_enumerate_interfaces(_:_:)",
                    "title": "func nw_browse_result_enumerate_interfaces(nw_browse_result_t, (nw_interface_t) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_enumerate_interface_t",
                    "title": "nw_browse_result_enumerate_interface_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_get_interfaces_count(_:)",
                    "title": "func nw_browse_result_get_interfaces_count(nw_browse_result_t) -> Int",
                    "type": "func"
                  },
                  {
                    "title": "Handling TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_copy_txt_record_object(_:)",
                    "title": "func nw_browse_result_copy_txt_record_object(nw_browse_result_t) -> nw_txt_record_t?",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_create_dictionary()",
                        "title": "func nw_txt_record_create_dictionary() -> nw_txt_record_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                        "title": "func nw_txt_record_create_with_bytes(UnsafePointer<UInt8>, Int) -> nw_txt_record_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_copy(_:)",
                        "title": "func nw_txt_record_copy(nw_txt_record_t?) -> nw_txt_record_t?",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                        "title": "func nw_txt_record_set_key(nw_txt_record_t, UnsafePointer<CChar>, UnsafePointer<UInt8>?, Int) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                        "title": "func nw_txt_record_remove_key(nw_txt_record_t, UnsafePointer<CChar>) -> Bool",
                        "type": "func"
                      },
                      {
                        "title": "Examining TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                        "title": "func nw_txt_record_is_dictionary(nw_txt_record_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                        "title": "func nw_txt_record_get_key_count(nw_txt_record_t?) -> Int",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                        "title": "func nw_txt_record_apply(nw_txt_record_t, nw_txt_record_applier_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_applier_t",
                        "title": "nw_txt_record_applier_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                        "title": "func nw_txt_record_access_key(nw_txt_record_t, UnsafePointer<CChar>, nw_txt_record_access_key_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_key_t",
                        "title": "nw_txt_record_access_key_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                        "title": "func nw_txt_record_find_key(nw_txt_record_t, UnsafePointer<CChar>) -> nw_txt_record_find_key_t",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Key Value Status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_invalid",
                            "title": "var nw_txt_record_find_key_invalid: nw_txt_record_find_key_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_not_present",
                            "title": "var nw_txt_record_find_key_not_present: nw_txt_record_find_key_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_no_value",
                            "title": "var nw_txt_record_find_key_no_value: nw_txt_record_find_key_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                            "title": "var nw_txt_record_find_key_empty_value: nw_txt_record_find_key_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                            "title": "var nw_txt_record_find_key_non_empty_value: nw_txt_record_find_key_t",
                            "type": "var"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_t/init(_:)",
                            "title": "init(UInt32)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_t/init(rawvalue:)",
                            "title": "init(rawValue: UInt32)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key_t/rawvalue",
                            "title": "var rawValue: UInt32",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/network/nw_txt_record_find_key_t",
                        "title": "nw_txt_record_find_key_t",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                        "title": "func nw_txt_record_is_equal(nw_txt_record_t?, nw_txt_record_t?) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                        "title": "func nw_txt_record_access_bytes(nw_txt_record_t, nw_txt_record_access_bytes_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_access_bytes_t",
                        "title": "nw_txt_record_access_bytes_t",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/network/nw_txt_record_t",
                    "title": "nw_txt_record_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Tracking Result Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browse_result_get_changes(_:_:)",
                    "title": "func nw_browse_result_get_changes(nw_browse_result_t?, nw_browse_result_t?) -> nw_browse_result_change_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Browse Result Change Flags",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_invalid",
                        "title": "var nw_browse_result_change_invalid: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_identical",
                        "title": "var nw_browse_result_change_identical: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_result_added",
                        "title": "var nw_browse_result_change_result_added: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_result_removed",
                        "title": "var nw_browse_result_change_result_removed: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_txt_record_changed",
                        "title": "var nw_browse_result_change_txt_record_changed: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_interface_added",
                        "title": "var nw_browse_result_change_interface_added: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_change_interface_removed",
                        "title": "var nw_browse_result_change_interface_removed: Int",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/network/nw_browse_result_change_t",
                    "title": "nw_browse_result_change_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_browse_result_t",
                "title": "nw_browse_result_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_browser_browse_results_changed_handler_t",
                "title": "nw_browser_browse_results_changed_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_browser_state_changed_handler_t",
                "title": "nw_browser_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nsbonjourservices",
                    "title": "NSBonjourServices",
                    "type": "typealias"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocalnetworkusagedescription",
                    "title": "NSLocalNetworkUsageDescription",
                    "type": "typealias"
                  },
                  {
                    "title": "Browsing for Services",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_create(_:_:)",
                    "title": "func nw_browser_create(nw_browse_descriptor_t, nw_parameters_t?) -> nw_browser_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Browse Descriptors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_create_bonjour_service(_:_:)",
                        "title": "func nw_browse_descriptor_create_bonjour_service(UnsafePointer<CChar>, UnsafePointer<CChar>?) -> nw_browse_descriptor_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_set_include_txt_record(_:_:)",
                        "title": "func nw_browse_descriptor_set_include_txt_record(nw_browse_descriptor_t, Bool)",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Browse Descriptors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_type(_:)",
                        "title": "func nw_browse_descriptor_get_bonjour_service_type(nw_browse_descriptor_t) -> UnsafePointer<CChar>",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_get_bonjour_service_domain(_:)",
                        "title": "func nw_browse_descriptor_get_bonjour_service_domain(nw_browse_descriptor_t) -> UnsafePointer<CChar>?",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_descriptor_get_include_txt_record(_:)",
                        "title": "func nw_browse_descriptor_get_include_txt_record(nw_browse_descriptor_t) -> Bool",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_browse_descriptor_t",
                    "title": "nw_browse_descriptor_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_browser_set_queue(_:_:)",
                    "title": "func nw_browser_set_queue(nw_browser_t, dispatch_queue_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_start(_:)",
                    "title": "func nw_browser_start(nw_browser_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_set_browse_results_changed_handler(_:_:)",
                    "title": "func nw_browser_set_browse_results_changed_handler(nw_browser_t, nw_browser_browse_results_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_browse_results_changed_handler_t",
                    "title": "nw_browser_browse_results_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Evaluating Browser Results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_copy_endpoint(_:)",
                        "title": "func nw_browse_result_copy_endpoint(nw_browse_result_t) -> nw_endpoint_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_enumerate_interfaces(_:_:)",
                        "title": "func nw_browse_result_enumerate_interfaces(nw_browse_result_t, (nw_interface_t) -> Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_enumerate_interface_t",
                        "title": "nw_browse_result_enumerate_interface_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_get_interfaces_count(_:)",
                        "title": "func nw_browse_result_get_interfaces_count(nw_browse_result_t) -> Int",
                        "type": "func"
                      },
                      {
                        "title": "Handling TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_copy_txt_record_object(_:)",
                        "title": "func nw_browse_result_copy_txt_record_object(nw_browse_result_t) -> nw_txt_record_t?",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating TXT Records",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_create_dictionary()",
                            "title": "func nw_txt_record_create_dictionary() -> nw_txt_record_t",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                            "title": "func nw_txt_record_create_with_bytes(UnsafePointer<UInt8>, Int) -> nw_txt_record_t",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_copy(_:)",
                            "title": "func nw_txt_record_copy(nw_txt_record_t?) -> nw_txt_record_t?",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                            "title": "func nw_txt_record_set_key(nw_txt_record_t, UnsafePointer<CChar>, UnsafePointer<UInt8>?, Int) -> Bool",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                            "title": "func nw_txt_record_remove_key(nw_txt_record_t, UnsafePointer<CChar>) -> Bool",
                            "type": "func"
                          },
                          {
                            "title": "Examining TXT Records",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                            "title": "func nw_txt_record_is_dictionary(nw_txt_record_t) -> Bool",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                            "title": "func nw_txt_record_get_key_count(nw_txt_record_t?) -> Int",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                            "title": "func nw_txt_record_apply(nw_txt_record_t, nw_txt_record_applier_t) -> Bool",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_applier_t",
                            "title": "nw_txt_record_applier_t",
                            "type": "typealias"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                            "title": "func nw_txt_record_access_key(nw_txt_record_t, UnsafePointer<CChar>, nw_txt_record_access_key_t) -> Bool",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_key_t",
                            "title": "nw_txt_record_access_key_t",
                            "type": "typealias"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                            "title": "func nw_txt_record_find_key(nw_txt_record_t, UnsafePointer<CChar>) -> nw_txt_record_find_key_t",
                            "type": "func"
                          },
                          {
                            "children": [
                              {
                                "title": "Key Value Status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_invalid",
                                "title": "var nw_txt_record_find_key_invalid: nw_txt_record_find_key_t",
                                "type": "var"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_not_present",
                                "title": "var nw_txt_record_find_key_not_present: nw_txt_record_find_key_t",
                                "type": "var"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_no_value",
                                "title": "var nw_txt_record_find_key_no_value: nw_txt_record_find_key_t",
                                "type": "var"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                                "title": "var nw_txt_record_find_key_empty_value: nw_txt_record_find_key_t",
                                "type": "var"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                                "title": "var nw_txt_record_find_key_non_empty_value: nw_txt_record_find_key_t",
                                "type": "var"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_t/init(_:)",
                                "title": "init(UInt32)",
                                "type": "init"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_t/init(rawvalue:)",
                                "title": "init(rawValue: UInt32)",
                                "type": "init"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/network/nw_txt_record_find_key_t/rawvalue",
                                "title": "var rawValue: UInt32",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/network/nw_txt_record_find_key_t",
                            "title": "nw_txt_record_find_key_t",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                            "title": "func nw_txt_record_is_equal(nw_txt_record_t?, nw_txt_record_t?) -> Bool",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                            "title": "func nw_txt_record_access_bytes(nw_txt_record_t, nw_txt_record_access_bytes_t) -> Bool",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/network/nw_txt_record_access_bytes_t",
                            "title": "nw_txt_record_access_bytes_t",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/network/nw_txt_record_t",
                        "title": "nw_txt_record_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Tracking Result Changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browse_result_get_changes(_:_:)",
                        "title": "func nw_browse_result_get_changes(nw_browse_result_t?, nw_browse_result_t?) -> nw_browse_result_change_t",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Browse Result Change Flags",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_invalid",
                            "title": "var nw_browse_result_change_invalid: Int",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_identical",
                            "title": "var nw_browse_result_change_identical: Int",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_result_added",
                            "title": "var nw_browse_result_change_result_added: Int",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_result_removed",
                            "title": "var nw_browse_result_change_result_removed: Int",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_txt_record_changed",
                            "title": "var nw_browse_result_change_txt_record_changed: Int",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_interface_added",
                            "title": "var nw_browse_result_change_interface_added: Int",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_browse_result_change_interface_removed",
                            "title": "var nw_browse_result_change_interface_removed: Int",
                            "type": "var"
                          }
                        ],
                        "path": "/documentation/network/nw_browse_result_change_t",
                        "title": "nw_browse_result_change_t",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/network/nw_browse_result_t",
                    "title": "nw_browse_result_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Managing Browsers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_set_state_changed_handler(_:_:)",
                    "title": "func nw_browser_set_state_changed_handler(nw_browser_t, nw_browser_state_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_state_changed_handler_t",
                    "title": "nw_browser_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_invalid",
                        "title": "var nw_browser_state_invalid: nw_browser_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_ready",
                        "title": "var nw_browser_state_ready: nw_browser_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_failed",
                        "title": "var nw_browser_state_failed: nw_browser_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_cancelled",
                        "title": "var nw_browser_state_cancelled: nw_browser_state_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_browser_state_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_browser_state_t",
                    "title": "nw_browser_state_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_browser_cancel(_:)",
                    "title": "func nw_browser_cancel(nw_browser_t)",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Browsers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_browser_copy_browse_descriptor(_:)",
                    "title": "func nw_browser_copy_browse_descriptor(nw_browser_t) -> nw_browse_descriptor_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_browser_copy_parameters(_:)",
                    "title": "func nw_browser_copy_parameters(nw_browser_t) -> nw_parameters_t",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_browser_t",
                "title": "nw_browser_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_boolean_event_handler_t",
                "title": "nw_connection_boolean_event_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_new_connection_handler_t",
                "title": "nw_connection_group_new_connection_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_receive_handler_t",
                "title": "nw_connection_group_receive_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_send_completion_t",
                "title": "nw_connection_group_send_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_group_state_changed_handler_t",
                "title": "nw_connection_group_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Establishing Group Connectivity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_create(_:_:)",
                    "title": "func nw_connection_group_create(nw_group_descriptor_t, nw_parameters_t) -> nw_connection_group_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Customizing Multicast Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_multicast_group_descriptor_set_disable_unicast_traffic(_:_:)",
                        "title": "func nw_multicast_group_descriptor_set_disable_unicast_traffic(nw_group_descriptor_t, Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_multicast_group_descriptor_get_disable_unicast_traffic(_:)",
                        "title": "func nw_multicast_group_descriptor_get_disable_unicast_traffic(nw_group_descriptor_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_multicast_group_descriptor_set_specific_source(_:_:)",
                        "title": "func nw_multicast_group_descriptor_set_specific_source(nw_group_descriptor_t, nw_endpoint_t)",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_group_descriptor_create_multicast(_:)",
                    "title": "func nw_group_descriptor_create_multicast(nw_endpoint_t) -> nw_group_descriptor_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_t",
                    "title": "nw_group_descriptor_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_add_endpoint(_:_:)",
                    "title": "func nw_group_descriptor_add_endpoint(nw_group_descriptor_t, nw_endpoint_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints(_:_:)",
                    "title": "func nw_group_descriptor_enumerate_endpoints(nw_group_descriptor_t, (nw_endpoint_t) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints_block_t",
                    "title": "nw_group_descriptor_enumerate_endpoints_block_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_set_queue(_:_:)",
                    "title": "func nw_connection_group_set_queue(nw_connection_group_t, dispatch_queue_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_start(_:)",
                    "title": "func nw_connection_group_start(nw_connection_group_t)",
                    "type": "func"
                  },
                  {
                    "title": "Sending and Receiving Group Messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_set_receive_handler(_:_:_:_:)",
                    "title": "func nw_connection_group_set_receive_handler(nw_connection_group_t, UInt32, Bool, nw_connection_group_receive_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_receive_handler_t",
                    "title": "nw_connection_group_receive_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_remote_endpoint_for_message(_:_:)",
                    "title": "func nw_connection_group_copy_remote_endpoint_for_message(nw_connection_group_t, nw_content_context_t) -> nw_endpoint_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_local_endpoint_for_message(_:_:)",
                    "title": "func nw_connection_group_copy_local_endpoint_for_message(nw_connection_group_t, nw_content_context_t) -> nw_endpoint_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_path_for_message(_:_:)",
                    "title": "func nw_connection_group_copy_path_for_message(nw_connection_group_t, nw_content_context_t) -> nw_path_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_reply(_:_:_:_:)",
                    "title": "func nw_connection_group_reply(nw_connection_group_t, nw_content_context_t, nw_content_context_t, dispatch_data_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_extract_connection_for_message(_:_:)",
                    "title": "func nw_connection_group_extract_connection_for_message(nw_connection_group_t, nw_content_context_t) -> nw_connection_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_send_message(_:_:_:_:_:)",
                    "title": "func nw_connection_group_send_message(nw_connection_group_t, dispatch_data_t?, nw_endpoint_t?, nw_content_context_t, nw_connection_group_send_completion_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_send_completion_t",
                    "title": "nw_connection_group_send_completion_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Managing Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_set_state_changed_handler(_:_:)",
                    "title": "func nw_connection_group_set_state_changed_handler(nw_connection_group_t, nw_connection_group_state_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_state_changed_handler_t",
                    "title": "nw_connection_group_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_invalid",
                        "title": "var nw_connection_group_state_invalid: nw_connection_group_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_waiting",
                        "title": "var nw_connection_group_state_waiting: nw_connection_group_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_ready",
                        "title": "var nw_connection_group_state_ready: nw_connection_group_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_failed",
                        "title": "var nw_connection_group_state_failed: nw_connection_group_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_cancelled",
                        "title": "var nw_connection_group_state_cancelled: nw_connection_group_state_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_group_state_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_connection_group_state_t",
                    "title": "nw_connection_group_state_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_cancel(_:)",
                    "title": "func nw_connection_group_cancel(nw_connection_group_t)",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_descriptor(_:)",
                    "title": "func nw_connection_group_copy_descriptor(nw_connection_group_t) -> nw_group_descriptor_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_group_copy_parameters(_:)",
                    "title": "func nw_connection_group_copy_parameters(nw_connection_group_t) -> nw_parameters_t",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_connection_group_t",
                "title": "nw_connection_group_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_path_event_handler_t",
                "title": "nw_connection_path_event_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_receive_completion_t",
                "title": "nw_connection_receive_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_send_completion_t",
                "title": "nw_connection_send_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_connection_state_changed_handler_t",
                "title": "nw_connection_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_create(_:_:)",
                    "title": "func nw_connection_create(nw_endpoint_t, nw_parameters_t) -> nw_connection_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_queue(_:_:)",
                    "title": "func nw_connection_set_queue(nw_connection_t, dispatch_queue_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_start(_:)",
                    "title": "func nw_connection_start(nw_connection_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_restart(_:)",
                    "title": "func nw_connection_restart(nw_connection_t)",
                    "type": "func"
                  },
                  {
                    "title": "Handling State Updates",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Connection States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_invalid",
                        "title": "var nw_connection_state_invalid: nw_connection_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_waiting",
                        "title": "var nw_connection_state_waiting: nw_connection_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_preparing",
                        "title": "var nw_connection_state_preparing: nw_connection_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_ready",
                        "title": "var nw_connection_state_ready: nw_connection_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_failed",
                        "title": "var nw_connection_state_failed: nw_connection_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_cancelled",
                        "title": "var nw_connection_state_cancelled: nw_connection_state_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_connection_state_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_connection_state_t",
                    "title": "nw_connection_state_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_state_changed_handler(_:_:)",
                    "title": "func nw_connection_set_state_changed_handler(nw_connection_t, nw_connection_state_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_state_changed_handler_t",
                    "title": "nw_connection_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Sending and Receiving Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_send(_:_:_:_:_:)",
                    "title": "func nw_connection_send(nw_connection_t, dispatch_data_t?, nw_content_context_t, Bool, nw_connection_send_completion_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_send_completion_t",
                    "title": "nw_connection_send_completion_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Custom Send Contexts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_create(_:)",
                        "title": "func nw_content_context_create(UnsafePointer<CChar>) -> nw_content_context_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_metadata_for_protocol(_:_:)",
                        "title": "func nw_content_context_set_metadata_for_protocol(nw_content_context_t, nw_protocol_metadata_t)",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting Metadata",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                            "title": "func nw_protocol_metadata_copy_definition(nw_protocol_metadata_t) -> nw_protocol_definition_t",
                            "type": "func"
                          }
                        ],
                        "path": "/documentation/network/nw_protocol_metadata_t",
                        "title": "nw_protocol_metadata_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_antecedent(_:_:)",
                        "title": "func nw_content_context_set_antecedent(nw_content_context_t, nw_content_context_t?)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_copy_antecedent(_:)",
                        "title": "func nw_content_context_copy_antecedent(nw_content_context_t) -> nw_content_context_t?",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_expiration_milliseconds(_:_:)",
                        "title": "func nw_content_context_set_expiration_milliseconds(nw_content_context_t, UInt64)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_expiration_milliseconds(_:)",
                        "title": "func nw_content_context_get_expiration_milliseconds(nw_content_context_t) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_relative_priority(_:_:)",
                        "title": "func nw_content_context_set_relative_priority(nw_content_context_t, Double)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_relative_priority(_:)",
                        "title": "func nw_content_context_get_relative_priority(nw_content_context_t) -> Double",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_set_is_final(_:_:)",
                        "title": "func nw_content_context_set_is_final(nw_content_context_t, Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_identifier(_:)",
                        "title": "func nw_content_context_get_identifier(nw_content_context_t) -> UnsafePointer<CChar>",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Receive Contexts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_get_is_final(_:)",
                        "title": "func nw_content_context_get_is_final(nw_content_context_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_copy_protocol_metadata(_:_:)",
                        "title": "func nw_content_context_copy_protocol_metadata(nw_content_context_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_content_context_foreach_protocol_metadata(_:_:)",
                        "title": "func nw_content_context_foreach_protocol_metadata(nw_content_context_t, (nw_protocol_definition_t, nw_protocol_metadata_t) -> Void)",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_content_context_t",
                    "title": "nw_content_context_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_receive(_:_:_:_:)",
                    "title": "func nw_connection_receive(nw_connection_t, UInt32, UInt32, nw_connection_receive_completion_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_receive_completion_t",
                    "title": "nw_connection_receive_completion_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_receive_message(_:_:)",
                    "title": "func nw_connection_receive_message(nw_connection_t, nw_connection_receive_completion_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_batch(_:_:)",
                    "title": "func nw_connection_batch(nw_connection_t, () -> Void)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_get_maximum_datagram_size(_:)",
                    "title": "func nw_connection_get_maximum_datagram_size(nw_connection_t) -> UInt32",
                    "type": "func"
                  },
                  {
                    "title": "Canceling Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_cancel(_:)",
                    "title": "func nw_connection_cancel(nw_connection_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_force_cancel(_:)",
                    "title": "func nw_connection_force_cancel(nw_connection_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_cancel_current_endpoint(_:)",
                    "title": "func nw_connection_cancel_current_endpoint(nw_connection_t)",
                    "type": "func"
                  },
                  {
                    "title": "Handling Path Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_current_path(_:)",
                    "title": "func nw_connection_copy_current_path(nw_connection_t) -> nw_path_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_path_changed_handler(_:_:)",
                    "title": "func nw_connection_set_path_changed_handler(nw_connection_t, nw_connection_path_event_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_path_event_handler_t",
                    "title": "nw_connection_path_event_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_viability_changed_handler(_:_:)",
                    "title": "func nw_connection_set_viability_changed_handler(nw_connection_t, nw_connection_boolean_event_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_set_better_path_available_handler(_:_:)",
                    "title": "func nw_connection_set_better_path_available_handler(nw_connection_t, nw_connection_boolean_event_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_boolean_event_handler_t",
                    "title": "nw_connection_boolean_event_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Collecting Connection Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting Connection Attempts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_duration_milliseconds(_:)",
                        "title": "func nw_establishment_report_get_duration_milliseconds(nw_establishment_report_t) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_previous_attempt_count(_:)",
                        "title": "func nw_establishment_report_get_previous_attempt_count(nw_establishment_report_t) -> UInt32",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_attempt_started_after_milliseconds(_:)",
                        "title": "func nw_establishment_report_get_attempt_started_after_milliseconds(nw_establishment_report_t) -> UInt64",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Resolution",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_enumerate_resolution_reports(_:_:)",
                        "title": "func nw_establishment_report_enumerate_resolution_reports(nw_establishment_report_t, (nw_resolution_report_t) -> Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_report_enumerator_t",
                        "title": "nw_report_resolution_report_enumerator_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_t",
                        "title": "nw_resolution_report_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_milliseconds(_:)",
                        "title": "func nw_resolution_report_get_milliseconds(nw_resolution_report_t) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_source(_:)",
                        "title": "func nw_resolution_report_get_source(nw_resolution_report_t) -> nw_report_resolution_source_t",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Resolution Sources",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_query",
                            "title": "var nw_report_resolution_source_query: nw_report_resolution_source_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_cache",
                            "title": "var nw_report_resolution_source_cache: nw_report_resolution_source_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_expired_cache",
                            "title": "var nw_report_resolution_source_expired_cache: nw_report_resolution_source_t",
                            "type": "var"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_t/init(_:)",
                            "title": "init(UInt32)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_t/init(rawvalue:)",
                            "title": "init(rawValue: UInt32)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_source_t/rawvalue",
                            "title": "var rawValue: UInt32",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/network/nw_report_resolution_source_t",
                        "title": "nw_report_resolution_source_t",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_protocol(_:)",
                        "title": "func nw_resolution_report_get_protocol(nw_resolution_report_t) -> nw_report_resolution_protocol_t",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Resolution Transports",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_unknown",
                            "title": "var nw_report_resolution_protocol_unknown: nw_report_resolution_protocol_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_udp",
                            "title": "var nw_report_resolution_protocol_udp: nw_report_resolution_protocol_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_tcp",
                            "title": "var nw_report_resolution_protocol_tcp: nw_report_resolution_protocol_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_tls",
                            "title": "var nw_report_resolution_protocol_tls: nw_report_resolution_protocol_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_https",
                            "title": "var nw_report_resolution_protocol_https: nw_report_resolution_protocol_t",
                            "type": "var"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_t/init(_:)",
                            "title": "init(UInt32)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_t/init(rawvalue:)",
                            "title": "init(rawValue: UInt32)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_report_resolution_protocol_t/rawvalue",
                            "title": "var rawValue: UInt32",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/network/nw_report_resolution_protocol_t",
                        "title": "nw_report_resolution_protocol_t",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_copy_successful_endpoint(_:)",
                        "title": "func nw_resolution_report_copy_successful_endpoint(nw_resolution_report_t) -> nw_endpoint_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_copy_preferred_endpoint(_:)",
                        "title": "func nw_resolution_report_copy_preferred_endpoint(nw_resolution_report_t) -> nw_endpoint_t",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_resolution_report_get_endpoint_count(_:)",
                        "title": "func nw_resolution_report_get_endpoint_count(nw_resolution_report_t) -> UInt32",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_enumerate_resolutions(_:_:)",
                        "title": "func nw_establishment_report_enumerate_resolutions(nw_establishment_report_t, (nw_report_resolution_source_t, UInt64, UInt32, nw_endpoint_t, nw_endpoint_t) -> Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_enumerator_t",
                        "title": "nw_report_resolution_enumerator_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Inspecting Protocol Handshakes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_enumerate_protocols(_:_:)",
                        "title": "func nw_establishment_report_enumerate_protocols(nw_establishment_report_t, (nw_protocol_definition_t, UInt64, UInt64) -> Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_report_protocol_enumerator_t",
                        "title": "nw_report_protocol_enumerator_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Checking for Proxies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_proxy_configured(_:)",
                        "title": "func nw_establishment_report_get_proxy_configured(nw_establishment_report_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_get_used_proxy(_:)",
                        "title": "func nw_establishment_report_get_used_proxy(nw_establishment_report_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_establishment_report_copy_proxy_endpoint(_:)",
                        "title": "func nw_establishment_report_copy_proxy_endpoint(nw_establishment_report_t) -> nw_endpoint_t?",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_establishment_report_t",
                    "title": "nw_establishment_report_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_access_establishment_report(_:_:_:)",
                    "title": "func nw_connection_access_establishment_report(nw_connection_t, dispatch_queue_t, nw_establishment_report_access_block_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_access_block_t",
                    "title": "nw_establishment_report_access_block_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Collecting Reports",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_collect(_:_:_:)",
                        "title": "func nw_data_transfer_report_collect(nw_data_transfer_report_t, dispatch_queue_t, nw_data_transfer_report_collect_block_t)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_collect_block_t",
                        "title": "nw_data_transfer_report_collect_block_t",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_state(_:)",
                        "title": "func nw_data_transfer_report_get_state(nw_data_transfer_report_t) -> nw_data_transfer_report_state_t",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Report States",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_collecting",
                            "title": "var nw_data_transfer_report_state_collecting: nw_data_transfer_report_state_t",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_collected",
                            "title": "var nw_data_transfer_report_state_collected: nw_data_transfer_report_state_t",
                            "type": "var"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_t/init(_:)",
                            "title": "init(UInt32)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_t/init(rawvalue:)",
                            "title": "init(rawValue: UInt32)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/network/nw_data_transfer_report_state_t/rawvalue",
                            "title": "var rawValue: UInt32",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/network/nw_data_transfer_report_state_t",
                        "title": "nw_data_transfer_report_state_t",
                        "type": "struct"
                      },
                      {
                        "title": "Identifying Paths",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_path_count(_:)",
                        "title": "func nw_data_transfer_report_get_path_count(nw_data_transfer_report_t) -> UInt32",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_duration_milliseconds(_:)",
                        "title": "func nw_data_transfer_report_get_duration_milliseconds(nw_data_transfer_report_t) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_copy_path_interface(_:_:)",
                        "title": "func nw_data_transfer_report_copy_path_interface(nw_data_transfer_report_t, UInt32) -> nw_interface_t",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Application Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_application_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_received_application_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_application_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_sent_application_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Transport Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_transport_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_received_transport_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_transport_duplicate_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_received_transport_duplicate_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_transport_out_of_order_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_received_transport_out_of_order_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_sent_transport_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(_:_:)",
                        "title": "func nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(_:_:)",
                        "title": "func nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_transport_rtt_variance(_:_:)",
                        "title": "func nw_data_transfer_report_get_transport_rtt_variance(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "title": "Inspecting Packet Metrics",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_received_ip_packet_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_received_ip_packet_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_get_sent_ip_packet_count(_:_:)",
                        "title": "func nw_data_transfer_report_get_sent_ip_packet_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_data_transfer_report_t",
                    "title": "nw_data_transfer_report_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_connection_create_new_data_transfer_report(_:)",
                    "title": "func nw_connection_create_new_data_transfer_report(nw_connection_t) -> nw_data_transfer_report_t",
                    "type": "func"
                  },
                  {
                    "title": "Copying Connection State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_protocol_metadata(_:_:)",
                    "title": "func nw_connection_copy_protocol_metadata(nw_connection_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_endpoint(_:)",
                    "title": "func nw_connection_copy_endpoint(nw_connection_t) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_parameters(_:)",
                    "title": "func nw_connection_copy_parameters(nw_connection_t) -> nw_parameters_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_connection_copy_description(_:)",
                    "title": "func nw_connection_copy_description(nw_connection_t) -> UnsafeMutablePointer<CChar>",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_connection_t",
                "title": "nw_connection_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Custom Send Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_create(_:)",
                    "title": "func nw_content_context_create(UnsafePointer<CChar>) -> nw_content_context_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_metadata_for_protocol(_:_:)",
                    "title": "func nw_content_context_set_metadata_for_protocol(nw_content_context_t, nw_protocol_metadata_t)",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting Metadata",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                        "title": "func nw_protocol_metadata_copy_definition(nw_protocol_metadata_t) -> nw_protocol_definition_t",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_protocol_metadata_t",
                    "title": "nw_protocol_metadata_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_antecedent(_:_:)",
                    "title": "func nw_content_context_set_antecedent(nw_content_context_t, nw_content_context_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_copy_antecedent(_:)",
                    "title": "func nw_content_context_copy_antecedent(nw_content_context_t) -> nw_content_context_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_expiration_milliseconds(_:_:)",
                    "title": "func nw_content_context_set_expiration_milliseconds(nw_content_context_t, UInt64)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_expiration_milliseconds(_:)",
                    "title": "func nw_content_context_get_expiration_milliseconds(nw_content_context_t) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_relative_priority(_:_:)",
                    "title": "func nw_content_context_set_relative_priority(nw_content_context_t, Double)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_relative_priority(_:)",
                    "title": "func nw_content_context_get_relative_priority(nw_content_context_t) -> Double",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_set_is_final(_:_:)",
                    "title": "func nw_content_context_set_is_final(nw_content_context_t, Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_identifier(_:)",
                    "title": "func nw_content_context_get_identifier(nw_content_context_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Receive Contexts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_get_is_final(_:)",
                    "title": "func nw_content_context_get_is_final(nw_content_context_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_copy_protocol_metadata(_:_:)",
                    "title": "func nw_content_context_copy_protocol_metadata(nw_content_context_t, nw_protocol_definition_t) -> nw_protocol_metadata_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_content_context_foreach_protocol_metadata(_:_:)",
                    "title": "func nw_content_context_foreach_protocol_metadata(nw_content_context_t, (nw_protocol_definition_t, nw_protocol_metadata_t) -> Void)",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_content_context_t",
                "title": "nw_content_context_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_data_transfer_report_collect_block_t",
                "title": "nw_data_transfer_report_collect_block_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Collecting Reports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_collect(_:_:_:)",
                    "title": "func nw_data_transfer_report_collect(nw_data_transfer_report_t, dispatch_queue_t, nw_data_transfer_report_collect_block_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_collect_block_t",
                    "title": "nw_data_transfer_report_collect_block_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_state(_:)",
                    "title": "func nw_data_transfer_report_get_state(nw_data_transfer_report_t) -> nw_data_transfer_report_state_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Report States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_collecting",
                        "title": "var nw_data_transfer_report_state_collecting: nw_data_transfer_report_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_collected",
                        "title": "var nw_data_transfer_report_state_collected: nw_data_transfer_report_state_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_data_transfer_report_state_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_data_transfer_report_state_t",
                    "title": "nw_data_transfer_report_state_t",
                    "type": "struct"
                  },
                  {
                    "title": "Identifying Paths",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_path_count(_:)",
                    "title": "func nw_data_transfer_report_get_path_count(nw_data_transfer_report_t) -> UInt32",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_duration_milliseconds(_:)",
                    "title": "func nw_data_transfer_report_get_duration_milliseconds(nw_data_transfer_report_t) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_copy_path_interface(_:_:)",
                    "title": "func nw_data_transfer_report_copy_path_interface(nw_data_transfer_report_t, UInt32) -> nw_interface_t",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Application Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_application_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_received_application_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_application_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_sent_application_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Transport Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_transport_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_received_transport_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_transport_duplicate_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_received_transport_duplicate_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_transport_out_of_order_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_received_transport_out_of_order_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_sent_transport_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(_:_:)",
                    "title": "func nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(_:_:)",
                    "title": "func nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_transport_rtt_variance(_:_:)",
                    "title": "func nw_data_transfer_report_get_transport_rtt_variance(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Packet Metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_received_ip_packet_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_received_ip_packet_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_data_transfer_report_get_sent_ip_packet_count(_:_:)",
                    "title": "func nw_data_transfer_report_get_sent_ip_packet_count(nw_data_transfer_report_t, UInt32) -> UInt64",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_data_transfer_report_t",
                "title": "nw_data_transfer_report_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Endpoint Types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Endpoint Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_invalid",
                        "title": "var nw_endpoint_type_invalid: nw_endpoint_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_address",
                        "title": "var nw_endpoint_type_address: nw_endpoint_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_host",
                        "title": "var nw_endpoint_type_host: nw_endpoint_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_bonjour_service",
                        "title": "var nw_endpoint_type_bonjour_service: nw_endpoint_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_url",
                        "title": "var nw_endpoint_type_url: nw_endpoint_type_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_endpoint_type_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_endpoint_type_t",
                    "title": "nw_endpoint_type_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_type(_:)",
                    "title": "func nw_endpoint_get_type(nw_endpoint_t) -> nw_endpoint_type_t",
                    "type": "func"
                  },
                  {
                    "title": "Host Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_host(_:_:)",
                    "title": "func nw_endpoint_create_host(UnsafePointer<CChar>, UnsafePointer<CChar>) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_hostname(_:)",
                    "title": "func nw_endpoint_get_hostname(nw_endpoint_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_port(_:)",
                    "title": "func nw_endpoint_get_port(nw_endpoint_t) -> UInt16",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_copy_port_string(_:)",
                    "title": "func nw_endpoint_copy_port_string(nw_endpoint_t) -> UnsafeMutablePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "title": "Address Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_address(_:)",
                    "title": "func nw_endpoint_create_address(UnsafePointer<sockaddr>) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_address(_:)",
                    "title": "func nw_endpoint_get_address(nw_endpoint_t) -> UnsafePointer<sockaddr>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_copy_address_string(_:)",
                    "title": "func nw_endpoint_copy_address_string(nw_endpoint_t) -> UnsafeMutablePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_copy_port_string(_:)",
                    "title": "func nw_endpoint_copy_port_string(nw_endpoint_t) -> UnsafeMutablePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "title": "Bonjour Service Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_bonjour_service(_:_:_:)",
                    "title": "func nw_endpoint_create_bonjour_service(UnsafePointer<CChar>, UnsafePointer<CChar>, UnsafePointer<CChar>) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_bonjour_service_name(_:)",
                    "title": "func nw_endpoint_get_bonjour_service_name(nw_endpoint_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_bonjour_service_type(_:)",
                    "title": "func nw_endpoint_get_bonjour_service_type(nw_endpoint_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_bonjour_service_domain(_:)",
                    "title": "func nw_endpoint_get_bonjour_service_domain(nw_endpoint_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "title": "URL Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_create_url(_:)",
                    "title": "func nw_endpoint_create_url(UnsafePointer<CChar>) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_endpoint_get_url(_:)",
                    "title": "func nw_endpoint_get_url(nw_endpoint_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_endpoint_t",
                "title": "nw_endpoint_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_error_get_error_domain(_:)",
                    "title": "func nw_error_get_error_domain(nw_error_t) -> nw_error_domain_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Domain Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_invalid",
                        "title": "var nw_error_domain_invalid: nw_error_domain_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_posix",
                        "title": "var nw_error_domain_posix: nw_error_domain_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_dns",
                        "title": "var nw_error_domain_dns: nw_error_domain_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_tls",
                        "title": "var nw_error_domain_tls: nw_error_domain_t",
                        "type": "var"
                      },
                      {
                        "title": "CFError Domain Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/knwerrordomainposix",
                        "title": "let kNWErrorDomainPOSIX: CFString",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/knwerrordomaindns",
                        "title": "let kNWErrorDomainDNS: CFString",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/knwerrordomaintls",
                        "title": "let kNWErrorDomainTLS: CFString",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_error_domain_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_error_domain_t",
                    "title": "nw_error_domain_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_error_get_error_code(_:)",
                    "title": "func nw_error_get_error_code(nw_error_t) -> Int32",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_error_copy_cf_error(_:)",
                    "title": "func nw_error_copy_cf_error(nw_error_t) -> Unmanaged<CFError>",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_error_t",
                "title": "nw_error_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_establishment_report_access_block_t",
                "title": "nw_establishment_report_access_block_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Connection Attempts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_duration_milliseconds(_:)",
                    "title": "func nw_establishment_report_get_duration_milliseconds(nw_establishment_report_t) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_previous_attempt_count(_:)",
                    "title": "func nw_establishment_report_get_previous_attempt_count(nw_establishment_report_t) -> UInt32",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_attempt_started_after_milliseconds(_:)",
                    "title": "func nw_establishment_report_get_attempt_started_after_milliseconds(nw_establishment_report_t) -> UInt64",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Resolution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_enumerate_resolution_reports(_:_:)",
                    "title": "func nw_establishment_report_enumerate_resolution_reports(nw_establishment_report_t, (nw_resolution_report_t) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_report_enumerator_t",
                    "title": "nw_report_resolution_report_enumerator_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_t",
                    "title": "nw_resolution_report_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_milliseconds(_:)",
                    "title": "func nw_resolution_report_get_milliseconds(nw_resolution_report_t) -> UInt64",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_source(_:)",
                    "title": "func nw_resolution_report_get_source(nw_resolution_report_t) -> nw_report_resolution_source_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Resolution Sources",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_query",
                        "title": "var nw_report_resolution_source_query: nw_report_resolution_source_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_cache",
                        "title": "var nw_report_resolution_source_cache: nw_report_resolution_source_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_expired_cache",
                        "title": "var nw_report_resolution_source_expired_cache: nw_report_resolution_source_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_source_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_report_resolution_source_t",
                    "title": "nw_report_resolution_source_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_protocol(_:)",
                    "title": "func nw_resolution_report_get_protocol(nw_resolution_report_t) -> nw_report_resolution_protocol_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Resolution Transports",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_unknown",
                        "title": "var nw_report_resolution_protocol_unknown: nw_report_resolution_protocol_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_udp",
                        "title": "var nw_report_resolution_protocol_udp: nw_report_resolution_protocol_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_tcp",
                        "title": "var nw_report_resolution_protocol_tcp: nw_report_resolution_protocol_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_tls",
                        "title": "var nw_report_resolution_protocol_tls: nw_report_resolution_protocol_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_https",
                        "title": "var nw_report_resolution_protocol_https: nw_report_resolution_protocol_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_report_resolution_protocol_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_report_resolution_protocol_t",
                    "title": "nw_report_resolution_protocol_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_copy_successful_endpoint(_:)",
                    "title": "func nw_resolution_report_copy_successful_endpoint(nw_resolution_report_t) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_copy_preferred_endpoint(_:)",
                    "title": "func nw_resolution_report_copy_preferred_endpoint(nw_resolution_report_t) -> nw_endpoint_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_resolution_report_get_endpoint_count(_:)",
                    "title": "func nw_resolution_report_get_endpoint_count(nw_resolution_report_t) -> UInt32",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_enumerate_resolutions(_:_:)",
                    "title": "func nw_establishment_report_enumerate_resolutions(nw_establishment_report_t, (nw_report_resolution_source_t, UInt64, UInt32, nw_endpoint_t, nw_endpoint_t) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_report_resolution_enumerator_t",
                    "title": "nw_report_resolution_enumerator_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Inspecting Protocol Handshakes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_enumerate_protocols(_:_:)",
                    "title": "func nw_establishment_report_enumerate_protocols(nw_establishment_report_t, (nw_protocol_definition_t, UInt64, UInt64) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_report_protocol_enumerator_t",
                    "title": "nw_report_protocol_enumerator_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Checking for Proxies",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_proxy_configured(_:)",
                    "title": "func nw_establishment_report_get_proxy_configured(nw_establishment_report_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_get_used_proxy(_:)",
                    "title": "func nw_establishment_report_get_used_proxy(nw_establishment_report_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_establishment_report_copy_proxy_endpoint(_:)",
                    "title": "func nw_establishment_report_copy_proxy_endpoint(nw_establishment_report_t) -> nw_endpoint_t?",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_establishment_report_t",
                "title": "nw_establishment_report_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_address_t",
                "title": "nw_ethernet_address_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_receive_handler_t",
                "title": "nw_ethernet_channel_receive_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_send_completion_t",
                "title": "nw_ethernet_channel_send_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ethernet_channel_state_changed_handler_t",
                "title": "nw_ethernet_channel_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Managing Ethernet Channels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_create(_:_:)",
                    "title": "func nw_ethernet_channel_create(UInt16, nw_interface_t) -> nw_ethernet_channel_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_set_queue(_:_:)",
                    "title": "func nw_ethernet_channel_set_queue(nw_ethernet_channel_t, dispatch_queue_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_start(_:)",
                    "title": "func nw_ethernet_channel_start(nw_ethernet_channel_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_cancel(_:)",
                    "title": "func nw_ethernet_channel_cancel(nw_ethernet_channel_t)",
                    "type": "func"
                  },
                  {
                    "title": "Handling State Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_set_state_changed_handler(_:_:)",
                    "title": "func nw_ethernet_channel_set_state_changed_handler(nw_ethernet_channel_t, nw_ethernet_channel_state_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_state_changed_handler_t",
                    "title": "nw_ethernet_channel_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_invalid",
                        "title": "var nw_ethernet_channel_state_invalid: nw_ethernet_channel_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_waiting",
                        "title": "var nw_ethernet_channel_state_waiting: nw_ethernet_channel_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_preparing",
                        "title": "var nw_ethernet_channel_state_preparing: nw_ethernet_channel_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_ready",
                        "title": "var nw_ethernet_channel_state_ready: nw_ethernet_channel_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_failed",
                        "title": "var nw_ethernet_channel_state_failed: nw_ethernet_channel_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_cancelled",
                        "title": "var nw_ethernet_channel_state_cancelled: nw_ethernet_channel_state_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_ethernet_channel_state_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_ethernet_channel_state_t",
                    "title": "nw_ethernet_channel_state_t",
                    "type": "struct"
                  },
                  {
                    "title": "Sending and Receiving Ethernet Frames",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_send(_:_:_:_:_:)",
                    "title": "func nw_ethernet_channel_send(nw_ethernet_channel_t, dispatch_data_t, UInt16, UnsafeMutablePointer<UInt8>, nw_ethernet_channel_send_completion_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_send_completion_t",
                    "title": "nw_ethernet_channel_send_completion_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_set_receive_handler(_:_:)",
                    "title": "func nw_ethernet_channel_set_receive_handler(nw_ethernet_channel_t, nw_ethernet_channel_receive_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_channel_receive_handler_t",
                    "title": "nw_ethernet_channel_receive_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_ethernet_address_t",
                    "title": "nw_ethernet_address_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_ethernet_channel_t",
                "title": "nw_ethernet_channel_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_block_t",
                "title": "nw_framer_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_cleanup_handler_t",
                "title": "nw_framer_cleanup_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_input_handler_t",
                "title": "nw_framer_input_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_message_dispose_value_t",
                "title": "nw_framer_message_dispose_value_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_message_t",
                "title": "nw_framer_message_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_output_handler_t",
                "title": "nw_framer_output_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_parse_completion_t",
                "title": "nw_framer_parse_completion_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_start_handler_t",
                "title": "nw_framer_start_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_stop_handler_t",
                "title": "nw_framer_stop_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_t",
                "title": "nw_framer_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_framer_wakeup_handler_t",
                "title": "nw_framer_wakeup_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_enumerate_endpoints_block_t",
                "title": "nw_group_descriptor_enumerate_endpoints_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_group_descriptor_t",
                "title": "nw_group_descriptor_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Network Interface Types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an interface type instance",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Interface types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_wifi",
                        "title": "var nw_interface_type_wifi: nw_interface_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_cellular",
                        "title": "var nw_interface_type_cellular: nw_interface_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_wired",
                        "title": "var nw_interface_type_wired: nw_interface_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_loopback",
                        "title": "var nw_interface_type_loopback: nw_interface_type_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_other",
                        "title": "var nw_interface_type_other: nw_interface_type_t",
                        "type": "var"
                      },
                      {
                        "title": "Accessing the raw value",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_interface_type_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_interface_type_t",
                    "title": "nw_interface_type_t",
                    "type": "struct"
                  },
                  {
                    "title": "Inspecting Interfaces",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_interface_get_type(_:)",
                    "title": "func nw_interface_get_type(nw_interface_t) -> nw_interface_type_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_interface_get_name(_:)",
                    "title": "func nw_interface_get_name(nw_interface_t) -> UnsafePointer<CChar>",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_interface_get_index(_:)",
                    "title": "func nw_interface_get_index(nw_interface_t) -> UInt32",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_interface_t",
                "title": "nw_interface_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_advertised_endpoint_changed_handler_t",
                "title": "nw_listener_advertised_endpoint_changed_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_new_connection_group_handler_t",
                "title": "nw_listener_new_connection_group_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_new_connection_handler_t",
                "title": "nw_listener_new_connection_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_listener_state_changed_handler_t",
                "title": "nw_listener_state_changed_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Listeners",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_create(_:)",
                    "title": "func nw_listener_create(nw_parameters_t) -> nw_listener_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_create_with_port(_:_:)",
                    "title": "func nw_listener_create_with_port(UnsafePointer<CChar>, nw_parameters_t) -> nw_listener_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_create_with_connection(_:_:)",
                    "title": "func nw_listener_create_with_connection(nw_connection_t, nw_parameters_t) -> nw_listener_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_queue(_:_:)",
                    "title": "func nw_listener_set_queue(nw_listener_t, dispatch_queue_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_start(_:)",
                    "title": "func nw_listener_start(nw_listener_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_get_port(_:)",
                    "title": "func nw_listener_get_port(nw_listener_t) -> UInt16",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_cancel(_:)",
                    "title": "func nw_listener_cancel(nw_listener_t)",
                    "type": "func"
                  },
                  {
                    "title": "Receiving Connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_new_connection_handler(_:_:)",
                    "title": "func nw_listener_set_new_connection_handler(nw_listener_t, nw_listener_new_connection_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_new_connection_handler_t",
                    "title": "nw_listener_new_connection_handler_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_new_connection_limit(_:_:)",
                    "title": "func nw_listener_set_new_connection_limit(nw_listener_t, UInt32)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_get_new_connection_limit(_:)",
                    "title": "func nw_listener_get_new_connection_limit(nw_listener_t) -> UInt32",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_infinite_connection_limit",
                    "title": "var NW_LISTENER_INFINITE_CONNECTION_LIMIT: UInt32",
                    "type": "var"
                  },
                  {
                    "title": "Advertising Bonjour Services",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nsbonjourservices",
                    "title": "NSBonjourServices",
                    "type": "typealias"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocalnetworkusagedescription",
                    "title": "NSLocalNetworkUsageDescription",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_advertise_descriptor(_:_:)",
                    "title": "func nw_listener_set_advertise_descriptor(nw_listener_t, nw_advertise_descriptor_t?)",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Advertising Bonjour Services",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_create_bonjour_service(_:_:_:)",
                        "title": "func nw_advertise_descriptor_create_bonjour_service(UnsafePointer<CChar>?, UnsafePointer<CChar>, UnsafePointer<CChar>?) -> nw_advertise_descriptor_t?",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_set_no_auto_rename(_:_:)",
                        "title": "func nw_advertise_descriptor_set_no_auto_rename(nw_advertise_descriptor_t, Bool)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_get_no_auto_rename(_:)",
                        "title": "func nw_advertise_descriptor_get_no_auto_rename(nw_advertise_descriptor_t) -> Bool",
                        "type": "func"
                      },
                      {
                        "title": "Configuring TXT Records",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_set_txt_record(_:_:_:)",
                        "title": "func nw_advertise_descriptor_set_txt_record(nw_advertise_descriptor_t, UnsafeRawPointer?, Int)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_set_txt_record_object(_:_:)",
                        "title": "func nw_advertise_descriptor_set_txt_record_object(nw_advertise_descriptor_t, nw_txt_record_t?)",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/network/nw_advertise_descriptor_copy_txt_record_object(_:)",
                        "title": "func nw_advertise_descriptor_copy_txt_record_object(nw_advertise_descriptor_t) -> nw_txt_record_t?",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/network/nw_advertise_descriptor_t",
                    "title": "nw_advertise_descriptor_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_advertised_endpoint_changed_handler(_:_:)",
                    "title": "func nw_listener_set_advertised_endpoint_changed_handler(nw_listener_t, nw_listener_advertised_endpoint_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_advertised_endpoint_changed_handler_t",
                    "title": "nw_listener_advertised_endpoint_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Handling State Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_listener_set_state_changed_handler(_:_:)",
                    "title": "func nw_listener_set_state_changed_handler(nw_listener_t, nw_listener_state_changed_handler_t?)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_listener_state_changed_handler_t",
                    "title": "nw_listener_state_changed_handler_t",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Listener States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_invalid",
                        "title": "var nw_listener_state_invalid: nw_listener_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_waiting",
                        "title": "var nw_listener_state_waiting: nw_listener_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_ready",
                        "title": "var nw_listener_state_ready: nw_listener_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_failed",
                        "title": "var nw_listener_state_failed: nw_listener_state_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_cancelled",
                        "title": "var nw_listener_state_cancelled: nw_listener_state_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_listener_state_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_listener_state_t",
                    "title": "nw_listener_state_t",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/network/nw_listener_t",
                "title": "nw_listener_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_object_t",
                "title": "nw_object_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_gateways_block_t",
                "title": "nw_path_enumerate_gateways_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_enumerate_interfaces_block_t",
                "title": "nw_path_enumerate_interfaces_block_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_monitor_cancel_handler_t",
                "title": "nw_path_monitor_cancel_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating Path Monitors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_create()",
                    "title": "func nw_path_monitor_create() -> nw_path_monitor_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_create_with_type(_:)",
                    "title": "func nw_path_monitor_create_with_type(nw_interface_type_t) -> nw_path_monitor_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_prohibit_interface_type(_:_:)",
                    "title": "func nw_path_monitor_prohibit_interface_type(nw_path_monitor_t, nw_interface_type_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_set_queue(_:_:)",
                    "title": "func nw_path_monitor_set_queue(nw_path_monitor_t, dispatch_queue_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_start(_:)",
                    "title": "func nw_path_monitor_start(nw_path_monitor_t)",
                    "type": "func"
                  },
                  {
                    "title": "Handling Path Updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_set_update_handler(_:_:)",
                    "title": "func nw_path_monitor_set_update_handler(nw_path_monitor_t, nw_path_monitor_update_handler_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_update_handler_t",
                    "title": "nw_path_monitor_update_handler_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Canceling Path Monitors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_cancel(_:)",
                    "title": "func nw_path_monitor_cancel(nw_path_monitor_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_set_cancel_handler(_:_:)",
                    "title": "func nw_path_monitor_set_cancel_handler(nw_path_monitor_t, nw_path_monitor_cancel_handler_t)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_monitor_cancel_handler_t",
                    "title": "nw_path_monitor_cancel_handler_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_path_monitor_t",
                "title": "nw_path_monitor_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_path_monitor_update_handler_t",
                "title": "nw_path_monitor_update_handler_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Checking Path Availability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_get_status(_:)",
                    "title": "func nw_path_get_status(nw_path_t) -> nw_path_status_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Status Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_invalid",
                        "title": "var nw_path_status_invalid: nw_path_status_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_unsatisfied",
                        "title": "var nw_path_status_unsatisfied: nw_path_status_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_satisfied",
                        "title": "var nw_path_status_satisfied: nw_path_status_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_satisfiable",
                        "title": "var nw_path_status_satisfiable: nw_path_status_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_path_status_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_path_status_t",
                    "title": "nw_path_status_t",
                    "type": "struct"
                  },
                  {
                    "title": "Inspecting Interfaces",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_uses_interface_type(_:_:)",
                    "title": "func nw_path_uses_interface_type(nw_path_t, nw_interface_type_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_interfaces(_:_:)",
                    "title": "func nw_path_enumerate_interfaces(nw_path_t, (nw_interface_t) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_interfaces_block_t",
                    "title": "nw_path_enumerate_interfaces_block_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_gateways(_:_:)",
                    "title": "func nw_path_enumerate_gateways(nw_path_t, (nw_endpoint_t) -> Bool)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_enumerate_gateways_block_t",
                    "title": "nw_path_enumerate_gateways_block_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Checking Path Capabilities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_has_ipv4(_:)",
                    "title": "func nw_path_has_ipv4(nw_path_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_has_ipv6(_:)",
                    "title": "func nw_path_has_ipv6(nw_path_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_has_dns(_:)",
                    "title": "func nw_path_has_dns(nw_path_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_is_constrained(_:)",
                    "title": "func nw_path_is_constrained(nw_path_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_is_expensive(_:)",
                    "title": "func nw_path_is_expensive(nw_path_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "title": "Comparing Paths",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_is_equal(_:_:)",
                    "title": "func nw_path_is_equal(nw_path_t, nw_path_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "title": "Inspecting Connected Paths",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_path_copy_effective_local_endpoint(_:)",
                    "title": "func nw_path_copy_effective_local_endpoint(nw_path_t) -> nw_endpoint_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_path_copy_effective_remote_endpoint(_:)",
                    "title": "func nw_path_copy_effective_remote_endpoint(nw_path_t) -> nw_endpoint_t?",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_path_t",
                "title": "nw_path_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting Metadata",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_protocol_metadata_copy_definition(_:)",
                    "title": "func nw_protocol_metadata_copy_definition(nw_protocol_metadata_t) -> nw_protocol_definition_t",
                    "type": "func"
                  }
                ],
                "path": "/documentation/network/nw_protocol_metadata_t",
                "title": "nw_protocol_metadata_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_proxy_domain_enumerator_t",
                "title": "nw_proxy_domain_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_report_protocol_enumerator_t",
                "title": "nw_report_protocol_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_report_resolution_enumerator_t",
                "title": "nw_report_resolution_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_report_resolution_report_enumerator_t",
                "title": "nw_report_resolution_report_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_resolution_report_t",
                "title": "nw_resolution_report_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_bytes_t",
                "title": "nw_txt_record_access_bytes_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_txt_record_access_key_t",
                "title": "nw_txt_record_access_key_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_txt_record_applier_t",
                "title": "nw_txt_record_applier_t",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_create_dictionary()",
                    "title": "func nw_txt_record_create_dictionary() -> nw_txt_record_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_create_with_bytes(_:_:)",
                    "title": "func nw_txt_record_create_with_bytes(UnsafePointer<UInt8>, Int) -> nw_txt_record_t",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_copy(_:)",
                    "title": "func nw_txt_record_copy(nw_txt_record_t?) -> nw_txt_record_t?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_set_key(_:_:_:_:)",
                    "title": "func nw_txt_record_set_key(nw_txt_record_t, UnsafePointer<CChar>, UnsafePointer<UInt8>?, Int) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_remove_key(_:_:)",
                    "title": "func nw_txt_record_remove_key(nw_txt_record_t, UnsafePointer<CChar>) -> Bool",
                    "type": "func"
                  },
                  {
                    "title": "Examining TXT Records",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_is_dictionary(_:)",
                    "title": "func nw_txt_record_is_dictionary(nw_txt_record_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_get_key_count(_:)",
                    "title": "func nw_txt_record_get_key_count(nw_txt_record_t?) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_apply(_:_:)",
                    "title": "func nw_txt_record_apply(nw_txt_record_t, nw_txt_record_applier_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_applier_t",
                    "title": "nw_txt_record_applier_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_key(_:_:_:)",
                    "title": "func nw_txt_record_access_key(nw_txt_record_t, UnsafePointer<CChar>, nw_txt_record_access_key_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_key_t",
                    "title": "nw_txt_record_access_key_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_find_key(_:_:)",
                    "title": "func nw_txt_record_find_key(nw_txt_record_t, UnsafePointer<CChar>) -> nw_txt_record_find_key_t",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Key Value Status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_invalid",
                        "title": "var nw_txt_record_find_key_invalid: nw_txt_record_find_key_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_not_present",
                        "title": "var nw_txt_record_find_key_not_present: nw_txt_record_find_key_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_no_value",
                        "title": "var nw_txt_record_find_key_no_value: nw_txt_record_find_key_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_empty_value",
                        "title": "var nw_txt_record_find_key_empty_value: nw_txt_record_find_key_t",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_non_empty_value",
                        "title": "var nw_txt_record_find_key_non_empty_value: nw_txt_record_find_key_t",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_t/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_t/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/network/nw_txt_record_find_key_t/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/network/nw_txt_record_find_key_t",
                    "title": "nw_txt_record_find_key_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_is_equal(_:_:)",
                    "title": "func nw_txt_record_is_equal(nw_txt_record_t?, nw_txt_record_t?) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_bytes(_:_:)",
                    "title": "func nw_txt_record_access_bytes(nw_txt_record_t, nw_txt_record_access_bytes_t) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/network/nw_txt_record_access_bytes_t",
                    "title": "nw_txt_record_access_bytes_t",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/network/nw_txt_record_t",
                "title": "nw_txt_record_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_additional_header_enumerator_t",
                "title": "nw_ws_additional_header_enumerator_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_client_request_handler_t",
                "title": "nw_ws_client_request_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_pong_handler_t",
                "title": "nw_ws_pong_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_request_t",
                "title": "nw_ws_request_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_response_t",
                "title": "nw_ws_response_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/network/nw_ws_subprotocol_enumerator_t",
                "title": "nw_ws_subprotocol_enumerator_t",
                "type": "typealias"
              }
            ],
            "path": "/documentation/network/network-data-types",
            "title": "Network Data Types",
            "type": "collection"
          }
        ],
        "path": "/documentation/network",
        "title": "Network",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
